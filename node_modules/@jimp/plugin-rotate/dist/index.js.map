{"version":3,"file":"index.js","names":["advancedRotate","deg","mode","rad","Math","PI","cosine","cos","sine","sin","w","bitmap","width","h","height","ceil","abs","c","cloneQuiet","scanQuiet","x","y","idx","data","writeUInt32BE","_background","max","resize","blit","bW","bH","dstBuffer","Buffer","alloc","length","createTranslationFunction","deltaX","deltaY","translate2Cartesian","translate2Screen","cartesian","source","dstIdx","srcIdx","pixelRGBA","readUInt32BE","crop","rotate","cb","throwError","call","isNodePattern"],"sources":["../src/index.js"],"sourcesContent":["import { throwError, isNodePattern } from \"@jimp/utils\";\n\n/**\n * Rotates an image counter-clockwise by an arbitrary number of degrees. NB: 'this' must be a Jimp object.\n * @param {number} deg the number of degrees to rotate the image by\n * @param {string|boolean} mode (optional) resize mode or a boolean, if false then the width and height of the image will not be changed\n */\nfunction advancedRotate(deg, mode) {\n  deg %= 360;\n  const rad = (deg * Math.PI) / 180;\n  const cosine = Math.cos(rad);\n  const sine = Math.sin(rad);\n\n  // the final width and height will change if resize == true\n  let w = this.bitmap.width;\n  let h = this.bitmap.height;\n\n  if (mode === true || typeof mode === \"string\") {\n    // resize the image to it maximum dimension and blit the existing image\n    // onto the center so that when it is rotated the image is kept in bounds\n\n    // http://stackoverflow.com/questions/3231176/how-to-get-size-of-a-rotated-rectangle\n    // Plus 1 border pixel to ensure to show all rotated result for some cases.\n    w =\n      Math.ceil(\n        Math.abs(this.bitmap.width * cosine) +\n          Math.abs(this.bitmap.height * sine)\n      ) + 1;\n    h =\n      Math.ceil(\n        Math.abs(this.bitmap.width * sine) +\n          Math.abs(this.bitmap.height * cosine)\n      ) + 1;\n    // Ensure destination to have even size to a better result.\n    if (w % 2 !== 0) {\n      w++;\n    }\n\n    if (h % 2 !== 0) {\n      h++;\n    }\n\n    const c = this.cloneQuiet();\n    this.scanQuiet(\n      0,\n      0,\n      this.bitmap.width,\n      this.bitmap.height,\n      function (x, y, idx) {\n        this.bitmap.data.writeUInt32BE(this._background, idx);\n      }\n    );\n\n    const max = Math.max(w, h, this.bitmap.width, this.bitmap.height);\n    this.resize(max, max, mode);\n\n    this.blit(\n      c,\n      this.bitmap.width / 2 - c.bitmap.width / 2,\n      this.bitmap.height / 2 - c.bitmap.height / 2\n    );\n  }\n\n  const bW = this.bitmap.width;\n  const bH = this.bitmap.height;\n  const dstBuffer = Buffer.alloc(this.bitmap.data.length);\n\n  function createTranslationFunction(deltaX, deltaY) {\n    return function (x, y) {\n      return {\n        x: x + deltaX,\n        y: y + deltaY,\n      };\n    };\n  }\n\n  const translate2Cartesian = createTranslationFunction(-(bW / 2), -(bH / 2));\n  const translate2Screen = createTranslationFunction(\n    bW / 2 + 0.5,\n    bH / 2 + 0.5\n  );\n\n  for (let y = 1; y <= bH; y++) {\n    for (let x = 1; x <= bW; x++) {\n      const cartesian = translate2Cartesian(x, y);\n      const source = translate2Screen(\n        cosine * cartesian.x - sine * cartesian.y,\n        cosine * cartesian.y + sine * cartesian.x\n      );\n      const dstIdx = (bW * (y - 1) + x - 1) << 2;\n\n      if (source.x >= 0 && source.x < bW && source.y >= 0 && source.y < bH) {\n        const srcIdx = ((bW * (source.y | 0) + source.x) | 0) << 2;\n        const pixelRGBA = this.bitmap.data.readUInt32BE(srcIdx);\n        dstBuffer.writeUInt32BE(pixelRGBA, dstIdx);\n      } else {\n        // reset off-image pixels\n        dstBuffer.writeUInt32BE(this._background, dstIdx);\n      }\n    }\n  }\n\n  this.bitmap.data = dstBuffer;\n\n  if (mode === true || typeof mode === \"string\") {\n    // now crop the image to the final size\n    const x = bW / 2 - w / 2;\n    const y = bH / 2 - h / 2;\n    this.crop(x, y, w, h);\n  }\n}\n\nexport default () => ({\n  /**\n   * Rotates the image counter-clockwise by a number of degrees. By default the width and height of the image will be resized appropriately.\n   * @param {number} deg the number of degrees to rotate the image by\n   * @param {string|boolean} mode (optional) resize mode or a boolean, if false then the width and height of the image will not be changed\n   * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n   * @returns {Jimp} this for chaining of methods\n   */\n  rotate(deg, mode, cb) {\n    // enable overloading\n    if (typeof mode === \"undefined\" || mode === null) {\n      // e.g. image.resize(120);\n      // e.g. image.resize(120, null, cb);\n      // e.g. image.resize(120, undefined, cb);\n      mode = true;\n    }\n\n    if (typeof mode === \"function\" && typeof cb === \"undefined\") {\n      // e.g. image.resize(120, cb);\n      cb = mode;\n      mode = true;\n    }\n\n    if (typeof deg !== \"number\") {\n      return throwError.call(this, \"deg must be a number\", cb);\n    }\n\n    if (typeof mode !== \"boolean\" && typeof mode !== \"string\") {\n      return throwError.call(this, \"mode must be a boolean or a string\", cb);\n    }\n\n    advancedRotate.call(this, deg, mode, cb);\n\n    if (isNodePattern(cb)) {\n      cb.call(this, null, this);\n    }\n\n    return this;\n  },\n});\n"],"mappings":"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"}