{"version":3,"file":"adblocker.umd.min.js","sources":["../../../node_modules/@remusao/trie/index.ts","../../../node_modules/@remusao/smaz-compress/index.ts","../../../node_modules/@remusao/smaz-decompress/index.ts","../../../node_modules/@remusao/smaz/index.ts","../src/codebooks/cosmetic-selector.ts","../src/codebooks/network-csp.ts","../src/codebooks/network-filter.ts","../src/codebooks/network-hostname.ts","../src/codebooks/network-redirect.ts","../src/codebooks/raw-network.ts","../src/codebooks/raw-cosmetic.ts","../src/compression.ts","../src/crc32.ts","../src/punycode.ts","../src/data-view.ts","../src/queue-microtask.ts","../src/config.ts","../src/events.ts","../src/fetch.ts","../src/filters/dsl.ts","../../adblocker-extended-selectors/src/parse.ts","../../adblocker-extended-selectors/src/types.ts","../../adblocker-extended-selectors/src/extended.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/documents.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/fonts.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/images.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/medias.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/scripts.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/stylesheets.ts","../../../node_modules/tldts-core/src/extract-hostname.ts","../../../node_modules/tldts-core/src/is-valid.ts","../../../node_modules/tldts-core/src/options.ts","../../../node_modules/tldts-core/src/factory.ts","../../../node_modules/tldts-core/src/is-ip.ts","../../../node_modules/tldts-core/src/domain.ts","../../../node_modules/tldts-core/src/subdomain.ts","../../../node_modules/tldts-core/src/domain-without-suffix.ts","../../../node_modules/tldts-experimental/src/data/hashes.ts","../../../node_modules/tldts-experimental/src/packed-hashes.ts","../../../node_modules/tldts-core/src/lookup/fast-path.ts","../../../node_modules/tldts-experimental/index.ts","../src/tokens-buffer.ts","../src/utils.ts","../src/request.ts","../../../node_modules/@remusao/guess-url-type/index.ts","../../../node_modules/@remusao/guess-url-type/src/extname.ts","../src/engine/domains.ts","../src/html-filtering.ts","../src/filters/cosmetic.ts","../src/filters/network.ts","../src/lists.ts","../../../node_modules/@remusao/small/src/flv.ts","../../../node_modules/@remusao/small/src/gif.ts","../../../node_modules/@remusao/small/src/html.ts","../../../node_modules/@remusao/small/src/ico.ts","../../../node_modules/@remusao/small/src/jpeg.ts","../../../node_modules/@remusao/small/src/javascript.ts","../../../node_modules/@remusao/small/src/json.ts","../../../node_modules/@remusao/small/src/mp3.ts","../../../node_modules/@remusao/small/src/mp4.ts","../../../node_modules/@remusao/small/src/pdf.ts","../../../node_modules/@remusao/small/src/png.ts","../../../node_modules/@remusao/small/src/svg.ts","../../../node_modules/@remusao/small/src/txt.ts","../../../node_modules/@remusao/small/src/wav.ts","../../../node_modules/@remusao/small/src/webm.ts","../../../node_modules/@remusao/small/src/webp.ts","../../../node_modules/@remusao/small/src/wmv.ts","../../../node_modules/@remusao/small/index.ts","../src/resources.ts","../src/compact-set.ts","../src/engine/optimizer.ts","../src/engine/reverse-index.ts","../src/engine/bucket/filters.ts","../src/engine/bucket/cosmetic.ts","../src/engine/bucket/network.ts","../src/engine/engine.ts","../src/encoding.ts"],"sourcesContent":[null,null,null,null,"/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \"div[style=\\\"position: absolute; inset: 0px; overflow: hidden; z-index: 160; background: transparent none repeat scroll 0% 0%; display: block;\\\"]\",\n  \"div[style=\\\"position: fixed; display: block; width: 100%; height: 100%; inset: 0px; background-color: rgba(0, 0, 0, 0); z-index: 300000;\\\"]\",\n  \"acs, document.createElement, /l\\\\.parentNode\\\\.insertBefore\\\\(s/\",\n  \":not([style^=\\\"position: absolute; left: -5000px\\\"])\",\n  \"acis, document.querySelectorAll, popMagic\",\n  \"://paid.outbrain.com/network/redir?\\\"]\",\n  \"aopr, app_vars.force_disable_adblock\",\n  \"addEventListener, google_ad_client\",\n  \"acis, document.getElementById, \",\n  \"acis, document.createElement, \",\n  \"String.prototype.charCodeAt, \",\n  \"aopr, document.dispatchEvent\",\n  \"acis, String.fromCharCode, \",\n  \"nosiif, visibility, 1000\",\n  \"set, blurred, false\",\n  \"aeld, DOMContentLo\",\n  \"decodeURIComponent\",\n  \"[target=\\\"_blank\\\"]\",\n  \"[href^=\\\"https://\",\n  \"disableSelection\",\n  \"[href^=\\\"http://\",\n  \"[href=\\\"https://\",\n  \"set, flashvars.\",\n  \"#custom_html-\",\n  \"BlockDetected\",\n  \"no-fetch-if, \",\n  \"div[class^=\\\"\",\n  \"dvertisement\",\n  \"nextFunction\",\n  \"notification\",\n  \"Notification\",\n  \"contextmenu\",\n  \"no-xhr-if, \",\n  \", noopFunc\",\n  \":has-text(\",\n  \"AaDetector\",\n  \"aopw, _pop\",\n  \"background\",\n  \"nano-sib, \",\n  \"-backdrop\",\n  \"[href^=\\\"/\",\n  \"container\",\n  \"decodeURI\",\n  \"div[id^=\\\"\",\n  \"div[style\",\n  \"document.\",\n  \"ompliance\",\n  \"placehold\",\n  \"rectangle\",\n  \"sbygoogle\",\n  \"[href*=\\\"\",\n  \"#wpsafe-\",\n  \"disclaim\",\n  \"nostif, \",\n  \"nowebrtc\",\n  \"skyscrap\",\n  \".com/\\\"]\",\n  \"300x250\",\n  \"article\",\n  \"consent\",\n  \"Contain\",\n  \"content\",\n  \"message\",\n  \"Message\",\n  \"privacy\",\n  \"Privacy\",\n  \"sidebar\",\n  \"sponsor\",\n  \"wrapper\",\n  \"[class\",\n  \"[data-\",\n  \"728x90\",\n  \"accept\",\n  \"Accept\",\n  \"acis, \",\n  \"aeld, \",\n  \"aopr, \",\n  \"aopw, \",\n  \"banner\",\n  \"bottom\",\n  \"cookie\",\n  \"Cookie\",\n  \"google\",\n  \"notice\",\n  \"nowoif\",\n  \"policy\",\n  \"Policy\",\n  \"sticky\",\n  \"widget\",\n  \":has(\",\n  \":not(\",\n  \"block\",\n  \"Block\",\n  \"click\",\n  \"cript\",\n  \"fixed\",\n  \"frame\",\n  \"modal\",\n  \"popup\",\n  \"set, \",\n  \"width\",\n  \"Wrapp\",\n  \"0px;\",\n  \"body\",\n  \"down\",\n  \"foot\",\n  \"gdpr\",\n  \"html\",\n  \"ight\",\n  \"page\",\n  \"show\",\n  \"true\",\n  \"view\",\n  \"www.\",\n  \" > \",\n  \"box\",\n  \"Box\",\n  \"div\",\n  \"ent\",\n  \"ide\",\n  \"img\",\n  \"lay\",\n  \"out\",\n  \"top\",\n  \"utt\",\n  \"__\",\n  \"--\",\n  \", \",\n  \".a\",\n  \".j\",\n  \".m\",\n  \".t\",\n  \"\\\"]\",\n  \"=\\\"\",\n  \"00\",\n  \"ab\",\n  \"ac\",\n  \"ad\",\n  \"Ad\",\n  \"ag\",\n  \"al\",\n  \"an\",\n  \"ar\",\n  \"at\",\n  \"ct\",\n  \"d-\",\n  \"de\",\n  \"e-\",\n  \"ed\",\n  \"el\",\n  \"en\",\n  \"er\",\n  \"et\",\n  \"fo\",\n  \"g-\",\n  \"he\",\n  \"ic\",\n  \"id\",\n  \"il\",\n  \"in\",\n  \"is\",\n  \"it\",\n  \"la\",\n  \"le\",\n  \"lo\",\n  \"no\",\n  \"o-\",\n  \"od\",\n  \"ol\",\n  \"om\",\n  \"on\",\n  \"op\",\n  \"or\",\n  \"ot\",\n  \"ov\",\n  \"p-\",\n  \"ra\",\n  \"re\",\n  \"s_\",\n  \"s-\",\n  \"se\",\n  \"st\",\n  \"t-\",\n  \"te\",\n  \"ti\",\n  \"un\",\n  \" \",\n  \"_\",\n  \"-\",\n  \";\",\n  \":\",\n  \".\",\n  \"'\",\n  \")\",\n  \"[\",\n  \"]\",\n  \"*\",\n  \"/\",\n  \"#\",\n  \"^\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"a\",\n  \"A\",\n  \"b\",\n  \"B\",\n  \"c\",\n  \"C\",\n  \"d\",\n  \"D\",\n  \"e\",\n  \"E\",\n  \"f\",\n  \"F\",\n  \"g\",\n  \"h\",\n  \"H\",\n  \"i\",\n  \"I\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"L\",\n  \"m\",\n  \"M\",\n  \"n\",\n  \"N\",\n  \"o\",\n  \"O\",\n  \"p\",\n  \"P\",\n  \"q\",\n  \"r\",\n  \"R\",\n  \"s\",\n  \"S\",\n  \"t\",\n  \"T\",\n  \"u\",\n  \"U\",\n  \"v\",\n  \"w\",\n  \"W\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \"sandbox allow-forms allow-same-origin allow-scripts allow-modals allow-orientation-lock allow-pointer-lock allow-presentation allow-top-navigation\",\n  \"script-src 'self' 'unsafe-inline' 'unsafe-eval' data:\",\n  \" *.google.com *.gstatic.com *.googleapis.com\",\n  \".com *.google.com *.googletagmanager.com *.\",\n  \"script-src 'self' '*' 'unsafe-inline'\",\n  \"default-src 'self' 'unsafe-inline'\",\n  \"default-src 'unsafe-inline' 'self'\",\n  \"script-src 'self' 'unsafe-inline' \",\n  \"script-src * 'unsafe-inline'\",\n  \"*.googletagmanager.com *.\",\n  \".com *.googleapis.com *.\",\n  \" *.gstatic.com *.google\",\n  \".com *.bootstrapcdn.com\",\n  \".com *.google-analytics\",\n  \".com *.gstatic.com *.\",\n  \"default-src 'self'\",\n  \"frame-src 'self' *\",\n  \" *.cloudflare.com\",\n  \"child-src 'none';\",\n  \"worker-src 'none'\",\n  \" 'unsafe-inline'\",\n  \"'unsafe-eval'\",\n  \"connect-src \",\n  \"child-src *\",\n  \"script-src \",\n  \"script-src\",\n  \"style-src \",\n  \" *.google\",\n  \"frame-src\",\n  \"facebook\",\n  \"https://\",\n  \".com *.\",\n  \".net *.\",\n  \"addthis\",\n  \"captcha\",\n  \"gstatic\",\n  \"youtube\",\n  \" data:\",\n  \"'self'\",\n  \"disqus\",\n  \"google\",\n  \"jquery\",\n  \" http\",\n  \"blob:\",\n  \"media\",\n  \"ytimg\",\n  \".com\",\n  \".net\",\n  \"apis\",\n  \"n.cc\",\n  \" *.\",\n  \"age\",\n  \"cdn\",\n  \"tag\",\n  \"tra\",\n  \"vic\",\n  \" *\",\n  \"*.\",\n  \"an\",\n  \"ch\",\n  \"de\",\n  \"er\",\n  \"es\",\n  \"fa\",\n  \"ic\",\n  \"im\",\n  \"in\",\n  \"on\",\n  \"rc\",\n  \"re\",\n  \"wi\",\n  \"wp\",\n  \" \",\n  \"-\",\n  \";\",\n  \":\",\n  \".\",\n  \"'\",\n  \"*\",\n  \"/\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \":style(width:1px!important;height:1px!important;min-width:1px!important;min-height:1px!important;margin:0!important;padding:0!important;overflow:hidden!important;opacity:0!important)\",\n  \"\\\\/[a-d][-\\\\.\\\\/_A-Za-z][DHWXm][-\\\\.\\\\/_A-Za-z][59FVZ][-\\\\.\\\\/_A-Za-z][6swyz][-\\\\.\\\\/_A-Za-z][-\\\\/_0-9a-zA-Z][-\\\\.\\\\/_A-Za-z][-\\\\/_0-9a-zA-Z]{22,162}$/\",\n  \"/homad-global-configs.schneevonmorgen.com/global_config\",\n  \"[\\\\/][\\\\/a-zA-Z0-9]{3,}\\\\/[a-zA-Z0-9]{6,}\\\\/.*/\",\n  \"\\\\.com[\\\\/]{1,}.*[a-zA-Z0-9]{\",\n  \"/pagead/js/adsbygoogle.js\",\n  \"/^https?:\\\\/\\\\/(.+?\\\\.)?\",\n  \"/js/sdkloader/ima3.js\",\n  \"/sites/default/files/\",\n  \"/wp-content/plugins/\",\n  \"/wp-content/uploads/\",\n  \"/wp-content/themes/\",\n  \"/detroitchicago/\",\n  \".*[a-zA-Z0-9]{\",\n  \"/cdn-cgi/trace\",\n  \"\\\\/[a-zA-Z0-9]{\",\n  \"/^https?:\\\\/\\\\/\",\n  \"/^https:\\\\/\\\\\",\n  \"0-9a-zA-Z]\",\n  \"impression\",\n  \"[0-9a-f]{\",\n  \"[0-9a-z]{\",\n  \"affiliate\",\n  \"analytics\",\n  \"/assets/\",\n  \"/images/\",\n  \"comscore\",\n  \"template\",\n  \"tracking\",\n  \"300x250\",\n  \"collect\",\n  \"consent\",\n  \"content\",\n  \"counter\",\n  \"default\",\n  \"sponsor\",\n  \"visitor\",\n  \".aspx?\",\n  \"/embed\",\n  \"728x90\",\n  \"banner\",\n  \"beacon\",\n  \"client\",\n  \"cookie\",\n  \"google\",\n  \"metric\",\n  \"module\",\n  \"prebid\",\n  \"rivacy\",\n  \"script\",\n  \"source\",\n  \"widget\",\n  \".cgi?\",\n  \".com/\",\n  \".html\",\n  \"/api/\",\n  \"/file\",\n  \"/img/\",\n  \"/java\",\n  \"/page\",\n  \"/stat\",\n  \"/uplo\",\n  \"0x600\",\n  \"a-z]{\",\n  \"block\",\n  \"click\",\n  \"clude\",\n  \"count\",\n  \"event\",\n  \"frame\",\n  \"image\",\n  \"manag\",\n  \"media\",\n  \"pixel\",\n  \"track\",\n  \"type=\",\n  \"video\",\n  \".gif\",\n  \".jpg\",\n  \".php\",\n  \".png\",\n  \"/jqu\",\n  \"/js/\",\n  \"/lib\",\n  \"/web\",\n  \"bung\",\n  \"code\",\n  \"data\",\n  \"eoip\",\n  \"gi-b\",\n  \"http\",\n  \"ight\",\n  \"page\",\n  \"stat\",\n  \"view\",\n  \".js\",\n  \"/ad\",\n  \"/js\",\n  \"^*/\",\n  \"=*&\",\n  \"468\",\n  \"aff\",\n  \"dpr\",\n  \"ext\",\n  \"how\",\n  \"jax\",\n  \"lay\",\n  \"log\",\n  \"lug\",\n  \"new\",\n  \"sdk\",\n  \"tag\",\n  \"und\",\n  \"web\",\n  \"-p\",\n  \".m\",\n  \"*/\",\n  \"*^\",\n  \"/_\",\n  \"/?\",\n  \"/*\",\n  \"/d\",\n  \"/f\",\n  \"/g\",\n  \"/h\",\n  \"/m\",\n  \"/n\",\n  \"/p\",\n  \"/r\",\n  \"/u\",\n  \"/w\",\n  \"\\\\/\",\n  \"00\",\n  \"a-\",\n  \"ac\",\n  \"ad\",\n  \"ag\",\n  \"al\",\n  \"am\",\n  \"an\",\n  \"ap\",\n  \"ar\",\n  \"as\",\n  \"at\",\n  \"bo\",\n  \"ce\",\n  \"ch\",\n  \"de\",\n  \"e_\",\n  \"e-\",\n  \"e/\",\n  \"ec\",\n  \"ed\",\n  \"el\",\n  \"em\",\n  \"en\",\n  \"er\",\n  \"et\",\n  \"g/\",\n  \"ic\",\n  \"id\",\n  \"ig\",\n  \"il\",\n  \"im\",\n  \"in\",\n  \"is\",\n  \"it\",\n  \"la\",\n  \"le\",\n  \"li\",\n  \"lo\",\n  \"no\",\n  \"ob\",\n  \"ol\",\n  \"om\",\n  \"on\",\n  \"op\",\n  \"or\",\n  \"ot\",\n  \"p-\",\n  \"pt\",\n  \"re\",\n  \"ro\",\n  \"s_\",\n  \"s-\",\n  \"s?\",\n  \"s/\",\n  \"sp\",\n  \"ss\",\n  \"st\",\n  \"t/\",\n  \"ti\",\n  \"tm\",\n  \"tr\",\n  \"ub\",\n  \"um\",\n  \"un\",\n  \"up\",\n  \"ur\",\n  \"us\",\n  \"ut\",\n  \"ve\",\n  \"_\",\n  \"-\",\n  \",\",\n  \":\",\n  \"?\",\n  \".\",\n  \"(\",\n  \"[\",\n  \"}\",\n  \"*\",\n  \"/\",\n  \"\\\\\",\n  \"&\",\n  \"^\",\n  \"=\",\n  \"|\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \"securepubads.g.doubleclick.net\",\n  \"administratormail\",\n  \"googlesyndication\",\n  \"imasdk.googleapis\",\n  \".zooplusmail-aws\",\n  \"googletagmanager\",\n  \".cloudfront.net\",\n  \".actonservice\",\n  \".net.zooplus.\",\n  \"marketing.\",\n  \"plausible.\",\n  \"analytics\",\n  \"metrics.\",\n  \".zoossl\",\n  \".co.uk\",\n  \"google\",\n  \"stats.\",\n  \"a8clk\",\n  \"a8cv.\",\n  \"click\",\n  \"media\",\n  \"track\",\n  \".com\",\n  \".net\",\n  \".xyz\",\n  \"mail\",\n  \"secu\",\n  \"www.\",\n  \".de\",\n  \".io\",\n  \".jp\",\n  \".ru\",\n  \"a43\",\n  \"aff\",\n  \"cdn\",\n  \"new\",\n  \"pro\",\n  \"web\",\n  \".b\",\n  \".c\",\n  \".d\",\n  \".e\",\n  \".f\",\n  \".h\",\n  \".k\",\n  \".m\",\n  \".n\",\n  \".p\",\n  \".s\",\n  \".t\",\n  \".w\",\n  \"24\",\n  \"a-\",\n  \"ab\",\n  \"ac\",\n  \"ad\",\n  \"af\",\n  \"ag\",\n  \"ah\",\n  \"ak\",\n  \"al\",\n  \"am\",\n  \"an\",\n  \"ap\",\n  \"ar\",\n  \"as\",\n  \"at\",\n  \"au\",\n  \"av\",\n  \"aw\",\n  \"ax\",\n  \"ay\",\n  \"az\",\n  \"be\",\n  \"bl\",\n  \"bo\",\n  \"br\",\n  \"bu\",\n  \"ca\",\n  \"ce\",\n  \"ch\",\n  \"ci\",\n  \"ck\",\n  \"cl\",\n  \"cr\",\n  \"ct\",\n  \"dc\",\n  \"de\",\n  \"di\",\n  \"dn\",\n  \"do\",\n  \"dr\",\n  \"ds\",\n  \"dy\",\n  \"e-\",\n  \"eb\",\n  \"ec\",\n  \"ed\",\n  \"ef\",\n  \"eg\",\n  \"ek\",\n  \"el\",\n  \"em\",\n  \"en\",\n  \"ep\",\n  \"er\",\n  \"es\",\n  \"et\",\n  \"ev\",\n  \"ew\",\n  \"ex\",\n  \"ey\",\n  \"fe\",\n  \"ff\",\n  \"fi\",\n  \"fl\",\n  \"fo\",\n  \"fr\",\n  \"ge\",\n  \"go\",\n  \"gr\",\n  \"gu\",\n  \"he\",\n  \"ho\",\n  \"ht\",\n  \"ia\",\n  \"ib\",\n  \"ic\",\n  \"id\",\n  \"if\",\n  \"ig\",\n  \"ik\",\n  \"il\",\n  \"im\",\n  \"in\",\n  \"ip\",\n  \"ir\",\n  \"is\",\n  \"it\",\n  \"iv\",\n  \"ix\",\n  \"iz\",\n  \"ks\",\n  \"la\",\n  \"le\",\n  \"li\",\n  \"lo\",\n  \"lu\",\n  \"ly\",\n  \"ma\",\n  \"me\",\n  \"mo\",\n  \"mp\",\n  \"my\",\n  \"no\",\n  \"ob\",\n  \"ok\",\n  \"ol\",\n  \"om\",\n  \"on\",\n  \"oo\",\n  \"op\",\n  \"or\",\n  \"ot\",\n  \"ow\",\n  \"ph\",\n  \"pl\",\n  \"po\",\n  \"pr\",\n  \"qu\",\n  \"re\",\n  \"ri\",\n  \"ro\",\n  \"ru\",\n  \"s-\",\n  \"sc\",\n  \"se\",\n  \"sh\",\n  \"si\",\n  \"sk\",\n  \"sn\",\n  \"so\",\n  \"sp\",\n  \"ss\",\n  \"st\",\n  \"su\",\n  \"sw\",\n  \"sy\",\n  \"t-\",\n  \"ta\",\n  \"te\",\n  \"th\",\n  \"ti\",\n  \"tn\",\n  \"to\",\n  \"tr\",\n  \"ts\",\n  \"tu\",\n  \"tv\",\n  \"ty\",\n  \"ub\",\n  \"ud\",\n  \"ug\",\n  \"uk\",\n  \"ul\",\n  \"um\",\n  \"un\",\n  \"up\",\n  \"ur\",\n  \"us\",\n  \"ut\",\n  \"ve\",\n  \"vi\",\n  \"vo\",\n  \"we\",\n  \"yo\",\n  \"-\",\n  \".\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \"google-analytics.com/analytics.js\",\n  \"googlesyndication_adsbygoogle.js\",\n  \"googletagmanager.com/gtm.js\",\n  \"googletagservices_gpt.js\",\n  \"googletagmanager_gtm.js\",\n  \"fuckadblock.js-3.2.0\",\n  \"amazon_apstag.js\",\n  \"google-analytics\",\n  \"fingerprint2.js\",\n  \"-transparent.\",\n  \"google-ima.js\",\n  \"noop-0.1s.mp3\",\n  \"prebid-ads.js\",\n  \"nobab2.js:10\",\n  \"noopmp3-0.1s\",\n  \"noop-1s.mp4\",\n  \"hd-main.js\",\n  \"noopmp4-1s\",\n  \"32x32.png\",\n  \"noop.html\",\n  \"noopframe\",\n  \"noop.txt\",\n  \"nooptext\",\n  \"1x1.gif\",\n  \"2x2.png\",\n  \"noop.js\",\n  \"noopjs\",\n  \".com/\",\n  \".js:5\",\n  \"noop\",\n  \":10\",\n  \".js\",\n  \"ads\",\n  \"tag\",\n  \":5\",\n  \"/a\",\n  \"ar\",\n  \"et\",\n  \"ga\",\n  \"ic\",\n  \"mp\",\n  \"ng\",\n  \"_\",\n  \"-\",\n  \":\",\n  \".\",\n  \"*\",\n  \"/\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \",redirect-rule=noopjs,domain\",\n  \"googleapis.com/js/sdkloader/\",\n  \"googlesyndication.com/pagead\",\n  \"*$script,3p,denyallow=\",\n  \"/wp-content/plugins/\",\n  \"/wp-content/uploads/\",\n  \".com^$third-party\",\n  \"administratormail\",\n  \".cloudfront.net^\",\n  \".zooplusmail-aws\",\n  \",redirect-rule=\",\n  \"$script,domain=\",\n  \",redirect=noop\",\n  \"|downdetector.\",\n  \"xmlhttprequest\",\n  \".actonservice\",\n  \".net.zooplus.\",\n  \"/^https?:\\\\/\\\\/\",\n  \"^$third-party\",\n  \"a-zA-Z0-9]{\",\n  \"doubleclick\",\n  \"subdocument\",\n  \"third-party\",\n  \"cloudflare\",\n  \"marketing.\",\n  \"analytics\",\n  \"/assets/\",\n  \"metrics.\",\n  \"tracking\",\n  \".zoossl\",\n  \"$script\",\n  \"captcha\",\n  \"collect\",\n  \"domain=\",\n  \"imasdk.\",\n  \".co.uk\",\n  \"$ghide\",\n  \"cookie\",\n  \"google\",\n  \"script\",\n  \".com^\",\n  \".xyz^\",\n  \"count\",\n  \"frame\",\n  \"image\",\n  \"media\",\n  \"track\",\n  \"video\",\n  \".com\",\n  \".gif\",\n  \".net\",\n  \".php\",\n  \"/js/\",\n  \"$xhr\",\n  \"html\",\n  \"stat\",\n  \"www.\",\n  \",1p\",\n  \".de\",\n  \".io\",\n  \".jp\",\n  \".js\",\n  \".ru\",\n  \"$3p\",\n  \"aff\",\n  \"cdn\",\n  \"new\",\n  \"pro\",\n  \"web\",\n  \".b\",\n  \".c\",\n  \".f\",\n  \".m\",\n  \".n\",\n  \".p\",\n  \".s\",\n  \".t\",\n  \"@@\",\n  \"*/\",\n  \"/*\",\n  \"/b\",\n  \"/p\",\n  \"||\",\n  \"|~\",\n  \"a-\",\n  \"ab\",\n  \"ac\",\n  \"ad\",\n  \"af\",\n  \"ag\",\n  \"ak\",\n  \"al\",\n  \"am\",\n  \"an\",\n  \"ap\",\n  \"ar\",\n  \"as\",\n  \"at\",\n  \"au\",\n  \"av\",\n  \"aw\",\n  \"ay\",\n  \"az\",\n  \"be\",\n  \"bo\",\n  \"br\",\n  \"ce\",\n  \"ch\",\n  \"ck\",\n  \"cl\",\n  \"de\",\n  \"di\",\n  \"do\",\n  \"dr\",\n  \"e-\",\n  \"e^\",\n  \"eb\",\n  \"ec\",\n  \"ed\",\n  \"el\",\n  \"em\",\n  \"en\",\n  \"ep\",\n  \"er\",\n  \"es\",\n  \"et\",\n  \"ev\",\n  \"ex\",\n  \"fa\",\n  \"fo\",\n  \"fr\",\n  \"ge\",\n  \"go\",\n  \"gr\",\n  \"he\",\n  \"ho\",\n  \"ib\",\n  \"ic\",\n  \"id\",\n  \"ie\",\n  \"ig\",\n  \"ik\",\n  \"il\",\n  \"im\",\n  \"in\",\n  \"io\",\n  \"ip\",\n  \"ir\",\n  \"is\",\n  \"it\",\n  \"iv\",\n  \"ix\",\n  \"iz\",\n  \"js\",\n  \"le\",\n  \"li\",\n  \"lo\",\n  \"ly\",\n  \"ma\",\n  \"mo\",\n  \"mp\",\n  \"my\",\n  \"no\",\n  \"ol\",\n  \"om\",\n  \"on\",\n  \"oo\",\n  \"op\",\n  \"or\",\n  \"ot\",\n  \"ow\",\n  \"pl\",\n  \"po\",\n  \"pr\",\n  \"qu\",\n  \"re\",\n  \"ro\",\n  \"s-\",\n  \"s/\",\n  \"sc\",\n  \"se\",\n  \"sh\",\n  \"si\",\n  \"so\",\n  \"sp\",\n  \"ss\",\n  \"st\",\n  \"t-\",\n  \"te\",\n  \"th\",\n  \"ti\",\n  \"to\",\n  \"tr\",\n  \"ts\",\n  \"ub\",\n  \"ud\",\n  \"ug\",\n  \"ul\",\n  \"um\",\n  \"un\",\n  \"up\",\n  \"ur\",\n  \"us\",\n  \"ut\",\n  \"ve\",\n  \"_\",\n  \"-\",\n  \",\",\n  \"?\",\n  \".\",\n  \"*\",\n  \"/\",\n  \"\\\\\",\n  \"^\",\n  \"=\",\n  \"|\",\n  \"~\",\n  \"$\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \"-webkit-touch-callout: defau\",\n  \", document.querySelectorAll,\",\n  \", String.prototype.charCodeA\",\n  \"app_vars.force_disable_adblo\",\n  \"s, document.addEventListener\",\n  \"s, document.getElementById, \",\n  \"user-select: text !important\",\n  \"acis, String.fromCharCode, \",\n  \", document.createElement, \",\n  \"nosiif, visibility, 1000)\",\n  \", document.oncontextmenu\",\n  \"acis, addEventListener, \",\n  \"lt !important; -webkit-\",\n  \"set, blurred, false)\",\n  \"^script:has-text(\",\n  \"ra, oncontextmenu\",\n  \"[href^=\\\"https://\",\n  \"[href^=\\\"http://\",\n  \"+js(aopw, _pop)\",\n  \"BlockDetected)\",\n  \"no-fetch-if, \",\n  \"div[class^=\\\"\",\n  \"notification\",\n  \", noopFunc)\",\n  \"aopw, _pop)\",\n  \" popMagic)\",\n  \":has-text(\",\n  \"!important\",\n  \".com##+js(\",\n  \"+js(aeld, \",\n  \"+js(aopr, \",\n  \"+js(aopw, \",\n  \"background\",\n  \".blogspot\",\n  \".buzz,img\",\n  \"container\",\n  \"decodeURI\",\n  \"div[id^=\\\"\",\n  \"div[style\",\n  \"https://\",\n  \"nostif, \",\n  \"; -moz-\",\n  \":style(\",\n  \"300x250\",\n  \"consent\",\n  \"content\",\n  \"message\",\n  \"nowoif)\",\n  \"privacy\",\n  \"sponsor\",\n  \"wrapper\",\n  \".co.uk\",\n  \"[data-\",\n  \"aopr, \",\n  \"banner\",\n  \"bottom\",\n  \"cookie\",\n  \"Cookie\",\n  \"google\",\n  \"notice\",\n  \"policy\",\n  \"stream\",\n  \"widget\",\n  \"block\",\n  \"docum\",\n  \"movie\",\n  \"popup\",\n  \"video\",\n  \"width\",\n  \".com\",\n  \".net\",\n  \".nl,\",\n  \".xyz\",\n  \"#@#.\",\n  \"+js(\",\n  \"down\",\n  \"foot\",\n  \"gdpr\",\n  \"html\",\n  \"ight\",\n  \"news\",\n  \"side\",\n  \"tube\",\n  \"www.\",\n  \" > \",\n  \".*,\",\n  \".de\",\n  \"age\",\n  \"box\",\n  \"ent\",\n  \"web\",\n  \"xxx\",\n  \"__\",\n  \", \",\n  \",m\",\n  \",p\",\n  \",t\",\n  \": \",\n  \".*\",\n  \".e\",\n  \".m\",\n  \".p\",\n  \".t\",\n  \"\\\"]\",\n  \"##\",\n  \"=\\\"\",\n  \"00\",\n  \"ab\",\n  \"ac\",\n  \"ad\",\n  \"Ad\",\n  \"al\",\n  \"am\",\n  \"an\",\n  \"ap\",\n  \"ar\",\n  \"at\",\n  \"au\",\n  \"bi\",\n  \"bo\",\n  \"ca\",\n  \"ce\",\n  \"ch\",\n  \"ck\",\n  \"co\",\n  \"ct\",\n  \"d-\",\n  \"da\",\n  \"de\",\n  \"di\",\n  \"do\",\n  \"ed\",\n  \"el\",\n  \"en\",\n  \"er\",\n  \"es\",\n  \"et\",\n  \"fi\",\n  \"fo\",\n  \"ft\",\n  \"g-\",\n  \"ga\",\n  \"ge\",\n  \"go\",\n  \"he\",\n  \"ho\",\n  \"ic\",\n  \"id\",\n  \"il\",\n  \"im\",\n  \"in\",\n  \"it\",\n  \"ke\",\n  \"la\",\n  \"le\",\n  \"li\",\n  \"lo\",\n  \"ma\",\n  \"me\",\n  \"mo\",\n  \"mp\",\n  \"ne\",\n  \"no\",\n  \"ol\",\n  \"on\",\n  \"op\",\n  \"or\",\n  \"ov\",\n  \"po\",\n  \"ra\",\n  \"re\",\n  \"ro\",\n  \"s_\",\n  \"s-\",\n  \"sc\",\n  \"se\",\n  \"sh\",\n  \"si\",\n  \"sk\",\n  \"sp\",\n  \"ss\",\n  \"st\",\n  \"t-\",\n  \"ta\",\n  \"te\",\n  \"ti\",\n  \"ub\",\n  \"ul\",\n  \"um\",\n  \"un\",\n  \"up\",\n  \"ur\",\n  \"us\",\n  \"ut\",\n  \"ve\",\n  \"vi\",\n  \"xt\",\n  \"y-\",\n  \" \",\n  \"_\",\n  \"-\",\n  \",\",\n  \";\",\n  \":\",\n  \".\",\n  \")\",\n  \"[\",\n  \"/\",\n  \"#\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"a\",\n  \"A\",\n  \"b\",\n  \"B\",\n  \"c\",\n  \"C\",\n  \"d\",\n  \"D\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"L\",\n  \"m\",\n  \"M\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"P\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"S\",\n  \"t\",\n  \"T\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { Smaz } from '@remusao/smaz';\n\nimport cosmeticSelectorCodebook from './codebooks/cosmetic-selector';\nimport networkCSPCodebook from './codebooks/network-csp';\nimport networkFilterCodebook from './codebooks/network-filter';\nimport networkHostnameCodebook from './codebooks/network-hostname';\nimport networkRedirectCodebook from './codebooks/network-redirect';\nimport networkRawCodebook from './codebooks/raw-network';\nimport cosmeticRawCodebook from './codebooks/raw-cosmetic';\n\nexport default class Compression {\n  public readonly cosmeticSelector: Smaz = new Smaz(cosmeticSelectorCodebook);\n  public readonly networkCSP: Smaz = new Smaz(networkCSPCodebook);\n  public readonly networkRedirect: Smaz = new Smaz(networkRedirectCodebook);\n  public readonly networkHostname: Smaz = new Smaz(networkHostnameCodebook);\n  public readonly networkFilter: Smaz = new Smaz(networkFilterCodebook);\n  public readonly networkRaw: Smaz = new Smaz(networkRawCodebook);\n  public readonly cosmeticRaw: Smaz = new Smaz(cosmeticRawCodebook);\n}\n","/* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* From: https://github.com/SheetJS/js-crc32/ */\n\nconst T: Int32Array = (() => {\n  let c: number = 0;\n  const table: Int32Array = new Int32Array(256);\n\n  for (let n: number = 0; n !== 256; n += 1) {\n    c = n;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    table[n] = c;\n  }\n\n  return table;\n})();\n\nexport default function crc32(buf: Uint8Array, start: number, end: number): number {\n  let C: number = 0 ^ -1;\n  const L: number = end - 7;\n  let i: number = start;\n  while (i < L) {\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n  }\n\n  while (i < L + 7) {\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n  }\n\n  return (C ^ -1) >>> 0;\n}\n","/*!\n * Copyright Mathias Bynens <https://mathiasbynens.be/>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\ntype errorNames = 'overflow' | 'invalid-input' | 'not-basic';\nconst errors: {\n  [name: string]: string;\n} = {\n  'invalid-input': 'Invalid input',\n  'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n  'overflow': 'Overflow: input needs wider integers to process',\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type: errorNames): void {\n  throw new RangeError(errors[type]);\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(str: string): number[] {\n  const output = [];\n  let counter = 0;\n  const length = str.length;\n  while (counter < length) {\n    const value = str.charCodeAt(counter++);\n    if (value >= 0xd800 && value <= 0xdbff && counter < length) {\n      // It's a high surrogate, and there is a next character.\n      const extra = str.charCodeAt(counter++);\n      if ((extra & 0xfc00) === 0xdc00) {\n        // Low surrogate.\n        output.push(((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000);\n      } else {\n        // It's an unmatched surrogate; only append this code unit, in case the\n        // next code unit is the high surrogate of a surrogate pair.\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n}\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nfunction basicToDigit(codePoint: number): number {\n  if (codePoint - 0x30 < 0x0a) {\n    return codePoint - 0x16;\n  }\n  if (codePoint - 0x41 < 0x1a) {\n    return codePoint - 0x41;\n  }\n  if (codePoint - 0x61 < 0x1a) {\n    return codePoint - 0x61;\n  }\n  return base;\n}\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nfunction digitToBasic(digit: number, flag: number): number {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26 ? 1 : 0) - ((flag !== 0 ? 1 : 0) << 5);\n}\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nfunction adapt(delta: number, numPoints: number, firstTime: boolean): number {\n  let k = 0;\n  delta = firstTime ? Math.floor(delta / damp) : delta >> 1;\n  delta += Math.floor(delta / numPoints);\n  for (; /* no initialization */ delta > (baseMinusTMin * tMax) >> 1; k += base) {\n    delta = Math.floor(delta / baseMinusTMin);\n  }\n  return Math.floor(k + ((baseMinusTMin + 1) * delta) / (delta + skew));\n}\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nexport function decode(input: string): string {\n  // Don't use UCS-2.\n  const output = [];\n  const inputLength = input.length;\n  let i = 0;\n  let n = initialN;\n  let bias = initialBias;\n\n  // Handle the basic code points: let `basic` be the number of input code\n  // points before the last delimiter, or `0` if there is none, then copy\n  // the first basic code points to the output.\n\n  let basic = input.lastIndexOf(delimiter);\n  if (basic < 0) {\n    basic = 0;\n  }\n\n  for (let j = 0; j < basic; ++j) {\n    // if it's not a basic code point\n    if (input.charCodeAt(j) >= 0x80) {\n      error('not-basic');\n    }\n    output.push(input.charCodeAt(j));\n  }\n\n  // Main decoding loop: start just after the last delimiter if any basic code\n  // points were copied; start at the beginning otherwise.\n\n  for (let index = basic > 0 ? basic + 1 : 0; index < inputLength /* no final expression */; ) {\n    // `index` is the index of the next character to be consumed.\n    // Decode a generalized variable-length integer into `delta`,\n    // which gets added to `i`. The overflow checking is easier\n    // if we increase `i` as we go, then subtract off its starting\n    // value at the end to obtain `delta`.\n    const oldi = i;\n    for (let w = 1, k = base /* no condition */; ; k += base) {\n      if (index >= inputLength) {\n        error('invalid-input');\n      }\n\n      const digit = basicToDigit(input.charCodeAt(index++));\n\n      if (digit >= base || digit > Math.floor((maxInt - i) / w)) {\n        error('overflow');\n      }\n\n      i += digit * w;\n      const t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n      if (digit < t) {\n        break;\n      }\n\n      const baseMinusT = base - t;\n      if (w > Math.floor(maxInt / baseMinusT)) {\n        error('overflow');\n      }\n\n      w *= baseMinusT;\n    }\n\n    const out = output.length + 1;\n    bias = adapt(i - oldi, out, oldi === 0);\n\n    // `i` was supposed to wrap around from `out` to `0`,\n    // incrementing `n` each time, so we'll fix that now:\n    if (Math.floor(i / out) > maxInt - n) {\n      error('overflow');\n    }\n\n    n += Math.floor(i / out);\n    i %= out;\n\n    // Insert `n` at position `i` of the output.\n    output.splice(i++, 0, n);\n  }\n\n  return String.fromCodePoint.apply(null, output);\n}\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nexport function encode(str: string): string {\n  const output = [];\n\n  // Convert the input in UCS-2 to an array of Unicode code points.\n  const input = ucs2decode(str);\n\n  // Cache the length.\n  const inputLength = input.length;\n\n  // Initialize the state.\n  let n = initialN;\n  let delta = 0;\n  let bias = initialBias;\n\n  // Handle the basic code points.\n  for (let i = 0; i < input.length; i += 1) {\n    const currentValue = input[i];\n    if (currentValue < 0x80) {\n      output.push(String.fromCharCode(currentValue));\n    }\n  }\n\n  const basicLength = output.length;\n  let handledCPCount = basicLength;\n\n  // `handledCPCount` is the number of code points that have been handled;\n  // `basicLength` is the number of basic code points.\n\n  // Finish the basic string with a delimiter unless it's empty.\n  if (basicLength) {\n    output.push(delimiter);\n  }\n\n  // Main encoding loop:\n  while (handledCPCount < inputLength) {\n    // All non-basic code points < n have been handled already. Find the next\n    // larger one:\n    let m = maxInt;\n    for (let i = 0; i < input.length; i += 1) {\n      const currentValue = input[i];\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    }\n\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n    // but guard against overflow.\n    const handledCPCountPlusOne = handledCPCount + 1;\n    if (m - n > Math.floor((maxInt - delta) / handledCPCountPlusOne)) {\n      error('overflow');\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (let i = 0; i < input.length; i += 1) {\n      const currentValue = input[i];\n      if (currentValue < n && ++delta > maxInt) {\n        error('overflow');\n      }\n      if (currentValue === n) {\n        // Represent delta as a generalized variable-length integer.\n        let q = delta;\n        for (let k = base /* no condition */; ; k += base) {\n          const t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n          if (q < t) {\n            break;\n          }\n          const qMinusT = q - t;\n          const baseMinusT = base - t;\n          output.push(String.fromCharCode(digitToBasic(t + (qMinusT % baseMinusT), 0)));\n          q = Math.floor(qMinusT / baseMinusT);\n        }\n\n        output.push(String.fromCharCode(digitToBasic(q, 0)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n        delta = 0;\n        ++handledCPCount;\n      }\n    }\n\n    ++delta;\n    ++n;\n  }\n  return output.join('');\n}\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nexport function toUnicode(input: string): string {\n  const labels = input.replace(regexSeparators, '\\x2E').split('.');\n  const encoded: string[] = [];\n  for (let i = 0; i < labels.length; i += 1) {\n    encoded.push(\n      labels[i].startsWith('xn--') ? decode(labels[i].slice(4).toLowerCase()) : labels[i],\n    );\n  }\n  return encoded.join('.');\n}\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nexport function toASCII(input: string): string {\n  // Avoid `split(regex)` for IE8 compatibility. See #17.\n  const labels = input.replace(regexSeparators, '\\x2E').split('.');\n  const encoded: string[] = [];\n  for (let i = 0; i < labels.length; i += 1) {\n    encoded.push(regexNonASCII.test(labels[i]) ? 'xn--' + encode(labels[i]) : labels[i]);\n  }\n  return encoded.join('.');\n}\n\n/**\n * A string representing the current Punycode.js version number.\n * @memberOf punycode\n * @type String\n */\nexport const version = '2.1.0';\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport Compression from './compression';\nimport crc32 from './crc32';\nimport { decode, encode } from './punycode';\n\ninterface IDataViewOptions {\n  enableCompression: boolean;\n}\n\nexport const EMPTY_UINT8_ARRAY = new Uint8Array(0);\nexport const EMPTY_UINT32_ARRAY = new Uint32Array(0);\n\n// Check if current architecture is little endian\nconst LITTLE_ENDIAN: boolean = new Int8Array(new Int16Array([1]).buffer)[0] === 1;\n\n// Store compression in a lazy, global singleton\nlet getCompressionSingleton: () => Compression = () => {\n  const COMPRESSION = new Compression();\n  getCompressionSingleton = () => COMPRESSION;\n  return COMPRESSION;\n};\n\nfunction align4(pos: number): number {\n  // From: https://stackoverflow.com/a/2022194\n  return (pos + 3) & ~0x03;\n}\n\n/**\n * Return size of of a serialized byte value.\n */\nexport function sizeOfByte(): number {\n  return 1;\n}\n\n/**\n * Return size of of a serialized boolean value.\n */\nexport function sizeOfBool(): number {\n  return 1;\n}\n\n/**\n * Return number of bytes needed to serialize `length`.\n */\nexport function sizeOfLength(length: number): number {\n  return length <= 127 ? 1 : 5;\n}\n\n/**\n * Return number of bytes needed to serialize `array` Uint8Array typed array.\n *\n * WARNING: this only returns the correct size if `align` is `false`.\n */\nexport function sizeOfBytes(array: Uint8Array, align: boolean): number {\n  return sizeOfBytesWithLength(array.length, align);\n}\n\n/**\n * Return number of bytes needed to serialize `array` Uint8Array typed array.\n *\n * WARNING: this only returns the correct size if `align` is `false`.\n */\nexport function sizeOfBytesWithLength(length: number, align: boolean): number {\n  // Alignment is a tricky thing because it depends on the current offset in\n  // the buffer at the time of serialization; which we cannot anticipate\n  // before actually starting serialization. This means that we need to\n  // potentially over-estimate the size (at most by 3 bytes) to make sure the\n  // final size is at least equal or a bit bigger than necessary.\n  return (align ? 3 : 0) + length + sizeOfLength(length);\n}\n\n/**\n * Return number of bytes needed to serialize `str` ASCII string.\n */\nexport function sizeOfASCII(str: string): number {\n  return str.length + sizeOfLength(str.length);\n}\n\n/**\n * Return number of bytes needed to serialize `str` UTF8 string.\n */\nexport function sizeOfUTF8(str: string): number {\n  const encodedLength = encode(str).length;\n  return encodedLength + sizeOfLength(encodedLength);\n}\n\n/**\n * Return number of bytes needed to serialize `array`.\n */\nexport function sizeOfUint32Array(array: Uint32Array): number {\n  return array.byteLength + sizeOfLength(array.length);\n}\n\nexport function sizeOfNetworkRedirect(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().networkRedirect.getCompressedSize(str),\n        false, // align\n      )\n    : sizeOfASCII(str);\n}\n\nexport function sizeOfNetworkHostname(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().networkHostname.getCompressedSize(str),\n        false, // align\n      )\n    : sizeOfASCII(str);\n}\n\nexport function sizeOfNetworkCSP(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().networkCSP.getCompressedSize(str),\n        false, // align\n      )\n    : sizeOfASCII(str);\n}\n\nexport function sizeOfNetworkFilter(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().networkFilter.getCompressedSize(str),\n        false, // align\n      )\n    : sizeOfASCII(str);\n}\n\nexport function sizeOfCosmeticSelector(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().cosmeticSelector.getCompressedSize(str),\n        false, // align\n      )\n    : sizeOfASCII(str);\n}\n\nexport function sizeOfRawNetwork(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().networkRaw.getCompressedSize(encode(str)),\n        false, // align\n      )\n    : sizeOfUTF8(str);\n}\n\nexport function sizeOfRawCosmetic(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().cosmeticRaw.getCompressedSize(encode(str)),\n        false, // align\n      )\n    : sizeOfUTF8(str);\n}\n\n/**\n * This abstraction allows to serialize efficiently low-level values of types:\n * string, uint8, uint16, uint32, etc. while hiding the complexity of managing\n * the current offset and growing. It should always be instantiated with a\n * big-enough length because this will not allow for resizing. To allow\n * deciding the required total size, function estimating the size needed to\n * store different primitive values are exposes as static methods.\n *\n * This class is also more efficient than the built-in `DataView`.\n *\n * The way this is used in practice is that you write pairs of function to\n * serialize and deserialize a given structure/class (with code being pretty\n * symetrical). In the serializer you `pushX` values, and in the deserializer\n * you use `getX` functions to get back the values.\n */\nexport class StaticDataView {\n  /**\n   * Create an empty (i.e.: size = 0) StaticDataView.\n   */\n  public static empty(options: IDataViewOptions): StaticDataView {\n    return StaticDataView.fromUint8Array(EMPTY_UINT8_ARRAY, options);\n  }\n\n  /**\n   * Instantiate a StaticDataView instance from `array` of type Uint8Array.\n   */\n  public static fromUint8Array(array: Uint8Array, options: IDataViewOptions): StaticDataView {\n    return new StaticDataView(array, options);\n  }\n\n  /**\n   * Instantiate a StaticDataView with given `capacity` number of bytes.\n   */\n  public static allocate(capacity: number, options: IDataViewOptions): StaticDataView {\n    return new StaticDataView(new Uint8Array(capacity), options);\n  }\n\n  public pos: number;\n  public buffer: Uint8Array;\n  public compression: Compression | undefined;\n\n  constructor(buffer: Uint8Array, { enableCompression }: IDataViewOptions) {\n    if (LITTLE_ENDIAN === false) {\n      // This check makes sure that we will not load the adblocker on a\n      // big-endian system. This would not work since byte ordering is important\n      // at the moment (mainly for performance reasons).\n      throw new Error('Adblocker currently does not support Big-endian systems');\n    }\n\n    if (enableCompression === true) {\n      this.enableCompression();\n    }\n\n    this.buffer = buffer;\n    this.pos = 0;\n  }\n\n  public enableCompression(): void {\n    this.compression = getCompressionSingleton();\n  }\n\n  public checksum(): number {\n    return crc32(this.buffer, 0, this.pos);\n  }\n\n  public dataAvailable(): boolean {\n    return this.pos < this.buffer.byteLength;\n  }\n\n  public setPos(pos: number): void {\n    this.pos = pos;\n  }\n\n  public getPos(): number {\n    return this.pos;\n  }\n\n  public seekZero(): void {\n    this.pos = 0;\n  }\n\n  public slice(): Uint8Array {\n    this.checkSize();\n    return this.buffer.slice(0, this.pos);\n  }\n\n  public subarray(): Uint8Array {\n    if (this.pos === this.buffer.byteLength) {\n      return this.buffer;\n    }\n\n    this.checkSize();\n    return this.buffer.subarray(0, this.pos);\n  }\n\n  /**\n   * Make sure that `this.pos` is aligned on a multiple of 4.\n   */\n  public align4(): void {\n    this.pos = align4(this.pos);\n  }\n\n  public set(buffer: Uint8Array): void {\n    this.buffer = new Uint8Array(buffer);\n    this.seekZero();\n  }\n\n  public pushBool(bool: boolean): void {\n    this.pushByte(Number(bool));\n  }\n\n  public getBool(): boolean {\n    return Boolean(this.getByte());\n  }\n\n  public setByte(pos: number, byte: number): void {\n    this.buffer[pos] = byte;\n  }\n\n  public pushByte(octet: number): void {\n    this.pushUint8(octet);\n  }\n\n  public getByte(): number {\n    return this.getUint8();\n  }\n\n  public pushBytes(bytes: Uint8Array, align: boolean = false): void {\n    this.pushLength(bytes.length);\n\n    if (align === true) {\n      this.align4();\n    }\n\n    this.buffer.set(bytes, this.pos);\n    this.pos += bytes.byteLength;\n  }\n\n  public getBytes(align: boolean = false): Uint8Array {\n    const numberOfBytes = this.getLength();\n\n    if (align === true) {\n      this.align4();\n    }\n\n    const bytes = this.buffer.subarray(this.pos, this.pos + numberOfBytes);\n    this.pos += numberOfBytes;\n\n    return bytes;\n  }\n\n  /**\n   * Allows row access to the internal buffer through a Uint32Array acting like\n   * a view. This is used for super fast writing/reading of large chunks of\n   * Uint32 numbers in the byte array.\n   */\n  public getUint32ArrayView(desiredSize: number): Uint32Array {\n    // Round this.pos to next multiple of 4 for alignement\n    this.align4();\n\n    // Short-cut when empty array\n    if (desiredSize === 0) {\n      return EMPTY_UINT32_ARRAY;\n    }\n\n    // Create non-empty view\n    const view = new Uint32Array(\n      this.buffer.buffer,\n      this.pos + this.buffer.byteOffset,\n      desiredSize,\n    );\n    this.pos += desiredSize * 4;\n    return view;\n  }\n\n  public pushUint8(uint8: number): void {\n    this.buffer[this.pos++] = uint8;\n  }\n\n  public getUint8(): number {\n    return this.buffer[this.pos++];\n  }\n\n  public pushUint16(uint16: number): void {\n    this.buffer[this.pos++] = uint16 >>> 8;\n    this.buffer[this.pos++] = uint16;\n  }\n\n  public getUint16(): number {\n    return ((this.buffer[this.pos++] << 8) | this.buffer[this.pos++]) >>> 0;\n  }\n\n  public pushUint32(uint32: number): void {\n    this.buffer[this.pos++] = uint32 >>> 24;\n    this.buffer[this.pos++] = uint32 >>> 16;\n    this.buffer[this.pos++] = uint32 >>> 8;\n    this.buffer[this.pos++] = uint32;\n  }\n\n  public getUint32(): number {\n    return (\n      (((this.buffer[this.pos++] << 24) >>> 0) +\n        ((this.buffer[this.pos++] << 16) |\n          (this.buffer[this.pos++] << 8) |\n          this.buffer[this.pos++])) >>>\n      0\n    );\n  }\n\n  public pushUint32Array(arr: Uint32Array): void {\n    this.pushLength(arr.length);\n    // TODO - use `set` to push the full buffer at once?\n    for (const n of arr) {\n      this.pushUint32(n);\n    }\n  }\n\n  public getUint32Array(): Uint32Array {\n    const length = this.getLength();\n    const arr = new Uint32Array(length);\n    // TODO - use `subarray`?\n    for (let i = 0; i < length; i += 1) {\n      arr[i] = this.getUint32();\n    }\n    return arr;\n  }\n\n  public pushUTF8(raw: string): void {\n    const str = encode(raw);\n    this.pushLength(str.length);\n\n    for (let i = 0; i < str.length; i += 1) {\n      this.buffer[this.pos++] = str.charCodeAt(i);\n    }\n  }\n\n  public getUTF8(): string {\n    const byteLength = this.getLength();\n    this.pos += byteLength;\n    return decode(\n      String.fromCharCode.apply(\n        null,\n        // @ts-ignore\n        this.buffer.subarray(this.pos - byteLength, this.pos),\n      ),\n    );\n  }\n\n  public pushASCII(str: string): void {\n    this.pushLength(str.length);\n\n    for (let i = 0; i < str.length; i += 1) {\n      this.buffer[this.pos++] = str.charCodeAt(i);\n    }\n  }\n\n  public getASCII(): string {\n    const byteLength = this.getLength();\n    this.pos += byteLength;\n\n    // @ts-ignore\n    return String.fromCharCode.apply(null, this.buffer.subarray(this.pos - byteLength, this.pos));\n  }\n\n  public pushNetworkRedirect(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.networkRedirect.compress(str));\n    } else {\n      this.pushASCII(str);\n    }\n  }\n\n  public getNetworkRedirect(): string {\n    if (this.compression !== undefined) {\n      return this.compression.networkRedirect.decompress(this.getBytes());\n    }\n    return this.getASCII();\n  }\n\n  public pushNetworkHostname(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.networkHostname.compress(str));\n    } else {\n      this.pushASCII(str);\n    }\n  }\n\n  public getNetworkHostname(): string {\n    if (this.compression !== undefined) {\n      return this.compression.networkHostname.decompress(this.getBytes());\n    }\n    return this.getASCII();\n  }\n\n  public pushNetworkCSP(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.networkCSP.compress(str));\n    } else {\n      this.pushASCII(str);\n    }\n  }\n\n  public getNetworkCSP(): string {\n    if (this.compression !== undefined) {\n      return this.compression.networkCSP.decompress(this.getBytes());\n    }\n    return this.getASCII();\n  }\n\n  public pushNetworkFilter(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.networkFilter.compress(str));\n    } else {\n      this.pushASCII(str);\n    }\n  }\n\n  public getNetworkFilter(): string {\n    if (this.compression !== undefined) {\n      return this.compression.networkFilter.decompress(this.getBytes());\n    }\n    return this.getASCII();\n  }\n\n  public pushCosmeticSelector(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.cosmeticSelector.compress(str));\n    } else {\n      this.pushASCII(str);\n    }\n  }\n\n  public getCosmeticSelector(): string {\n    if (this.compression !== undefined) {\n      return this.compression.cosmeticSelector.decompress(this.getBytes());\n    }\n    return this.getASCII();\n  }\n\n  public pushRawCosmetic(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.cosmeticRaw.compress(encode(str)));\n    } else {\n      this.pushUTF8(str);\n    }\n  }\n\n  public getRawCosmetic(): string {\n    if (this.compression !== undefined) {\n      return decode(this.compression.cosmeticRaw.decompress(this.getBytes()));\n    }\n    return this.getUTF8();\n  }\n\n  public pushRawNetwork(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.networkRaw.compress(encode(str)));\n    } else {\n      this.pushUTF8(str);\n    }\n  }\n\n  public getRawNetwork(): string {\n    if (this.compression !== undefined) {\n      return decode(this.compression.networkRaw.decompress(this.getBytes()));\n    }\n    return this.getUTF8();\n  }\n\n  private checkSize() {\n    if (this.pos !== 0 && this.pos > this.buffer.byteLength) {\n      throw new Error(\n        `StaticDataView too small: ${this.buffer.byteLength}, but required ${this.pos} bytes`,\n      );\n    }\n  }\n\n  // Serialiez `length` with variable encoding to save space\n  private pushLength(length: number): void {\n    if (length <= 127) {\n      this.pushUint8(length);\n    } else {\n      this.pushUint8(128);\n      this.pushUint32(length);\n    }\n  }\n\n  private getLength(): number {\n    const lengthShort = this.getUint8();\n    return lengthShort === 128 ? this.getUint32() : lengthShort;\n  }\n}\n","/**\n * The MIT License (MIT)\n *\n * Copyright (c) Feross Aboukhadijeh\n *\n * Originally from: https://github.com/feross/queue-microtask\n */\n\nlet promise: Promise<void> | undefined;\n\ntype Callback = () => void;\n\nexport const queueMicrotask: (cb: Callback) => void =\n  typeof window !== 'undefined' && typeof window.queueMicrotask === 'function'\n    ? (cb: Callback) => window.queueMicrotask(cb)\n    : // reuse resolved promise, and allocate it lazily\n      (cb: Callback) =>\n        (promise || (promise = Promise.resolve())).then(cb).catch((err) =>\n          setTimeout(() => {\n            throw err;\n          }, 0),\n        );\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { StaticDataView, sizeOfBool } from './data-view';\n\nexport default class Config {\n  public static deserialize(buffer: StaticDataView): Config {\n    return new Config({\n      debug: buffer.getBool(),\n      enableCompression: buffer.getBool(),\n      enableHtmlFiltering: buffer.getBool(),\n      enableInMemoryCache: buffer.getBool(),\n      enableMutationObserver: buffer.getBool(),\n      enableOptimizations: buffer.getBool(),\n      enablePushInjectionsOnNavigationEvents: buffer.getBool(),\n      guessRequestTypeFromUrl: buffer.getBool(),\n      integrityCheck: buffer.getBool(),\n      loadCSPFilters: buffer.getBool(),\n      loadCosmeticFilters: buffer.getBool(),\n      loadExceptionFilters: buffer.getBool(),\n      loadExtendedSelectors: buffer.getBool(),\n      loadGenericCosmeticsFilters: buffer.getBool(),\n      loadNetworkFilters: buffer.getBool(),\n    });\n  }\n\n  public readonly debug: boolean;\n  public readonly enableCompression: boolean;\n  public readonly enableHtmlFiltering: boolean;\n  public readonly enableInMemoryCache: boolean;\n  public readonly enableMutationObserver: boolean;\n  public readonly enableOptimizations: boolean;\n  public readonly enablePushInjectionsOnNavigationEvents: boolean;\n  public readonly guessRequestTypeFromUrl: boolean;\n  public readonly integrityCheck: boolean;\n  public readonly loadCSPFilters: boolean;\n  public readonly loadCosmeticFilters: boolean;\n  public readonly loadExceptionFilters: boolean;\n  public readonly loadExtendedSelectors: boolean;\n  public readonly loadGenericCosmeticsFilters: boolean;\n  public readonly loadNetworkFilters: boolean;\n\n  constructor({\n    debug = false,\n    enableCompression = false,\n    enableHtmlFiltering = false,\n    enableInMemoryCache = true,\n    enableMutationObserver = true,\n    enableOptimizations = true,\n    enablePushInjectionsOnNavigationEvents = true,\n    guessRequestTypeFromUrl = false,\n    integrityCheck = true,\n    loadCSPFilters = true,\n    loadCosmeticFilters = true,\n    loadExceptionFilters = true,\n    loadExtendedSelectors = false,\n    loadGenericCosmeticsFilters = true,\n    loadNetworkFilters = true,\n  }: Partial<Config> = {}) {\n    this.debug = debug;\n    this.enableCompression = enableCompression;\n    this.enableHtmlFiltering = enableHtmlFiltering;\n    this.enableInMemoryCache = enableInMemoryCache;\n    this.enableMutationObserver = enableMutationObserver;\n    this.enableOptimizations = enableOptimizations;\n    this.enablePushInjectionsOnNavigationEvents = enablePushInjectionsOnNavigationEvents;\n    this.guessRequestTypeFromUrl = guessRequestTypeFromUrl;\n    this.integrityCheck = integrityCheck;\n    this.loadCSPFilters = loadCSPFilters;\n    this.loadCosmeticFilters = loadCosmeticFilters;\n    this.loadExceptionFilters = loadExceptionFilters;\n    this.loadExtendedSelectors = loadExtendedSelectors;\n    this.loadGenericCosmeticsFilters = loadGenericCosmeticsFilters;\n    this.loadNetworkFilters = loadNetworkFilters;\n  }\n\n  public getSerializedSize(): number {\n    // NOTE: this should always be the number of attributes and needs to be\n    // updated when `Config` changes.\n    return 15 * sizeOfBool();\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    buffer.pushBool(this.debug);\n    buffer.pushBool(this.enableCompression);\n    buffer.pushBool(this.enableHtmlFiltering);\n    buffer.pushBool(this.enableInMemoryCache);\n    buffer.pushBool(this.enableMutationObserver);\n    buffer.pushBool(this.enableOptimizations);\n    buffer.pushBool(this.enablePushInjectionsOnNavigationEvents);\n    buffer.pushBool(this.guessRequestTypeFromUrl);\n    buffer.pushBool(this.integrityCheck);\n    buffer.pushBool(this.loadCSPFilters);\n    buffer.pushBool(this.loadCosmeticFilters);\n    buffer.pushBool(this.loadExceptionFilters);\n    buffer.pushBool(this.loadExtendedSelectors);\n    buffer.pushBool(this.loadGenericCosmeticsFilters);\n    buffer.pushBool(this.loadNetworkFilters);\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { queueMicrotask } from './queue-microtask';\n\n/**\n * Type of an event listener (i.e.: callback). It accepts arbitrary arguments\n * and is not expected to return any result.\n */\ntype EventListener = (...args: any[]) => void;\n\n/**\n * Type of event listeners for all events. It maps event names (from a set of\n * type-level string literals) to list of event listeners.\n */\ntype EventListeners<EventNames> = Map<EventNames, EventListener[]>;\n\n/**\n * Add `callback` listener for `event` in `listeners` Map.\n */\nfunction registerCallback<EventNames>(\n  event: EventNames,\n  callback: EventListener,\n  listeners: EventListeners<EventNames>,\n): void {\n  let listenersForEvent = listeners.get(event);\n\n  if (listenersForEvent === undefined) {\n    listenersForEvent = [];\n    listeners.set(event, listenersForEvent);\n  }\n\n  listenersForEvent.push(callback);\n}\n\n/**\n * Remove `callback` listener for `event` from `listeners` Map.\n */\nfunction unregisterCallback<EventNames>(\n  event: EventNames,\n  callback: EventListener,\n  listeners: EventListeners<EventNames>,\n): void {\n  const listenersForEvent = listeners.get(event);\n  if (listenersForEvent !== undefined) {\n    const indexOfCallback = listenersForEvent.indexOf(callback);\n    if (indexOfCallback !== -1) {\n      listenersForEvent.splice(indexOfCallback, 1);\n    }\n  }\n}\n\n/**\n * Call all registered listeners for `event` with `args` as arguments. Return\n * `true` if at least one callback was registered and `false` otherwise.\n */\nfunction triggerCallback<EventNames>(\n  event: EventNames,\n  args: any[],\n  listeners: EventListeners<EventNames>,\n): boolean {\n  // Fast-path for cases where no listener is registered\n  if (listeners.size === 0) {\n    return false;\n  }\n\n  const listenersForEvent = listeners.get(event);\n  if (listenersForEvent !== undefined) {\n    queueMicrotask(() => {\n      for (const listener of listenersForEvent) {\n        listener(...args);\n      }\n    });\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Simple and efficient `EventEmitter` abstraction (following conventions from\n * Node.js) allowing partially typed event emitting. The set of event names is\n * specified as a type parameter while instantiating the event emitter.\n */\nexport class EventEmitter<EventNames> {\n  private onceListeners: EventListeners<EventNames> = new Map();\n  private onListeners: EventListeners<EventNames> = new Map();\n\n  /**\n   * Register an event listener for `event`.\n   */\n  public on(event: EventNames, callback: EventListener): void {\n    registerCallback(event, callback, this.onListeners);\n  }\n\n  /**\n   * Register an event listener for `event`; but only listen to first instance\n   * of this event. The listener is automatically deleted afterwards.\n   */\n  public once(event: EventNames, callback: EventListener): void {\n    registerCallback(event, callback, this.onceListeners);\n  }\n\n  /**\n   * Remove `callback` from list of listeners for `event`.\n   */\n  public unsubscribe(event: EventNames, callback: EventListener): void {\n    unregisterCallback(event, callback, this.onListeners);\n    unregisterCallback(event, callback, this.onceListeners);\n  }\n\n  /**\n   * Emit an event. Call all registered listeners to this event.\n   */\n  public emit(event: EventNames, ...args: any[]): void {\n    triggerCallback(event, args, this.onListeners);\n    if (triggerCallback(event, args, this.onceListeners) === true) {\n      this.onceListeners.delete(event);\n    }\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\ninterface FetchResponse {\n  text: () => Promise<string>;\n  arrayBuffer: () => Promise<ArrayBuffer>;\n  json: () => Promise<any>;\n}\n\nexport type Fetch = (url: string) => Promise<FetchResponse>;\n\n/**\n * Built-in fetch helpers can be used to initialize the adblocker from\n * pre-built presets or raw lists (fetched from multiple sources). In case of\n * failure (e.g. timeout), the whole process of initialization fails. Timeouts\n * are not so uncommon, and retrying to fetch usually succeeds.\n */\nexport function fetchWithRetry(fetch: Fetch, url: string): Promise<FetchResponse> {\n  let retry = 3;\n\n  // Wrap `fetch` into a lightweight retry function which makes sure that if\n  // fetching fails, it can be retried up to three times. Failure can happen if\n  // the remote server times-out, but retrying fetching of the same URL will\n  // usually succeed.\n  const fetchWrapper = (): Promise<FetchResponse> => {\n    return fetch(url).catch((ex) => {\n      if (retry > 0) {\n        retry -= 1;\n        return new Promise((resolve, reject) => {\n          setTimeout(() => {\n            fetchWrapper().then(resolve).catch(reject);\n          }, 500);\n        });\n      }\n\n      throw ex;\n    });\n  };\n\n  return fetchWrapper();\n}\n\nfunction fetchResource(fetch: Fetch, url: string): Promise<string> {\n  return fetchWithRetry(fetch, url).then((response) => response.text());\n}\n\nconst PREFIX =\n  'https://raw.githubusercontent.com/cliqz-oss/adblocker/master/packages/adblocker/assets';\n\nexport const adsLists = [\n  `${PREFIX}/easylist/easylist.txt`,\n  `${PREFIX}/easylist/easylistgermany.txt`,\n  `${PREFIX}/peter-lowe/serverlist.txt`,\n  `${PREFIX}/ublock-origin/annoyances.txt`,\n  `${PREFIX}/ublock-origin/badware.txt`,\n  `${PREFIX}/ublock-origin/filters.txt`,\n  `${PREFIX}/ublock-origin/filters-2020.txt`,\n  `${PREFIX}/ublock-origin/filters-2021.txt`,\n  `${PREFIX}/ublock-origin/filters-2022.txt`,\n  `${PREFIX}/ublock-origin/resource-abuse.txt`,\n  `${PREFIX}/ublock-origin/unbreak.txt`,\n];\n\nexport const adsAndTrackingLists = [\n  ...adsLists,\n  `${PREFIX}/easylist/easyprivacy.txt`,\n  `${PREFIX}/ublock-origin/privacy.txt`,\n];\n\nexport const fullLists = [...adsAndTrackingLists, `${PREFIX}/easylist/easylist-cookie.txt`];\n\n/**\n * Fetch latest version of enabledByDefault blocking lists.\n */\nexport function fetchLists(fetch: Fetch, urls: string[]): Promise<string[]> {\n  return Promise.all(urls.map((url) => fetchResource(fetch, url)));\n}\n\n/**\n * Fetch latest version of uBlock Origin's resources, used to inject scripts in\n * the page or redirect request to data URLs.\n */\nexport function fetchResources(fetch: Fetch): Promise<string> {\n  return fetchResource(fetch, `${PREFIX}/ublock-origin/resources.txt`);\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nclass HidingBuilder {}\n\ntype RequestType = 'image' | 'script' | 'font' | 'frame' | 'media' | 'font' | 'css';\n\nclass NetworkBuilder {\n  private options: Set<RequestType> = new Set();\n\n  private prefix: string | undefined = undefined;\n  private infix: string | undefined = undefined;\n  private suffix: string | undefined = undefined;\n\n  private redirect: string | undefined = undefined;\n\n  private blockRequestsWithType(t: RequestType): NetworkBuilder {\n    if (this.options.has(t)) {\n      throw new Error(`Already blocking type ${t}`);\n    }\n\n    this.options.add(t);\n    return this;\n  }\n\n  public images(): NetworkBuilder {\n    return this.blockRequestsWithType('image');\n  }\n\n  public scripts(): NetworkBuilder {\n    return this.blockRequestsWithType('script');\n  }\n\n  public frames(): NetworkBuilder {\n    return this.blockRequestsWithType('frame');\n  }\n\n  public fonts(): NetworkBuilder {\n    return this.blockRequestsWithType('font');\n  }\n\n  public medias(): NetworkBuilder {\n    return this.blockRequestsWithType('media');\n  }\n\n  public styles(): NetworkBuilder {\n    return this.blockRequestsWithType('css');\n  }\n\n  public redirectTo(redirect: string): NetworkBuilder {\n    if (this.redirect !== undefined) {\n      throw new Error(`Already redirecting: ${this.redirect}`);\n    }\n    this.redirect = `redirect=${redirect}`;\n    return this;\n  }\n\n  public urlContains(infix: string): NetworkBuilder {\n    if (this.infix !== undefined) {\n      throw new Error(`Already matching pattern: ${this.infix}`);\n    }\n    this.infix = infix;\n    return this;\n  }\n\n  public urlStartsWith(prefix: string): NetworkBuilder {\n    if (this.prefix !== undefined) {\n      throw new Error(`Already matching prefix: ${this.prefix}`);\n    }\n    this.prefix = `|${prefix}`;\n    return this;\n  }\n\n  public urlEndsWith(suffix: string): NetworkBuilder {\n    if (this.suffix !== undefined) {\n      throw new Error(`Already matching suffix: ${this.suffix}`);\n    }\n    this.suffix = `${suffix}|`;\n    return this;\n  }\n\n  public withHostname(hostname: string): NetworkBuilder {\n    if (this.prefix !== undefined) {\n      throw new Error(`Cannot match hostname if filter already has prefix: ${this.prefix}`);\n    }\n    this.prefix = `||${hostname}^`;\n    return this;\n  }\n\n  public toString(): string {\n    const parts: string[] = [];\n\n    if (this.prefix !== undefined) {\n      parts.push(this.prefix);\n    }\n\n    if (this.infix !== undefined) {\n      parts.push(this.infix);\n    }\n\n    if (this.suffix !== undefined) {\n      parts.push(this.suffix);\n    }\n\n    const options: string[] = ['important'];\n\n    if (this.options.size !== 0) {\n      for (const option of this.options) {\n        options.push(option);\n      }\n    }\n\n    if (this.redirect !== undefined) {\n      options.push(this.redirect);\n    }\n\n    return `${parts.length === 0 ? '*' : parts.join('*')}$${options.join(',')}`;\n  }\n}\n\nexport function block(): NetworkBuilder {\n  return new NetworkBuilder();\n}\n\nexport function hide(): HidingBuilder {\n  return new HidingBuilder();\n}\n","/*!\n * Based on parsel. Extended by Rémi Berson for Ghostery (2021).\n * https://github.com/LeaVerou/parsel\n *\n * MIT License\n *\n * Copyright (c) 2020 Lea Verou\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { isAST, isAtoms } from './types';\nimport type {\n  AST,\n  Atoms,\n  AtomsOrStrings,\n  Attribute,\n  Class,\n  Combinator,\n  Comma,\n  Id,\n  ParserOptions,\n  PseudoClass,\n  PseudoElement,\n  Strings,\n  TokenType,\n  Type,\n} from './types';\n\nexport const RECURSIVE_PSEUDO_CLASSES = new Set([\n  'any',\n  'dir',\n  'has',\n  'host-context',\n  'if',\n  'if-not',\n  'is',\n  'matches',\n  'not',\n  'where',\n]);\n\nconst TOKENS: { [T in TokenType]: RegExp } = {\n  attribute: /\\[\\s*(?:(?<namespace>\\*|[-\\w]*)\\|)?(?<name>[-\\w\\u{0080}-\\u{FFFF}]+)\\s*(?:(?<operator>\\W?=)\\s*(?<value>.+?)\\s*(?<caseSensitive>[iIsS])?\\s*)?\\]/gu,\n  id: /#(?<name>(?:[-\\w\\u{0080}-\\u{FFFF}]|\\\\.)+)/gu,\n  class: /\\.(?<name>(?:[-\\w\\u{0080}-\\u{FFFF}]|\\\\.)+)/gu,\n  comma: /\\s*,\\s*/g, // must be before combinator\n  combinator: /\\s*[\\s>+~]\\s*/g, // this must be after attribute\n  'pseudo-element': /::(?<name>[-\\w\\u{0080}-\\u{FFFF}]+)(?:\\((?:¶*)\\))?/gu, // this must be before pseudo-class\n  'pseudo-class': /:(?<name>[-\\w\\u{0080}-\\u{FFFF}]+)(?:\\((?<argument>¶*)\\))?/gu,\n  type: /(?:(?<namespace>\\*|[-\\w]*)\\|)?(?<name>[-\\w\\u{0080}-\\u{FFFF}]+)|\\*/gu, // this must be last\n};\n\nconst TOKENS_WITH_PARENS: Set<TokenType> = new Set(['pseudo-class', 'pseudo-element']);\nconst TOKENS_WITH_STRINGS: Set<TokenType> = new Set([...TOKENS_WITH_PARENS, 'attribute']);\nconst TRIM_TOKENS: Set<TokenType> = new Set(['combinator', 'comma']);\n\nconst TOKENS_FOR_RESTORE: { [T in TokenType]: RegExp } = Object.assign({}, TOKENS);\nTOKENS_FOR_RESTORE['pseudo-element'] = RegExp(\n  TOKENS['pseudo-element'].source.replace('(?<argument>¶*)', '(?<argument>.*?)'),\n  'gu',\n);\nTOKENS_FOR_RESTORE['pseudo-class'] = RegExp(\n  TOKENS['pseudo-class'].source.replace('(?<argument>¶*)', '(?<argument>.*)'),\n  'gu',\n);\n\n// TODO - it feels like with some more typing shenanigans we could replace groups validation by generic logic in this function.\nfunction splitOnMatch(\n  pattern: RegExp,\n  str: string,\n): [string, [string, { [name: string]: string }], string] | undefined {\n  pattern.lastIndex = 0;\n  const match = pattern.exec(str);\n\n  if (match === null) {\n    return undefined;\n  }\n\n  const from = match.index - 1;\n  const content = match[0];\n  const before = str.slice(0, from + 1);\n  const after = str.slice(from + content.length + 1);\n\n  return [before, [content, match.groups || {}], after];\n}\n\nconst GRAMMAR = [\n  // attribute\n  (str: string): [string, Attribute, string] | undefined => {\n    const match = splitOnMatch(TOKENS.attribute, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content, { name, operator, value, namespace, caseSensitive }], after] = match;\n    if (name === undefined) {\n      return undefined;\n    }\n\n    return [\n      before,\n      {\n        type: 'attribute',\n        content,\n        length: content.length,\n        namespace,\n        caseSensitive,\n        pos: [],\n        name,\n        operator,\n        value,\n      },\n      after,\n    ];\n  },\n\n  // #id\n  (str: string): [string, Id, string] | undefined => {\n    const match = splitOnMatch(TOKENS.id, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content, { name }], after] = match;\n    if (name === undefined) {\n      return undefined;\n    }\n\n    return [\n      before,\n      {\n        type: 'id',\n        content,\n        length: content.length,\n        pos: [],\n        name,\n      },\n      after,\n    ];\n  },\n\n  // .class\n  (str: string): [string, Class, string] | undefined => {\n    const match = splitOnMatch(TOKENS.class, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content, { name }], after] = match;\n    if (name === undefined) {\n      return undefined;\n    }\n\n    return [\n      before,\n      {\n        type: 'class',\n        content,\n        length: content.length,\n        pos: [],\n        name,\n      },\n      after,\n    ];\n  },\n\n  // comma ,\n  (str: string): [string, Comma, string] | undefined => {\n    const match = splitOnMatch(TOKENS.comma, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content], after] = match;\n\n    return [\n      before,\n      {\n        type: 'comma',\n        content,\n        length: content.length,\n        pos: [],\n      },\n      after,\n    ];\n  },\n\n  // combinator\n  (str: string): [string, Combinator, string] | undefined => {\n    const match = splitOnMatch(TOKENS.combinator, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content], after] = match;\n\n    return [\n      before,\n      {\n        type: 'combinator',\n        content,\n        length: content.length,\n        pos: [],\n      },\n      after,\n    ];\n  },\n\n  // pseudo-element\n  (str: string): [string, PseudoElement, string] | undefined => {\n    const match = splitOnMatch(TOKENS['pseudo-element'], str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content, { name }], after] = match;\n\n    if (name === undefined) {\n      return undefined;\n    }\n\n    return [\n      before,\n      {\n        type: 'pseudo-element',\n        content,\n        length: content.length,\n        pos: [],\n        name,\n      },\n      after,\n    ];\n  },\n\n  // pseudo-class\n  (str: string): [string, PseudoClass, string] | undefined => {\n    const match = splitOnMatch(TOKENS['pseudo-class'], str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    // TODO - here `argument` can be undefined and should be rejected?\n    const [before, [content, { name, argument }], after] = match;\n\n    if (name === undefined) {\n      return undefined;\n    }\n\n    return [\n      before,\n      {\n        type: 'pseudo-class',\n        content,\n        length: content.length,\n        pos: [],\n        name,\n        argument,\n        subtree: undefined,\n      },\n      after,\n    ];\n  },\n\n  // type\n  (str: string): [string, Type, string] | undefined => {\n    const match = splitOnMatch(TOKENS.type, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content, { name, namespace }], after] = match;\n\n    return [\n      before,\n      {\n        type: 'type',\n        content,\n        length: content.length,\n        namespace,\n        pos: [],\n        name,\n      },\n      after,\n    ];\n  },\n];\n\nfunction tokenizeBy(text: string): Atoms {\n  if (!text) {\n    return [];\n  }\n\n  const strarr: AtomsOrStrings = [text];\n  for (const tokenizer of GRAMMAR) {\n    for (let i = 0; i < strarr.length; i++) {\n      const str = strarr[i];\n      if (typeof str === 'string') {\n        const match = tokenizer(str);\n        if (match !== undefined) {\n          strarr.splice(i, 1, ...(match as AtomsOrStrings).filter((a) => a.length !== 0));\n        }\n      }\n    }\n  }\n\n  let offset = 0;\n  for (const token of strarr) {\n    if (typeof token !== 'string') {\n      token.pos = [offset, offset + token.length];\n      if (TRIM_TOKENS.has(token.type)) {\n        token.content = token.content.trim() || ' ';\n      }\n    }\n\n    offset += token.length;\n  }\n\n  if (isAtoms(strarr)) {\n    return strarr;\n  }\n\n  // NOTE: here this means that parsing failed.\n  return [];\n}\n\nfunction restoreNested(tokens: Atoms, strings: Strings, regex: RegExp, types: Set<TokenType>) {\n  // TODO - here from offsets in strings and tokens we should be able to find the exact spot without RegExp?\n  for (const str of strings) {\n    for (const token of tokens) {\n      if (types.has(token.type) && token.pos[0] < str.start && str.start < token.pos[1]) {\n        const content = token.content;\n        token.content = token.content.replace(regex, str.str);\n\n        if (token.content !== content) {\n          // actually changed?\n          // Re-evaluate groups\n          TOKENS_FOR_RESTORE[token.type].lastIndex = 0;\n          const match = TOKENS_FOR_RESTORE[token.type].exec(token.content);\n          if (match !== null) {\n            Object.assign(token, match.groups);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function isEscaped(str: string, index: number): boolean {\n  let backslashes = 0;\n\n  index -= 1;\n  while (index >= 0 && str[index] === '\\\\') {\n    backslashes += 1;\n    index -= 1;\n  }\n\n  return backslashes % 2 !== 0;\n}\n\nexport function gobbleQuotes(text: string, quote: '\"' | \"'\", start: number): string | undefined {\n  // Find end of quote, taking care of ignoring escaped quotes\n  let end = start + 1;\n\n  /* tslint:disable no-conditional-assignment */\n  while ((end = text.indexOf(quote, end)) !== -1 && isEscaped(text, end) === true) {\n    end += 1;\n  }\n\n  if (end === -1) {\n    // Opening quote without closing quote\n    return undefined;\n  }\n\n  return text.slice(start, end + 1);\n}\n\nexport function gobbleParens(text: string, start: number): string | undefined {\n  let stack = 0;\n\n  for (let i = start; i < text.length; i++) {\n    const char = text[i];\n\n    if (char === '(') {\n      stack += 1;\n    } else if (char === ')') {\n      if (stack > 0) {\n        stack -= 1;\n      } else {\n        // Closing paren without opening paren\n        return undefined;\n      }\n    }\n\n    if (stack === 0) {\n      return text.slice(start, i + 1);\n    }\n  }\n\n  // Opening paren without closing paren\n  return undefined;\n}\n\nexport function replace(\n  selector: string,\n  replacement: '¶' | '§',\n  opening: '(' | '\"' | \"'\",\n  gobble: (text: string, start: number) => string | undefined,\n): [Strings, string] {\n  const strings: Strings = [];\n\n  let offset = 0;\n  /* tslint:disable no-conditional-assignment */\n  while ((offset = selector.indexOf(opening, offset)) !== -1) {\n    const str = gobble(selector, offset);\n    if (str === undefined) {\n      break;\n    }\n\n    strings.push({ str, start: offset });\n    selector = `${selector.slice(0, offset + 1)}${replacement.repeat(\n      str.length - 2,\n    )}${selector.slice(offset + str.length - 1)}`;\n    offset += str.length;\n  }\n\n  return [strings, selector];\n}\n\nexport function tokenize(selector: string): Atoms {\n  if (typeof selector !== 'string') {\n    return [];\n  }\n\n  // Prevent leading/trailing whitespace be interpreted as combinators\n  selector = selector.trim();\n\n  if (selector.length === 0) {\n    return [];\n  }\n\n  // Replace strings with whitespace strings (to preserve offsets)\n  const [doubleQuotes, selectorWithoutDoubleQuotes] = replace(\n    selector,\n    '§',\n    '\"',\n    (text: string, start: number) => gobbleQuotes(text, '\"', start),\n  );\n\n  const [singleQuotes, selectorWithoutQuotes] = replace(\n    selectorWithoutDoubleQuotes,\n    '§',\n    \"'\",\n    (text: string, start: number) => gobbleQuotes(text, \"'\", start),\n  );\n\n  // Now that strings are out of the way, extract parens and replace them with parens with whitespace (to preserve offsets)\n  const [parens, selectorWithoutParens] = replace(selectorWithoutQuotes, '¶', '(', gobbleParens);\n\n  // Now we have no nested structures and we can parse with regexes\n  const tokens = tokenizeBy(selectorWithoutParens);\n\n  // Now restore parens and strings in reverse order\n  restoreNested(tokens, parens, /\\(¶*\\)/, TOKENS_WITH_PARENS);\n  restoreNested(tokens, doubleQuotes, /\"§*\"/, TOKENS_WITH_STRINGS);\n  restoreNested(tokens, singleQuotes, /'§*'/, TOKENS_WITH_STRINGS);\n\n  return tokens;\n}\n\n// Convert a flat list of tokens into a tree of complex & compound selectors\nfunction nestTokens(\n  tokens: Atoms,\n  { list = true }: Pick<ParserOptions, 'list'> = {},\n): AST | undefined {\n  if (list === true && tokens.some((t) => t.type === 'comma')) {\n    const selectors: AST[] = [];\n    const temp: Atoms = [];\n\n    for (let i = 0; i < tokens.length; i += 1) {\n      const token = tokens[i];\n      if (token.type === 'comma') {\n        if (temp.length === 0) {\n          throw new Error('Incorrect comma at ' + i);\n        }\n\n        const sub = nestTokens(temp, { list: false });\n        if (sub !== undefined) {\n          selectors.push(sub);\n        }\n        temp.length = 0;\n      } else {\n        temp.push(token);\n      }\n    }\n\n    if (temp.length === 0) {\n      throw new Error('Trailing comma');\n    } else {\n      const sub = nestTokens(temp, { list: false });\n      if (sub !== undefined) {\n        selectors.push(sub);\n      }\n    }\n\n    return { type: 'list', list: selectors };\n  }\n\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    const token = tokens[i];\n\n    if (token.type === 'combinator') {\n      const left = nestTokens(tokens.slice(0, i));\n      const right = nestTokens(tokens.slice(i + 1));\n      if (right === undefined) {\n        return undefined;\n      }\n\n      if (\n        token.content !== ' ' &&\n        token.content !== '~' &&\n        token.content !== '+' &&\n        token.content !== '>'\n      ) {\n        return undefined;\n      }\n\n      return {\n        type: 'complex',\n        combinator: token.content,\n        left,\n        right,\n      };\n    }\n  }\n\n  if (tokens.length === 0) {\n    return undefined;\n  }\n\n  if (isAST(tokens)) {\n    if (tokens.length === 1) {\n      return tokens[0];\n    }\n\n    // If we're here, there are no combinators, so it's just a list\n    return {\n      type: 'compound',\n      compound: [...tokens], // clone to avoid pointers messing up the AST\n    };\n  }\n\n  return undefined;\n}\n\n// Traverse an AST (or part thereof), in depth-first order\nfunction walk(\n  node: AST | undefined,\n  callback: (node: AST, parentNode?: AST) => void,\n  o?: AST,\n  parent?: AST,\n): void {\n  if (node === undefined) {\n    return;\n  }\n\n  if (node.type === 'complex') {\n    walk(node.left, callback, o, node);\n    walk(node.right, callback, o, node);\n  } else if (node.type === 'compound') {\n    for (const n of node.compound) {\n      walk(n, callback, o, node);\n    }\n  } else if (\n    node.type === 'pseudo-class' &&\n    node.subtree !== undefined &&\n    o !== undefined &&\n    o.type === 'pseudo-class' &&\n    o.subtree !== undefined\n  ) {\n    walk(node.subtree, callback, o, node);\n  }\n\n  callback(node, parent);\n}\n\n/**\n * Parse a CSS selector\n * @param selector {String} The selector to parse\n * @param options.recursive {Boolean} Whether to parse the arguments of pseudo-classes like :is(), :has() etc. Defaults to true.\n * @param options.list {Boolean} Whether this can be a selector list (A, B, C etc). Defaults to true.\n */\nexport function parse(\n  selector: string,\n  { recursive = true, list = true }: ParserOptions = {},\n): AST | undefined {\n  const tokens = tokenize(selector);\n\n  if (tokens.length === 0) {\n    return undefined;\n  }\n\n  const ast = nestTokens(tokens, { list });\n\n  if (recursive === true) {\n    walk(ast, (node) => {\n      if (\n        node.type === 'pseudo-class' &&\n        node.argument &&\n        node.name !== undefined &&\n        RECURSIVE_PSEUDO_CLASSES.has(node.name)\n      ) {\n        node.subtree = parse(node.argument, { recursive: true, list: true });\n      }\n    });\n  }\n\n  return ast;\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nconst tokenTypes = [\n  'attribute',\n  'id',\n  'class',\n  'comma',\n  'combinator',\n  'pseudo-element',\n  'pseudo-class',\n  'type',\n] as const;\n\nexport type TokenType = typeof tokenTypes[number];\n\nexport type Base = {\n  length: number;\n  content: string;\n  pos: number[];\n};\n\nexport type Type = Base & {\n  type: 'type';\n  name?: string;\n  namespace?: string;\n};\n\nexport type PseudoClass = Base & {\n  type: 'pseudo-class';\n  name: string;\n  argument: string | undefined;\n  subtree: AST | undefined;\n};\n\nexport type PseudoElement = Base & {\n  type: 'pseudo-element';\n  name: string;\n};\n\nexport type Combinator = Base & {\n  type: 'combinator';\n};\n\nexport type Comma = Base & {\n  type: 'comma';\n};\n\nexport type Class = Base & {\n  type: 'class';\n  name: string;\n};\n\nexport type Id = Base & {\n  type: 'id';\n  name: string;\n};\n\nexport type Attribute = Base & {\n  type: 'attribute';\n  namespace?: string;\n  caseSensitive?: string;\n  name: string;\n  operator?: string;\n  value?: string;\n};\n\nexport type Atom =\n  | Attribute\n  | Id\n  | Class\n  | Comma\n  | Combinator\n  | PseudoClass\n  | PseudoElement\n  | Type;\n\nexport type Atoms = Atom[];\n\nexport type AtomOrString = Atom | string;\n\nexport type AtomsOrStrings = AtomOrString[];\n\nexport type Strings = { str: string; start: number }[];\n\n// Complex selectors with combinators (e.g. ~, >, +)\nexport interface Complex {\n  type: 'complex';\n  combinator: ' ' | '+' | '~' | '>';\n  right: AST;\n  left: AST | undefined;\n}\n\n// Multiple selectors together\n// i.e. selector1selector2 (should match both at the same time)\nexport interface Compound {\n  type: 'compound';\n  compound: AST[];\n}\n\n// Comma-separated list of selectors\n// i.e. selector1, selector2, etc.\nexport interface List {\n  type: 'list';\n  list: AST[];\n}\n\nexport type AST =\n  | Attribute\n  | Id\n  | Class\n  | PseudoClass\n  | PseudoElement\n  | Type\n  | Complex\n  | Compound\n  | List;\n\nexport interface ParserOptions {\n  recursive?: boolean;\n  list?: boolean;\n}\n\nexport function isAtoms(tokens: AtomsOrStrings): tokens is Atoms {\n  return tokens.every((token) => typeof token !== 'string');\n}\n\nexport function isAST(\n  tokens: Atoms,\n): tokens is (Attribute | Id | Class | PseudoClass | PseudoElement | Type)[] {\n  return tokens.every((token) => token.type !== 'comma' && token.type !== 'combinator');\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { tokenize, RECURSIVE_PSEUDO_CLASSES } from './parse';\n\nexport const EXTENDED_PSEUDO_CLASSES = new Set([\n  // '-abp-contains',\n  // '-abp-has',\n  // '-abp-properties',\n  'has',\n  'has-text',\n  'if',\n  // 'if-not',\n  // 'matches-css',\n  // 'matches-css-after',\n  // 'matches-css-before',\n  // 'min-text-length',\n  // 'nth-ancestor',\n  // 'upward',\n  // 'watch-attr',\n  // 'watch-attrs',\n  // 'xpath',\n]);\n\nexport const PSEUDO_CLASSES = new Set([\n  'active',\n  'any',\n  'any-link',\n  'blank',\n  'checked',\n  'default',\n  'defined',\n  'dir',\n  'disabled',\n  'empty',\n  'enabled',\n  'first',\n  'first-child',\n  'first-of-type',\n  'focus',\n  'focus-visible',\n  'focus-within',\n  'fullscreen',\n  'host',\n  'host-context',\n  'hover',\n  'in-range',\n  'indeterminate',\n  'invalid',\n  'is',\n  'lang',\n  'last-child',\n  'last-of-type',\n  'left',\n  'link',\n  'matches',\n  // NOTE: by default we consider `:not(...)` to be a normal CSS selector since,\n  // we are only interested in cases where the argument is an extended selector.\n  // If that is the case, it will still be detected as such.\n  'not',\n  'nth-child',\n  'nth-last-child',\n  'nth-last-of-type',\n  'nth-of-type',\n  'only-child',\n  'only-of-type',\n  'optional',\n  'out-of-range',\n  'placeholder-shown',\n  'read-only',\n  'read-write',\n  'required',\n  'right',\n  'root',\n  'scope',\n  'target',\n  'valid',\n  'visited',\n  'where',\n]);\n\n// NOTE: here we only need to list the pseudo-elements which can appear with a\n// single colon (e.g. :after or ::after are valid for backward compatibility\n// reasons). They can be misinterpreted as pseudo-classes by the tokenizer for\n// this reason.\nexport const PSEUDO_ELEMENTS = new Set(['after', 'before', 'first-letter', 'first-line']);\n\nexport enum SelectorType {\n  Normal,\n  Extended,\n  Invalid,\n}\n\nexport function classifySelector(selector: string): SelectorType {\n  // In most cases there is no pseudo-anything so we can quickly exit.\n  if (selector.indexOf(':') === -1) {\n    return SelectorType.Normal;\n  }\n\n  const tokens = tokenize(selector);\n\n  // Detect pseudo-classes\n  let foundSupportedExtendedSelector = false;\n  for (const token of tokens) {\n    if (token.type === 'pseudo-class') {\n      const { name } = token;\n      if (EXTENDED_PSEUDO_CLASSES.has(name) === true) {\n        foundSupportedExtendedSelector = true;\n      } else if (PSEUDO_CLASSES.has(name) === false && PSEUDO_ELEMENTS.has(name) === false) {\n        return SelectorType.Invalid;\n      }\n\n      // Recursively\n      if (\n        foundSupportedExtendedSelector === false &&\n        token.argument !== undefined &&\n        RECURSIVE_PSEUDO_CLASSES.has(name) === true\n      ) {\n        const argumentType = classifySelector(token.argument);\n        if (argumentType === SelectorType.Invalid) {\n          return argumentType;\n        } else if (argumentType === SelectorType.Extended) {\n          foundSupportedExtendedSelector = true;\n        }\n      }\n    }\n  }\n\n  if (foundSupportedExtendedSelector === true) {\n    return SelectorType.Extended;\n  }\n\n  return SelectorType.Normal;\n}\n",null,null,null,null,null,null,"/**\n * @param url - URL we want to extract a hostname from.\n * @param urlIsValidHostname - hint from caller; true if `url` is already a valid hostname.\n */\nexport default function extractHostname(\n  url: string,\n  urlIsValidHostname: boolean,\n): string | null {\n  let start: number = 0;\n  let end: number = url.length;\n  let hasUpper: boolean = false;\n\n  // If url is not already a valid hostname, then try to extract hostname.\n  if (urlIsValidHostname === false) {\n    // Special handling of data URLs\n    if (url.startsWith('data:') === true) {\n      return null;\n    }\n\n    // Trim leading spaces\n    while (start < url.length && url.charCodeAt(start) <= 32) {\n      start += 1;\n    }\n\n    // Trim trailing spaces\n    while (end > start + 1 && url.charCodeAt(end - 1) <= 32) {\n      end -= 1;\n    }\n\n    // Skip scheme.\n    if (\n      url.charCodeAt(start) === 47 /* '/' */ &&\n      url.charCodeAt(start + 1) === 47 /* '/' */\n    ) {\n      start += 2;\n    } else {\n      const indexOfProtocol = url.indexOf(':/', start);\n      if (indexOfProtocol !== -1) {\n        // Implement fast-path for common protocols. We expect most protocols\n        // should be one of these 4 and thus we will not need to perform the\n        // more expansive validity check most of the time.\n        const protocolSize = indexOfProtocol - start;\n        const c0 = url.charCodeAt(start);\n        const c1 = url.charCodeAt(start + 1);\n        const c2 = url.charCodeAt(start + 2);\n        const c3 = url.charCodeAt(start + 3);\n        const c4 = url.charCodeAt(start + 4);\n\n        if (\n          protocolSize === 5 &&\n          c0 === 104 /* 'h' */ &&\n          c1 === 116 /* 't' */ &&\n          c2 === 116 /* 't' */ &&\n          c3 === 112 /* 'p' */ &&\n          c4 === 115 /* 's' */\n        ) {\n          // https\n        } else if (\n          protocolSize === 4 &&\n          c0 === 104 /* 'h' */ &&\n          c1 === 116 /* 't' */ &&\n          c2 === 116 /* 't' */ &&\n          c3 === 112 /* 'p' */\n        ) {\n          // http\n        } else if (\n          protocolSize === 3 &&\n          c0 === 119 /* 'w' */ &&\n          c1 === 115 /* 's' */ &&\n          c2 === 115 /* 's' */\n        ) {\n          // wss\n        } else if (\n          protocolSize === 2 &&\n          c0 === 119 /* 'w' */ &&\n          c1 === 115 /* 's' */\n        ) {\n          // ws\n        } else {\n          // Check that scheme is valid\n          for (let i = start; i < indexOfProtocol; i += 1) {\n            const lowerCaseCode = url.charCodeAt(i) | 32;\n            if (\n              ((lowerCaseCode >= 97 && lowerCaseCode <= 122) || // [a, z]\n              (lowerCaseCode >= 48 && lowerCaseCode <= 57) || // [0, 9]\n              lowerCaseCode === 46 || // '.'\n              lowerCaseCode === 45 || // '-'\n                lowerCaseCode === 43) === false // '+'\n            ) {\n              return null;\n            }\n          }\n        }\n\n        // Skip 0, 1 or more '/' after ':/'\n        start = indexOfProtocol + 2;\n        while (url.charCodeAt(start) === 47 /* '/' */) {\n          start += 1;\n        }\n      }\n    }\n\n    // Detect first occurrence of '/', '?' or '#'. We also keep track of the\n    // last occurrence of '@', ']' or ':' to speed-up subsequent parsing of\n    // (respectively), identifier, ipv6 or port.\n    let indexOfIdentifier: number = -1;\n    let indexOfClosingBracket: number = -1;\n    let indexOfPort: number = -1;\n    for (let i = start; i < end; i += 1) {\n      const code: number = url.charCodeAt(i);\n      if (\n        code === 35 || // '#'\n        code === 47 || // '/'\n        code === 63 // '?'\n      ) {\n        end = i;\n        break;\n      } else if (code === 64) {\n        // '@'\n        indexOfIdentifier = i;\n      } else if (code === 93) {\n        // ']'\n        indexOfClosingBracket = i;\n      } else if (code === 58) {\n        // ':'\n        indexOfPort = i;\n      } else if (code >= 65 && code <= 90) {\n        hasUpper = true;\n      }\n    }\n\n    // Detect identifier: '@'\n    if (\n      indexOfIdentifier !== -1 &&\n      indexOfIdentifier > start &&\n      indexOfIdentifier < end\n    ) {\n      start = indexOfIdentifier + 1;\n    }\n\n    // Handle ipv6 addresses\n    if (url.charCodeAt(start) === 91 /* '[' */) {\n      if (indexOfClosingBracket !== -1) {\n        return url.slice(start + 1, indexOfClosingBracket).toLowerCase();\n      }\n      return null;\n    } else if (indexOfPort !== -1 && indexOfPort > start && indexOfPort < end) {\n      // Detect port: ':'\n      end = indexOfPort;\n    }\n  }\n\n  // Trim trailing dots\n  while (end > start + 1 && url.charCodeAt(end - 1) === 46 /* '.' */) {\n    end -= 1;\n  }\n\n  const hostname: string =\n    start !== 0 || end !== url.length ? url.slice(start, end) : url;\n\n  if (hasUpper) {\n    return hostname.toLowerCase();\n  }\n\n  return hostname;\n}\n","/**\n * Implements fast shallow verification of hostnames. This does not perform a\n * struct check on the content of labels (classes of Unicode characters, etc.)\n * but instead check that the structure is valid (number of labels, length of\n * labels, etc.).\n *\n * If you need stricter validation, consider using an external library.\n */\n\nfunction isValidAscii(code: number): boolean {\n  return (\n    (code >= 97 && code <= 122) || (code >= 48 && code <= 57) || code > 127\n  );\n}\n\n/**\n * Check if a hostname string is valid. It's usually a preliminary check before\n * trying to use getDomain or anything else.\n *\n * Beware: it does not check if the TLD exists.\n */\nexport default function (hostname: string): boolean {\n  if (hostname.length > 255) {\n    return false;\n  }\n\n  if (hostname.length === 0) {\n    return false;\n  }\n\n  if (/*@__INLINE__*/ isValidAscii(hostname.charCodeAt(0)) === false) {\n    return false;\n  }\n\n  // Validate hostname according to RFC\n  let lastDotIndex: number = -1;\n  let lastCharCode: number = -1;\n  const len = hostname.length;\n\n  for (let i = 0; i < len; i += 1) {\n    const code = hostname.charCodeAt(i);\n    if (code === 46 /* '.' */) {\n      if (\n        // Check that previous label is < 63 bytes long (64 = 63 + '.')\n        i - lastDotIndex > 64 ||\n        // Check that previous character was not already a '.'\n        lastCharCode === 46 ||\n        // Check that the previous label does not end with a '-' (dash)\n        lastCharCode === 45 ||\n        // Check that the previous label does not end with a '_' (underscore)\n        lastCharCode === 95\n      ) {\n        return false;\n      }\n\n      lastDotIndex = i;\n    } else if (\n      (/*@__INLINE__*/ isValidAscii(code) || code === 45 || code === 95) ===\n      false\n    ) {\n      // Check if there is a forbidden character in the label\n      return false;\n    }\n\n    lastCharCode = code;\n  }\n\n  return (\n    // Check that last label is shorter than 63 chars\n    len - lastDotIndex - 1 <= 63 &&\n    // Check that the last character is an allowed trailing label character.\n    // Since we already checked that the char is a valid hostname character,\n    // we only need to check that it's different from '-'.\n    lastCharCode !== 45\n  );\n}\n","export interface IOptions {\n  allowIcannDomains: boolean;\n  allowPrivateDomains: boolean;\n  detectIp: boolean;\n  extractHostname: boolean;\n  mixedInputs: boolean;\n  validHosts: string[] | null;\n  validateHostname: boolean;\n}\n\nfunction setDefaultsImpl({\n  allowIcannDomains = true,\n  allowPrivateDomains = false,\n  detectIp = true,\n  extractHostname = true,\n  mixedInputs = true,\n  validHosts = null,\n  validateHostname = true,\n}: Partial<IOptions>): IOptions {\n  return {\n    allowIcannDomains,\n    allowPrivateDomains,\n    detectIp,\n    extractHostname,\n    mixedInputs,\n    validHosts,\n    validateHostname,\n  };\n}\n\nconst DEFAULT_OPTIONS = /*@__INLINE__*/ setDefaultsImpl({});\n\nexport function setDefaults(options?: Partial<IOptions>): IOptions {\n  if (options === undefined) {\n    return DEFAULT_OPTIONS;\n  }\n\n  return /*@__INLINE__*/ setDefaultsImpl(options);\n}\n","/**\n * Implement a factory allowing to plug different implementations of suffix\n * lookup (e.g.: using a trie or the packed hashes datastructures). This is used\n * and exposed in `tldts.ts` and `tldts-experimental.ts` bundle entrypoints.\n */\n\nimport getDomain from './domain';\nimport getDomainWithoutSuffix from './domain-without-suffix';\nimport extractHostname from './extract-hostname';\nimport isIp from './is-ip';\nimport isValidHostname from './is-valid';\nimport { IPublicSuffix, ISuffixLookupOptions } from './lookup/interface';\nimport { IOptions, setDefaults } from './options';\nimport getSubdomain from './subdomain';\n\nexport interface IResult {\n  // `hostname` is either a registered name (including but not limited to a\n  // hostname), or an IP address. IPv4 addresses must be in dot-decimal\n  // notation, and IPv6 addresses must be enclosed in brackets ([]). This is\n  // directly extracted from the input URL.\n  hostname: string | null;\n\n  // Is `hostname` an IP? (IPv4 or IPv6)\n  isIp: boolean | null;\n\n  // `hostname` split between subdomain, domain and its public suffix (if any)\n  subdomain: string | null;\n  domain: string | null;\n  publicSuffix: string | null;\n  domainWithoutSuffix: string | null;\n\n  // Specifies if `publicSuffix` comes from the ICANN or PRIVATE section of the list\n  isIcann: boolean | null;\n  isPrivate: boolean | null;\n}\n\nexport function getEmptyResult(): IResult {\n  return {\n    domain: null,\n    domainWithoutSuffix: null,\n    hostname: null,\n    isIcann: null,\n    isIp: null,\n    isPrivate: null,\n    publicSuffix: null,\n    subdomain: null,\n  };\n}\n\nexport function resetResult(result: IResult): void {\n  result.domain = null;\n  result.domainWithoutSuffix = null;\n  result.hostname = null;\n  result.isIcann = null;\n  result.isIp = null;\n  result.isPrivate = null;\n  result.publicSuffix = null;\n  result.subdomain = null;\n}\n\n// Flags representing steps in the `parse` function. They are used to implement\n// an early stop mechanism (simulating some form of laziness) to avoid doing\n// more work than necessary to perform a given action (e.g.: we don't need to\n// extract the domain and subdomain if we are only interested in public suffix).\nexport const enum FLAG {\n  HOSTNAME,\n  IS_VALID,\n  PUBLIC_SUFFIX,\n  DOMAIN,\n  SUB_DOMAIN,\n  ALL,\n}\n\nexport function parseImpl(\n  url: string,\n  step: FLAG,\n  suffixLookup: (\n    _1: string,\n    _2: ISuffixLookupOptions,\n    _3: IPublicSuffix,\n  ) => void,\n  partialOptions: Partial<IOptions>,\n  result: IResult,\n): IResult {\n  const options: IOptions = /*@__INLINE__*/ setDefaults(partialOptions);\n\n  // Very fast approximate check to make sure `url` is a string. This is needed\n  // because the library will not necessarily be used in a typed setup and\n  // values of arbitrary types might be given as argument.\n  if (typeof url !== 'string') {\n    return result;\n  }\n\n  // Extract hostname from `url` only if needed. This can be made optional\n  // using `options.extractHostname`. This option will typically be used\n  // whenever we are sure the inputs to `parse` are already hostnames and not\n  // arbitrary URLs.\n  //\n  // `mixedInput` allows to specify if we expect a mix of URLs and hostnames\n  // as input. If only hostnames are expected then `extractHostname` can be\n  // set to `false` to speed-up parsing. If only URLs are expected then\n  // `mixedInputs` can be set to `false`. The `mixedInputs` is only a hint\n  // and will not change the behavior of the library.\n  if (options.extractHostname === false) {\n    result.hostname = url;\n  } else if (options.mixedInputs === true) {\n    result.hostname = extractHostname(url, isValidHostname(url));\n  } else {\n    result.hostname = extractHostname(url, false);\n  }\n\n  if (step === FLAG.HOSTNAME || result.hostname === null) {\n    return result;\n  }\n\n  // Check if `hostname` is a valid ip address\n  if (options.detectIp === true) {\n    result.isIp = isIp(result.hostname);\n    if (result.isIp === true) {\n      return result;\n    }\n  }\n\n  // Perform optional hostname validation. If hostname is not valid, no need to\n  // go further as there will be no valid domain or sub-domain.\n  if (\n    options.validateHostname === true &&\n    options.extractHostname === true &&\n    isValidHostname(result.hostname) === false\n  ) {\n    result.hostname = null;\n    return result;\n  }\n\n  // Extract public suffix\n  suffixLookup(result.hostname, options, result);\n  if (step === FLAG.PUBLIC_SUFFIX || result.publicSuffix === null) {\n    return result;\n  }\n\n  // Extract domain\n  result.domain = getDomain(result.publicSuffix, result.hostname, options);\n  if (step === FLAG.DOMAIN || result.domain === null) {\n    return result;\n  }\n\n  // Extract subdomain\n  result.subdomain = getSubdomain(result.hostname, result.domain);\n  if (step === FLAG.SUB_DOMAIN) {\n    return result;\n  }\n\n  // Extract domain without suffix\n  result.domainWithoutSuffix = getDomainWithoutSuffix(\n    result.domain,\n    result.publicSuffix,\n  );\n\n  return result;\n}\n","/**\n * Check if a hostname is an IP. You should be aware that this only works\n * because `hostname` is already garanteed to be a valid hostname!\n */\nfunction isProbablyIpv4(hostname: string): boolean {\n  // Cannot be shorted than 1.1.1.1\n  if (hostname.length < 7) {\n    return false;\n  }\n\n  // Cannot be longer than: 255.255.255.255\n  if (hostname.length > 15) {\n    return false;\n  }\n\n  let numberOfDots = 0;\n\n  for (let i = 0; i < hostname.length; i += 1) {\n    const code = hostname.charCodeAt(i);\n\n    if (code === 46 /* '.' */) {\n      numberOfDots += 1;\n    } else if (code < 48 /* '0' */ || code > 57 /* '9' */) {\n      return false;\n    }\n  }\n\n  return (\n    numberOfDots === 3 &&\n    hostname.charCodeAt(0) !== 46 /* '.' */ &&\n    hostname.charCodeAt(hostname.length - 1) !== 46 /* '.' */\n  );\n}\n\n/**\n * Similar to isProbablyIpv4.\n */\nfunction isProbablyIpv6(hostname: string): boolean {\n  if (hostname.length < 3) {\n    return false;\n  }\n\n  let start = hostname[0] === '[' ? 1 : 0;\n  let end = hostname.length;\n\n  if (hostname[end - 1] === ']') {\n    end -= 1;\n  }\n\n  // We only consider the maximum size of a normal IPV6. Note that this will\n  // fail on so-called \"IPv4 mapped IPv6 addresses\" but this is a corner-case\n  // and a proper validation library should be used for these.\n  if (end - start > 39) {\n    return false;\n  }\n\n  let hasColon: boolean = false;\n\n  for (; start < end; start += 1) {\n    const code = hostname.charCodeAt(start);\n\n    if (code === 58 /* ':' */) {\n      hasColon = true;\n    } else if (\n      ((code >= 48 && code <= 57) || // 0-9\n        (code >= 97 && code <= 102) || // a-f\n        (code >= 65 && code <= 90)) === // A-F\n      false\n    ) {\n      return false;\n    }\n  }\n\n  return hasColon;\n}\n\n/**\n * Check if `hostname` is *probably* a valid ip addr (either ipv6 or ipv4).\n * This *will not* work on any string. We need `hostname` to be a valid\n * hostname.\n */\nexport default function isIp(hostname: string): boolean {\n  return isProbablyIpv6(hostname) || isProbablyIpv4(hostname);\n}\n","import { IOptions } from './options';\n\n/**\n * Check if `vhost` is a valid suffix of `hostname` (top-domain)\n *\n * It means that `vhost` needs to be a suffix of `hostname` and we then need to\n * make sure that: either they are equal, or the character preceding `vhost` in\n * `hostname` is a '.' (it should not be a partial label).\n *\n * * hostname = 'not.evil.com' and vhost = 'vil.com'      => not ok\n * * hostname = 'not.evil.com' and vhost = 'evil.com'     => ok\n * * hostname = 'not.evil.com' and vhost = 'not.evil.com' => ok\n */\nfunction shareSameDomainSuffix(hostname: string, vhost: string): boolean {\n  if (hostname.endsWith(vhost)) {\n    return (\n      hostname.length === vhost.length ||\n      hostname[hostname.length - vhost.length - 1] === '.'\n    );\n  }\n\n  return false;\n}\n\n/**\n * Given a hostname and its public suffix, extract the general domain.\n */\nfunction extractDomainWithSuffix(\n  hostname: string,\n  publicSuffix: string,\n): string {\n  // Locate the index of the last '.' in the part of the `hostname` preceding\n  // the public suffix.\n  //\n  // examples:\n  //   1. not.evil.co.uk  => evil.co.uk\n  //         ^    ^\n  //         |    | start of public suffix\n  //         | index of the last dot\n  //\n  //   2. example.co.uk   => example.co.uk\n  //     ^       ^\n  //     |       | start of public suffix\n  //     |\n  //     | (-1) no dot found before the public suffix\n  const publicSuffixIndex = hostname.length - publicSuffix.length - 2;\n  const lastDotBeforeSuffixIndex = hostname.lastIndexOf('.', publicSuffixIndex);\n\n  // No '.' found, then `hostname` is the general domain (no sub-domain)\n  if (lastDotBeforeSuffixIndex === -1) {\n    return hostname;\n  }\n\n  // Extract the part between the last '.'\n  return hostname.slice(lastDotBeforeSuffixIndex + 1);\n}\n\n/**\n * Detects the domain based on rules and upon and a host string\n */\nexport default function getDomain(\n  suffix: string,\n  hostname: string,\n  options: IOptions,\n): string | null {\n  // Check if `hostname` ends with a member of `validHosts`.\n  if (options.validHosts !== null) {\n    const validHosts = options.validHosts;\n    for (let i = 0; i < validHosts.length; i += 1) {\n      const vhost = validHosts[i];\n      if (/*@__INLINE__*/ shareSameDomainSuffix(hostname, vhost) === true) {\n        return vhost;\n      }\n    }\n  }\n\n  // If `hostname` is a valid public suffix, then there is no domain to return.\n  // Since we already know that `getPublicSuffix` returns a suffix of `hostname`\n  // there is no need to perform a string comparison and we only compare the\n  // size.\n  if (suffix.length === hostname.length) {\n    return null;\n  }\n\n  // To extract the general domain, we start by identifying the public suffix\n  // (if any), then consider the domain to be the public suffix with one added\n  // level of depth. (e.g.: if hostname is `not.evil.co.uk` and public suffix:\n  // `co.uk`, then we take one more level: `evil`, giving the final result:\n  // `evil.co.uk`).\n  return /*@__INLINE__*/ extractDomainWithSuffix(hostname, suffix);\n}\n","/**\n * Returns the subdomain of a hostname string\n */\nexport default function getSubdomain(hostname: string, domain: string): string {\n  // If `hostname` and `domain` are the same, then there is no sub-domain\n  if (domain.length === hostname.length) {\n    return '';\n  }\n\n  return hostname.slice(0, -domain.length - 1);\n}\n","\n/**\n * Return the part of domain without suffix.\n *\n * Example: for domain 'foo.com', the result would be 'foo'.\n */\nexport default function getDomainWithoutSuffix(domain: string, suffix: string): string {\n  // Note: here `domain` and `suffix` cannot have the same length because in\n  // this case we set `domain` to `null` instead. It is thus safe to assume\n  // that `suffix` is shorter than `domain`.\n  return domain.slice(0, -suffix.length - 1);\n}\n","\n/* tslint:disable */\n// Code automatically generated using ./bin/builders/hashes.ts\nexport default new Uint32Array([5,0,0,9,5860739,5860978,5861026,5861029,5861126,5861352,5861357,5861403,5861586,0,0,0,1,1850179732,0,9,328184559,1866923597,2123501943,2282562397,2795346450,3130446446,3136607046,3453334789,4194175729,57,3156266,20989895,65021741,101876503,179500755,311298055,460682395,582839475,819014943,819028732,870639071,1075688039,1139486022,1241916785,1335010188,1370787547,1370800824,1431231509,1498275876,1522025464,1544104458,1554653742,1570707647,1626814538,1675555530,1687232530,1730108052,1789539963,1893848785,2001752368,2023201532,2182413090,2391299855,2419619562,2445171142,2496327381,2525245455,2573179642,2703420555,2709520566,2762771525,2921343336,2989808530,3000405309,3015527775,3047607849,3382460164,3420815319,3461355676,3498015045,3738715095,3810061811,3843717774,3934774481,4085096371,4146774829,4208486561,4167,100835,372942,373596,399643,403867,589540,737224,1210028,1861414,2424682,2658901,2946999,3329363,3333156,3822808,6942202,9086062,9095117,9267209,9340158,9485932,11010102,11406846,16314893,18146303,18331450,19211200,20314441,20356673,20797457,25057869,26663359,28320278,30499151,30585840,36605120,36990037,39275208,41892561,42049478,42538024,45214788,47656662,50173535,53599326,53858455,54537430,61367659,63815836,64422985,64643127,64831187,66751588,66844930,69226500,73517283,73904368,74144257,75706244,78793775,78794171,79558910,80324123,84993902,87977581,87978853,87978860,93811268,95641381,95641777,96671837,99012676,100511481,100947456,104528693,108215410,108929491,110526112,110662188,112311307,114507832,116811054,120488259,122521550,129191429,133427701,134012911,141513861,141517490,143344167,144349377,144362028,144550088,144770230,147205859,147810002,147989623,149598895,150736276,150856054,152379730,156555774,164189124,164189258,164189262,164189691,164189842,164560958,165069166,165106627,165107021,165339368,165444557,165444558,165444615,165444629,165444745,165444749,165445368,165512129,165512527,165749053,165749188,165749299,165749435,165749535,165779060,167155067,169909265,169909275,169909419,169909512,169909517,169909531,169909608,169909724,169909733,169909734,169909738,169909857,169910036,169910195,169910226,169938982,169939075,169939172,169939304,169939334,169939474,169939481,169939680,169939682,169939793,169977029,169977163,170281136,170281250,170281253,170281258,170281275,170281382,170281390,170281415,170281447,170281457,170281473,170281497,170281511,170281522,170281525,170281528,170281579,170281589,170281687,170281689,170281699,170281742,170281776,170281812,170281852,170281902,170281972,170311352,170649202,170649385,170649596,171188220,172078401,172145927,172484120,172484301,172788260,172788689,172788693,172788754,172788809,172788827,173118530,173118924,173456648,173591948,173930212,173930286,174306499,174306893,174307245,174307439,174358551,174374100,174509317,174577099,174644617,174843632,174844030,175181758,175524135,175524873,176843304,176948764,178529610,178530165,178530256,178530299,178530303,178530355,178868363,178868576,178868974,179274397,179274476,179379459,179379616,179379624,179379849,179379853,179380220,179657877,179692651,179714168,179913714,180090112,180090244,180090304,180090314,180090337,180090372,180090450,180090510,180090525,180090526,180090587,180090702,180091049,180091118,180091210,180091228,180091258,180091259,180283722,180292996,180293014,180293036,180293067,180293093,180293105,180293124,180293152,180293156,180293169,180293179,180293199,180293253,180293290,180293294,180293300,180293302,180293304,180293317,180293344,180293346,180293381,180293447,180293487,180293501,180293503,180293522,180293535,180293716,180293796,180293819,180293997,180294000,180294004,180294009,180428032,180902137,180969265,181108861,181240259,181240353,181240367,181240371,181240391,181240392,181240393,181240398,181240404,181240451,181240474,181240479,181240483,181240490,181240509,181240515,181240844,181240853,181240956,181241149,181241165,181241168,181244839,181375748,181548621,181548644,181548727,181548873,181549108,181549176,181949900,181950639,182056031,182385920,182419943,182893167,182893283,182893394,182893788,183163149,183163151,183163155,183163168,183163169,183163171,183163181,183163182,183163183,183163186,183163188,183163233,183163248,183163251,183163252,183163254,183163270,183163303,183163314,183163317,183163334,183163335,183163336,183163340,183163345,183163347,183163350,183163362,183163363,183163365,183163366,183163367,183163371,183163375,183163376,183163378,183163380,183163383,183163630,183163631,183163644,183163649,183163651,183163653,183163655,183163664,183163668,183163669,183163678,183163679,183163682,183163687,183163713,183163715,183163728,183163731,183163735,183163742,183163777,183163779,183163780,183163781,183163783,183163796,183163797,183163801,183163843,183163845,183163847,183163859,183163864,183163865,183163874,183163895,183163897,183163913,183163922,183163933,183163960,183163961,183163963,183163977,183163978,183163979,183163981,183163988,183163989,183163991,183163992,183163994,183163995,183163998,183164008,183164010,183164012,183164021,183164025,183164026,183164027,183164029,183164041,183164044,183164045,183164047,183164050,183164051,183164057,183164060,183164061,183164093,184080938,184081253,184081673,184081677,184081778,184246330,184246511,184486318,184486865,184487263,184828195,184828212,184844696,184844824,184848486,184848491,184849029,184849387,184859173,184869208,184869819,185163947,185216284,185289081,185292632,185295605,185501943,185502073,185502077,185772974,186723357,186723671,186723801,186763265,186771866,186840059,186858006,186875993,186950941,186953244,186994101,186994720,187011432,187022814,187064894,187067400,187076090,187078647,187088813,187161171,187188812,187203075,187219343,187222314,187251332,187328908,187332203,187378741,187385256,187386889,187403121,187403860,187404132,187409119,187410536,187415116,187415841,187417183,187453423,187455618,187483569,187506658,187521457,187531575,187554851,187557872,187932036,187932044,187932595,187932730,187932752,187932756,187932794,187932985,187932989,190236828,190304994,190305388,190372512,190372516,190372621,190372839,190373457,190575460,190575594,190879986,191043224,191246659,191458643,191459037,191524213,193856736,193857103,193857114,193857243,193991787,194363750,194498585,194498630,194498988,194499056,194499063,194532263,194532626,194532630,194532693,194532760,194532936,194533115,194802308,194802313,194802316,194802351,194802818,194802832,194802974,194803141,194803143,194803161,194803226,194803230,194836546,194870589,194870610,194871004,195040013,195040230,195040360,195077902,195078025,195078028,195078034,195078035,195078038,195078058,195078062,195078071,195078081,195078095,195078112,195078119,195078120,195078149,195078150,195078156,195078185,195078215,195078217,195078250,195078251,195078272,195078273,195078277,195078283,195078287,195078298,195078299,195078300,195078368,195078372,195078375,195078394,195078464,195078474,195078493,195078531,195078554,195078559,195078687,195078710,195078753,195078828,195078837,195078892,195078895,195078900,195078906,195078959,195078960,195078974,195078995,195078997,195079007,195146051,195817892,195817910,195818040,196653590,197775763,198219289,198248729,198354195,198354632,202063369,203326381,203326382,203326695,203326709,203326825,203326829,203327047,203327192,203360584,203427712,203428110,203563443,203563837,203664976,203665374,203762913,203901612,204069808,206121592,207568995,208227118,216046669,218659706,219797064,231775478,232370627,232791016,232866163,232870916,237059472,238230825,238671321,241611072,245880244,246752740,249954601,256262487,256399880,257210252,257542887,259810976,259829097,260353797,260353928,260353938,260354380,260381156,260390354,262186579,266014567,271387034,274620304,274691435,279382168,280527902,280532777,280535076,280542659,281931451,292827804,295209043,296292341,297619746,305011770,306510696,313583000,314643431,320313766,320318114,321023689,321141002,321447655,322472432,325454853,326762411,337081594,338040061,339830659,340010259,341833935,342149828,356194258,358990451,359223603,359276554,360204016,360327984,368215882,370146306,370150662,373255328,373394720,374785091,376173808,376667442,377307531,377336144,377652210,379825795,380248845,380316586,380849985,381874529,381884647,382049883,382486912,382598847,385650293,389069795,389909922,393290800,395076177,395140257,399168703,402724451,403769719,404122044,409655137,410188633,411785958,413977571,418962805,419080649,423458772,424591341,424705846,424926177,425050855,430711818,430784915,431116435,431157415,431370962,431390595,431489022,431585240,431586828,431608121,432925266,433686700,434854475,442888655,442922019,443587046,444998055,445176561,449218512,449424719,451217894,451870618,459172225,469098393,471052880,478642118,480635114,480636362,480638119,480638181,480638612,480653244,480658155,480658807,480939764,483974975,484603510,484645735,488826995,490491404,493445761,499075209,511578298,514111995,514955151,515474792,515491843,515593995,517240281,519409110,520595267,522631343,523234636,527144416,531427447,533682535,533847771,534396735,538362471,540682234,545433338,547443445,550462929,551440509,555571491,557981738,559064708,560636591,572640614,572652435,575127842,575742406,575835832,576590271,577168455,582462766,584490345,587585418,587768078,588145733,589399600,591647101,594353073,596395114,596517435,602054693,609523853,622957156,622959354,627471386,630686153,632559259,635121653,635859009,637007260,641167055,643225485,643488605,643663853,648008241,648304671,650538190,656171171,656243914,656640963,665693626,667797222,675938056,678076451,679253935,684522993,684536293,689172736,689202009,693611235,694324728,695649196,700774993,703142796,707132367,712377315,712470899,715533184,722903474,728415570,729335905,731964179,733989474,744440632,748265163,752520493,752687122,752687226,752699150,752938578,753314817,761228031,762792020,766278458,771168358,771342884,772916985,785945688,787032422,793080342,794341423,794638681,799598398,803443550,803504423,803576910,803750530,804046103,804899040,810638083,813049915,813882670,813882809,819687634,821390609,822184173,822865774,824372117,824828566,826639012,826993974,827575018,827624512,831815016,834750300,834856638,834963202,835666250,838463501,839632578,842350150,843454848,844441814,845393562,845537310,846032279,847050559,850228898,851897573,853098265,855980394,858467853,864019409,869651422,878524814,881613818,883922292,883926782,885943745,886050698,896206971,896253025,897230014,898924730,900375831,900562876,907903147,909690480,911040096,912288153,912452591,913046780,914761571,915088911,915769822,915838470,919008564,924477462,924490662,927206149,935240483,936096500,939243980,939281294,939375524,939697158,939922440,940027871,942640890,942743627,943328481,943363810,947022624,950098348,954017396,954872462,959069811,961909457,961915153,962363178,962549619,963013768,967703276,967948020,969062315,971904354,971904490,973306633,973317901,973587946,973591516,973595243,973613934,973618563,974354714,977251657,977925344,983357420,983929219,983931665,983936021,984542401,985262291,985854160,986356352,986883183,987313801,987563776,987600844,994961720,1002154839,1005485664,1005660307,1005931709,1008280710,1009678005,1009815854,1015938248,1018008327,1024510565,1027688850,1032624770,1033292429,1033879086,1034329743,1034357170,1038843968,1039500800,1042185353,1043537387,1043742405,1044060157,1045601283,1046273911,1046743273,1046756254,1048099261,1049404062,1052311686,1052441930,1052883806,1053590026,1055187548,1056740120,1058016469,1059921109,1060080890,1060081069,1064702402,1067370082,1067385970,1067405735,1068743400,1072264613,1080832696,1083646554,1084662717,1085312600,1086607170,1086818213,1086839634,1087030220,1087432248,1087540767,1088313455,1089639430,1089665811,1092266223,1094128841,1094382979,1100822038,1101368277,1101556739,1101657937,1101658065,1102136407,1102319129,1102691201,1104338451,1104888372,1107574816,1107604513,1107608406,1114346722,1114906227,1115517588,1116603570,1116886791,1121068214,1121069468,1121544473,1122391675,1123274870,1123277038,1123281470,1123286137,1123300855,1128066491,1128665654,1130410120,1135543458,1135544712,1135545955,1135553917,1135559494,1135563376,1136069038,1136903068,1141006631,1141018311,1142918810,1143019669,1144395492,1145288372,1146787097,1149112251,1151589762,1152383075,1153265116,1153556935,1153560693,1153560855,1153576209,1153582928,1154249515,1155609853,1158010336,1158014282,1158019276,1158022529,1158025585,1158030151,1158040127,1158040853,1158043091,1158313993,1160141196,1160245697,1160246728,1160253683,1160271099,1160271446,1160272445,1160277399,1161223806,1161235355,1162489113,1163536255,1166908086,1166937977,1166949933,1166952503,1166953757,1166959964,1167534042,1169030529,1169037994,1169039382,1169046802,1169046815,1169048548,1169054036,1169994302,1171270800,1171270813,1172775704,1173601310,1174042111,1174752677,1174762471,1175721241,1175725254,1175726508,1175727467,1175727495,1175735444,1175735449,1175736592,1175738385,1175738578,1175738760,1175746250,1175746252,1175749986,1175793566,1179261033,1181427747,1181429001,1181435208,1181446765,1181453654,1181460959,1184984869,1185692184,1189090107,1191206679,1191915740,1192411690,1192590212,1193567716,1194400508,1198881999,1198884629,1199843361,1202502980,1204258276,1204470469,1206364960,1206399154,1207407281,1207765705,1207825797,1208230324,1208429990,1208517393,1208911775,1208937193,1209536263,1211364607,1212671635,1214258492,1217924538,1220965831,1225976890,1228682933,1229000062,1229783327,1229847808,1229958905,1232816452,1237771172,1237773393,1237773841,1243202596,1245899123,1247245722,1256406409,1257366451,1260762188,1261854970,1265324777,1265669119,1273073240,1278961290,1280280379,1280768035,1291368159,1295085673,1295542469,1295875812,1296518360,1297048848,1300060481,1300364681,1303525815,1303650868,1304687455,1304781392,1304918086,1305056028,1305920823,1306968125,1306972554,1306973586,1307621261,1307665177,1308558601,1308559744,1308574194,1308583254,1308584508,1308585495,1309808754,1310362665,1310785148,1310799239,1310800921,1310801269,1310803416,1310807041,1310808370,1313021694,1313023237,1313030377,1314270973,1314287001,1314293208,1321085506,1321731136,1322807089,1322881666,1324313259,1324313985,1324320704,1324322270,1324332261,1324636022,1325293061,1325300526,1325303158,1325308368,1325309334,1325309339,1325310241,1325310486,1325311328,1325311482,1326707500,1328209699,1328777903,1328778629,1328785348,1328786906,1328789635,1328794451,1328797153,1329362352,1329963165,1329987910,1330666198,1330807345,1330903052,1331009222,1331010221,1331013633,1331015175,1331019352,1331025251,1331026645,1331028446,1331143849,1335448632,1335892543,1336436046,1336436772,1336437775,1336438057,1336439236,1336443338,1336449024,1336456660,1336460266,1336462620,1336463768,1336469142,1341018428,1341081128,1341091249,1341179896,1342001696,1344411053,1344426134,1344436952,1344437939,1344444146,1346529166,1349466130,1350170659,1350170661,1350356518,1350356534,1350620578,1351056251,1351154191,1351382419,1351445663,1353796379,1353803638,1354094479,1354229264,1354447091,1354448055,1354464484,1354467042,1354475004,1354584300,1355466970,1355483586,1355607656,1355929695,1355947655,1356095080,1356150953,1356150969,1356150973,1356457867,1356471002,1356757572,1357692080,1357876668,1357880232,1358481170,1360043731,1360220638,1362168625,1362262729,1362271868,1362285703,1362326863,1362506071,1362656266,1364891797,1365811994,1367555632,1367692098,1367811071,1368369281,1368820926,1369663049,1374458097,1377739598,1378565283,1379014609,1379224098,1381333258,1383613953,1383613964,1383629111,1383647122,1385857457,1385879444,1386127789,1386706928,1388074128,1388078600,1388084119,1388086017,1388094003,1388104573,1388109527,1388111766,1390304957,1390318095,1390319238,1390321811,1390327192,1390328435,1390329689,1391292472,1391295130,1391298115,1391299402,1391302044,1391307254,1391308253,1392560940,1396553940,1397006395,1397007527,1397007872,1397007885,1397015305,1397016949,1397022431,1400354688,1400355947,1400356673,1400360856,1400364702,1400366245,1401741660,1405743539,1407053336,1407067683,1409840426,1410939834,1414623055,1416259553,1417803702,1417953492,1417953925,1417969521,1417971248,1418042854,1420962489,1422407147,1422418384,1422432926,1422434165,1422435892,1423090882,1425971467,1426162994,1426865884,1426871783,1426872814,1426880658,1426881913,1426884152,1428612014,1429098926,1429105132,1429112250,1430623854,1431581902,1431587977,1431591127,1432718586,1433558874,1433568865,1433577620,1433578879,1435387691,1435862377,1444705448,1444706435,1444707945,1444708598,1444713016,1444718265,1444720166,1444723003,1444725453,1444731199,1444731564,1444731950,1444732047,1444732342,1444732347,1444738453,1445361689,1448052138,1448052864,1448054123,1448067662,1448078965,1449172589,1452091461,1453387928,1453752738,1453961462,1456174702,1457037634,1457145422,1457156469,1457178704,1458371285,1459376581,1459377857,1459377868,1459384567,1459385707,1459403577,1459405260,1459408531,1459757655,1459920222,1461678986,1463840740,1463842504,1463849459,1463849797,1463867222,1463868221,1463873175,1464819582,1464821125,1464829402,1464830128,1464831131,1465838987,1466045929,1466068861,1466074694,1466091096,1466403701,1467047928,1467061763,1467063453,1467065948,1467070902,1468307140,1468314970,1468321435,1469284474,1469285761,1469294772,1469295775,1471526086,1474285944,1474796155,1474852365,1474856386,1474857640,1474858627,1474866589,1474867476,1474871748,1474880870,1482183211,1482187228,1482389973,1482978689,1486003341,1486005836,1486010790,1486021608,1486029338,1486036499,1486036510,1491300687,1492834968,1492905126,1495099017,1495387727,1496999162,1497335658,1497338257,1497341434,1497353781,1497360500,1497361503,1503214457,1504022303,1504024292,1504032122,1504033105,1504038587,1509379857,1510741574,1511059454,1514359714,1515292004,1517410020,1517415502,1517416485,1517424315,1517426048,1519466742,1519486936,1521633706,1524564715,1526518672,1534242148,1535379077,1535411852,1535416972,1535418272,1535419013,1535426999,1535427585,1535429447,1535437817,1535442771,1535445010,1538631370,1539876488,1539883905,1539891891,1539902461,1539907415,1539909654,1540853566,1540863813,1540865371,1540871834,1540872816,1540972285,1542830372,1544565822,1547523228,1548000883,1548203684,1548662272,1548668010,1548668993,1548676831,1548677846,1548686756,1550655859,1551291701,1552780862,1554083280,1554160502,1554849656,1556617220,1556618479,1556619205,1556627226,1556629025,1562365424,1571587981,1572843623,1575133026,1577978899,1578737375,1579027766,1580891870,1580902117,1580903020,1580910138,1580910864,1581061599,1584242651,1584252576,1584258687,1584260414,1584261397,1586571037,1588295785,1589138556,1593538808,1594150134,1594318433,1594644051,1595762332,1596345927,1596503336,1599871881,1600554193,1600562964,1600967980,1600968967,1600970477,1600988233,1600993979,1600994866,1600997301,1601541268,1602995891,1603061457,1604314670,1604316655,1604330442,1604341489,1604342648,1605183784,1605406132,1605908391,1607689728,1607689741,1607690628,1607701062,1607701276,1607705078,1607710365,1607715640,1607716607,1607716627,1608344260,1610313759,1610666926,1611239998,1611396088,1614382839,1614530679,1615167003,1615172374,1615640392,1615647347,1615658840,1615665110,1615666109,1615671063,1620094847,1620095619,1620095929,1620105028,1620113841,1620119323,1620795340,1621082362,1621083649,1621092660,1622329964,1622331641,1622337218,1622353628,1623408910,1624559739,1624569664,1624577502,1624577906,1624578485,1626556599,1628470609,1630022199,1632310642,1633163415,1635568907,1635591150,1635593749,1635643420,1635994183,1635994320,1641006393,1645672758,1645785364,1645803376,1645808858,1645809841,1646891621,1646892908,1646907799,1646910247,1646917618,1646918617,1648006829,1648007716,1648013185,1648013984,1648016015,1648021910,1648025704,1648032728,1648033439,1648033715,1648035901,1648039922,1648043240,1649119056,1649454738,1649581121,1652486802,1652497372,1652504566,1652932064,1652936599,1653583645,1653598182,1653599929,1653606136,1653607123,1654697756,1654712103,1654713134,1654716280,1654721234,1654722233,1656168200,1659162648,1659176739,1659180924,1659185878,1659186877,1659695250,1660874915,1664393911,1666206978,1666510724,1668155429,1669474757,1673661122,1673662353,1673671436,1673686839,1673856704,1674136053,1674769898,1674770881,1674776363,1674793871,1675780006,1675959713,1676641114,1677004461,1677008482,1677010668,1677010688,1677011655,1677022217,1677030942,1677037554,1679234542,1679234666,1679237897,1679241007,1679252114,1679258763,1679261552,1679266928,1681499983,1681500998,1681504918,1681510964,1681520272,1681526010,1681526993,1682221833,1682359277,1685960411,1685962398,1685964612,1685965520,1685965569,1685965582,1685965890,1685967499,1685968865,1685974082,1685987547,1685988215,1685988552,1685991645,1686112357,1686592668,1686670946,1687209740,1690419670,1690419852,1690423356,1690429255,1690430286,1690438386,1690439385,1690439477,1691674376,1691689779,1691700349,1691705303,1691707542,1691739899,1692242488,1693300811,1693663054,1693900733,1693904467,1693911703,1693913871,1693915014,1693915019,1693922968,1693923252,1693924211,1693925465,1696514991,1697110779,1697112784,1697112842,1697116346,1697119048,1697126337,1697127463,1697127903,1697134366,1697135348,1699859798,1704832941,1705550489,1705948764,1706596362,1707661217,1709380801,1709397036,1709401602,1709403991,1709403994,1709604401,1709715630,1709719753,1710245453,1710553669,1710842194,1711349139,1711911296,1712708709,1712862856,1712864099,1712865353,1712874413,1712889750,1715042583,1716067791,1716074254,1716075236,1716090026,1716093784,1716101073,1716987897,1717046504,1717344945,1717458342,1717665490,1717667127,1717964139,1718229371,1718354825,1718357162,1719193555,1719336939,1719736367,1719951972,1719952370,1720424110,1720435157,1720448732,1720448944,1720449947,1720450929,1721036165,1721144676,1721180497,1721273073,1721300021,1721429734,1721781082,1721785367,1722611952,1723770733,1723771620,1723777366,1723796376,1723797619,1723869014,1724144999,1724360630,1724888746,1724891334,1724900049,1724902970,1724913368,1724913588,1724914591,1724915573,1724965913,1725078045,1725233009,1725264035,1725510046,1726097551,1726312938,1727054697,1727192868,1727424862,1727705145,1727733987,1727744610,1728055993,1728286570,1728572893,1728575555,1728593248,1728609049,1728736741,1730434650,1730700309,1731354114,1731355346,1732002104,1732531131,1733044570,1733128185,1733173527,1735014430,1735473130,1736646879,1737465416,1740085948,1740104597,1740108386,1741479646,1741618915,1741621154,1741622153,1741631292,1741636935,1741709977,1742216984,1743089654,1744959211,1744968590,1744969829,1744971556,1744977659,1744987840,1745343269,1745488513,1746392299,1747200908,1747202151,1747210105,1747211248,1747212978,1747215938,1747219291,1747533677,1747671543,1747762259,1748301224,1748301648,1748302211,1748318651,1748321229,1748327140,1748327340,1748328118,1748329946,1749416322,1749419816,1749422630,1749422974,1749423815,1749423848,1749423862,1749423980,1749432545,1749435316,1749435457,1749435956,1749437829,1749437986,1749440303,1749441388,1749442296,1749442361,1749443256,1749443576,1749444398,1749445477,1749445739,1749750164,1749955965,1752768365,1753028168,1753430927,1753880966,1753882221,1753900232,1753906931,1756680747,1759105063,1762715404,1763952265,1763967858,1763978172,1763979159,1765274516,1768132013,1774870841,1775193783,1775278057,1776446407,1778765218,1779479261,1779706923,1779707649,1779709525,1779713177,1779714057,1779714368,1779715934,1779715971,1779725925,1779730307,1779731494,1780768183,1781938242,1781939241,1781944195,1781948380,1781954023,1781961852,1783657515,1784508980,1785147288,1785152492,1785564290,1786402886,1786403885,1786408839,1786413016,1786418915,1786422601,1792463843,1793085197,1793091404,1793103209,1793109842,1794311882,1796513490,1798682988,1799934413,1800873944,1804734874,1804986274,1805201900,1805201909,1805381533,1805390218,1805394927,1805396070,1805397817,1805404024,1805410294,1808346875,1809278593,1809909084,1810126394,1810162729,1811189710,1812804641,1813167465,1818860644,1824377544,1826567786,1826567942,1826568769,1826574251,1826586852,1826591759,1826593533,1826594804,1826595685,1826597041,1826838298,1827843009,1830073720,1832102940,1834682984,1835526804,1835527882,1835530317,1835531888,1835536950,1835540435,1835541852,1835548479,1835548755,1835552425,1835554706,1835556216,1836242836,1836706536,1838062951,1838891575,1839007628,1839021100,1839022775,1839033593,1839038547,1839040786,1839994953,1840001842,1840013399,1840019350,1840019827,1840020860,1843076481,1845608978,1846070315,1848013570,1849443027,1850456697,1854921046,1859450748,1859510931,1859511204,1860240647,1860312281,1860334137,1861101595,1863024310,1863816745,1866230741,1866891339,1866893066,1866896736,1866908847,1866910185,1866914026,1867191437,1867299303,1867861768,1867865679,1867867083,1867872142,1867873124,1867876289,1867885376,1867885466,1867887914,1867892691,1867897750,1867898961,1867899162,1867908767,1873521117,1875950626,1876926780,1878219696,1883713830,1883718737,1883722494,1883726489,1883992567,1884025074,1887655375,1889208808,1889317056,1890185274,1890880911,1891315242,1893080109,1893129355,1894534152,1894535395,1894543357,1894548934,1895822736,1896748195,1896864381,1896883495,1896884690,1896893413,1897086584,1897144569,1897150382,1897161336,1898308423,1899713189,1899886170,1903920486,1903920882,1905987148,1906518923,1906815088,1907908343,1907910446,1907911172,1907924055,1907926218,1907937265,1910568778,1912588116,1912664290,1912773142,1919704439,1919708663,1923048311,1925589573,1928014104,1929265412,1931786446,1933270769,1933847987,1934282690,1935832225,1937137824,1940180687,1941545223,1944881831,1944883085,1944889292,1944901097,1944907730,1944915291,1947690884,1949378607,1949381140,1949385828,1949388221,1949404634,1953208595,1957126749,1965906276,1965980590,1966393263,1966441984,1968344522,1968345101,1968353343,1968354820,1976999040,1977095148,1977627523,1979043911,1979158532,1982830318,1982831301,1982836783,1982854539,1982856313,1982857328,1982862253,1982863214,1983477916,1983945412,1983946415,1983946627,1983953134,1983957025,1983968650,1983971249,1983972408,1983977373,1985096774,1985106740,1985116048,1985122769,1987638584,1989155232,1991785536,1991792841,1991799730,1991811287,1991817238,1991817715,1991818748,1992326594,1994019132,1994026062,1994028952,1994613365,1998305912,2000627256,2002587178,2002703477,2004080420,2007546240,2007547499,2007556254,2007557797,2009780252,2013938002,2016158046,2016458632,2016459875,2016461129,2016470189,2016476340,2016482461,2016485526,2018939223,2019785049,2023148389,2023153871,2023155598,2023156002,2023157760,2023171627,2023174160,2023812622,2029256230,2029286951,2029296544,2037064184,2042215210,2042272668,2042423451,2043073993,2044012869,2046744295,2047386704,2047490213,2047625030,2047828609,2051192703,2052284669,2056364987,2056365175,2056459861,2057257910,2058376024,2058382302,2058436464,2058440319,2058445367,2058447874,2058448694,2058452545,2058552215,2058569521,2058573621,2058924197,2058929805,2058958371,2058984507,2058988863,2059003240,2059051015,2059075746,2059422408,2059824807,2061714098,2062014471,2062647492,2063260135,2063415690,2063627333,2063814283,2064238717,2064313581,2064484772,2064499575,2064635107,2064635452,2064635773,2064639428,2064639883,2064648773,2064654772,2064655646,2065476844,2065542420,2065542544,2065543022,2065727011,2066567940,2066734284,2066828553,2066833534,2067036957,2067202738,2067233317,2068031208,2068725531,2068831008,2068854498,2068854512,2068858196,2068859575,2068860177,2068862627,2068863232,2068869021,2068950273,2068994789,2068994807,2069062998,2069102686,2069161595,2069263945,2069338842,2069365704,2069468800,2069558220,2069561350,2069566268,2069591394,2069593072,2069595618,2069600040,2069600946,2069600957,2069604100,2069765192,2069904166,2069904305,2071035931,2071149679,2071643658,2073163309,2073289171,2073308845,2073310709,2073312474,2073322881,2073335784,2073440452,2073448514,2073457247,2073500084,2073509625,2073523923,2073533208,2073640292,2073794194,2073803151,2073803461,2073808229,2073811616,2073811996,2073815760,2073826308,2073826688,2073827152,2073830759,2073831593,2073831601,2074299520,2075044848,2075423284,2075693433,2078935992,2078936931,2078937889,2078937913,2078938163,2078938295,2078944407,2078944555,2078944613,2078944933,2081181239,2081852454,2082063743,2082285629,2082430948,2084946688,2086083080,2087431076,2087431077,2087431079,2087431080,2087431081,2087431082,2087431085,2087431086,2087431087,2087431088,2087431089,2087431090,2087431091,2087431092,2087431093,2087431094,2087431096,2087431097,2087431098,2087431099,2087431100,2087431102,2087431103,2087617590,2087617591,2087617592,2087617593,2087617594,2087617595,2087617596,2087617597,2087617598,2087617599,2087617632,2087617633,2087617634,2087617635,2087617636,2087617637,2087617638,2087617639,2087617640,2087617641,2087617642,2087617643,2087617644,2087617645,2087617647,2087617652,2087617654,2087617655,2087617656,2087617657,2087617658,2087617659,2087617660,2087617661,2087617662,2087617663,2087629931,2087822490,2088302297,2088726760,2088953542,2088996444,2090213881,2090218574,2090297888,2090298020,2091225604,2092577468,2092702023,2092715579,2092766986,2092957042,2093991393,2093995617,2093995632,2094612635,2094991848,2095143559,2097113374,2098599777,2098599792,2099138174,2102249573,2102285158,2102285168,2102285285,2102285374,2102286572,2102291553,2102297313,2102301463,2102304381,2102311282,2102312281,2102313468,2102315379,2102317235,2102322718,2103529616,2105684477,2105873178,2106751208,2106757636,2106766355,2106769656,2106775467,2106775926,2106776925,2106781879,2112542671,2118750891,2119037299,2119037310,2119041270,2119043865,2119381911,2119891962,2120136928,2120142410,2120143393,2120151231,2120152708,2121629990,2121793676,2122433548,2123414271,2123472843,2123472936,2123472941,2123472990,2123479292,2123481132,2123481326,2123481391,2123481939,2123481960,2123482409,2123482928,2123482935,2123485221,2123485512,2123485548,2123486092,2123487587,2123487602,2123487868,2123488061,2123488218,2123489049,2123491458,2123491494,2123491502,2123491940,2123491950,2123491964,2123492067,2123492380,2123492410,2123492613,2123492943,2123493403,2123494323,2123494721,2123494806,2123495205,2123495222,2123495263,2123495538,2123495599,2123495615,2123495829,2123496707,2123496945,2123497027,2123497539,2123498152,2123498482,2123498621,2123498738,2123499337,2123499387,2123499393,2123499675,2123499817,2123499823,2123500085,2123500670,2123501043,2123501651,2123501946,2123502012,2123502614,2123502618,2123502909,2123502931,2123502972,2123503489,2123503580,2123503633,2123503639,2123503645,2123503683,2123503690,2123503871,2123503914,2123503925,2123506021,2123508761,2123508887,2123508888,2123509104,2123509367,2123510210,2126830924,2126831627,2126831911,2126831915,2126834731,2126838118,2126839865,2126841008,2126851442,2126854146,2127933481,2127939688,2127940675,2127945958,2127950989,2127966582,2130163562,2130164545,2130170027,2130187535,2130190580,2131286378,2132327224,2132331087,2132359596,2133546426,2134655216,2135730753,2135744303,2135751022,2135766376,2135766538,2136033383,2136198665,2140379406,2140382005,2140404240,2140405499,2140406225,2140969091,2141369520,2141378580,2141384318,2142607534,2142608862,2142616598,2142619146,2143588731,2143590729,2143592861,2143597618,2143609175,2143615126,2143616636,2144000095,2144838611,2144844042,2144846897,2144858266,2144868884,2144870143,2144870869,2150993049,2157945278,2158338411,2160318468,2160324206,2160325189,2160333019,2160343200,2161056790,2161569257,2161578129,2161578140,2161592231,2161595735,2163561912,2165898261,2166038855,2166996811,2167003274,2167004256,2167015877,2167018798,2167213797,2167993101,2169327252,2170481633,2170487115,2170488842,2170504623,2170507412,2174946277,2174951759,2174953486,2174953890,2174969515,2174972048,2176528068,2179101309,2180545870,2187180906,2187858563,2191744103,2191744212,2191821366,2191883015,2192566334,2193960351,2195897610,2195898849,2195906687,2195916612,2195922100,2196631346,2202024183,2205406696,2211506222,2216825796,2219145843,2221394610,2225058301,2225061335,2225064134,2225071439,2225073075,2225080536,2225426653,2225696488,2226037368,2226044042,2226051203,2226052893,2226055388,2226060342,2226419862,2229788675,2230793522,2230840997,2231615745,2231617728,2231623210,2231628742,2231632031,2231633170,2231633764,2231638049,2231729235,2231751291,2231760201,2231761216,2231769054,2231770037,2231775519,2233884981,2235097422,2235100587,2235101313,2235108032,2235109598,2235116887,2235119589,2236869449,2238302643,2241796550,2241797549,2241806680,2241812579,2242828527,2244900591,2246244298,2246245281,2246250763,2246260079,2246271316,2246446647,2247223374,2247249937,2247251096,2248592412,2250708942,2250715407,2250719552,2250724971,2250725805,2250733692,2250734937,2250735952,2258665553,2258878642,2263047660,2264886749,2266447633,2267607000,2282544968,2285662351,2290599544,2292158595,2293175691,2293351636,2296071446,2299255515,2301040846,2306079466,2307034140,2307580553,2313241363,2313504811,2318220358,2318563401,2320224028,2325476095,2335714240,2337176745,2339504386,2344847762,2345345412,2345556981,2346482211,2346482871,2351498341,2352240646,2352738840,2358991500,2361087993,2364634824,2369603272,2370443161,2371011349,2373457221,2375393789,2376425283,2379512524,2379580075,2389041013,2390286898,2390518325,2390736011,2391410598,2392516839,2392521063,2393811335,2400874900,2400879124,2402335630,2403175918,2404974948,2405102721,2405117283,2405120727,2414810349,2415093005,2415923742,2415925541,2415935547,2415976346,2418152088,2422623072,2422625395,2422631927,2422634373,2422636295,2422636392,2425962056,2425963043,2425969250,2425969487,2425971892,2425985030,2428197348,2428202830,2428203813,2428211643,2428212914,2428213376,2428240545,2430223084,2433759338,2433759634,2433760321,2433765803,2433783311,2433785126,2433786356,2433788522,2435993901,2436000108,2436001095,2436011657,2436026994,2439339076,2439340079,2439340291,2439346798,2439350689,2439362314,2439364913,2439366072,2439371037,2439876345,2440431898,2440444045,2440449369,2444112661,2447928023,2448686625,2452264162,2454797153,2458316286,2459819944,2460346836,2462285242,2462802458,2463186757,2466741694,2466758807,2467213089,2467545358,2467601561,2467655846,2467686484,2467740953,2473985870,2474042431,2474150919,2474285829,2474577412,2474661520,2475343068,2475470210,2475772433,2475892298,2476213365,2476552306,2478583646,2479517659,2487711817,2489453909,2489531547,2492815759,2498555779,2501597440,2507278661,2510852110,2511694664,2512156190,2514524650,2519935040,2540805343,2543008264,2547140668,2548210359,2553182506,2558063998,2558416820,2560726248,2564751176,2566787042,2569608194,2572602371,2577853220,2579477027,2579803386,2583084289,2586020617,2600402029,2604613571,2614694552,2616608417,2619680030,2623678483,2624091113,2626979216,2627765050,2629831661,2630340943,2630577386,2633112569,2635762328,2636801013,2637047575,2637160117,2637393619,2637589507,2639283063,2642320383,2644891950,2655636765,2657728452,2658381845,2660357137,2661288721,2661501246,2663538084,2668276183,2673250796,2673526891,2673678071,2676265918,2683622002,2685054344,2686768508,2689921282,2690533659,2691751732,2691869931,2692015714,2693065457,2693628719,2694158948,2699054734,2699567323,2701589506,2708247797,2710218932,2712973569,2713114330,2714658156,2715859111,2716538256,2717691085,2718235570,2719851426,2722275573,2728431851,2731033959,2734448641,2735037840,2745064373,2747735009,2748168364,2748310006,2753354596,2753586905,2761147374,2762813598,2767767034,2768482489,2769808878,2771202832,2775691349,2777232090,2781109506,2784107887,2784647309,2789347571,2792452218,2793624174,2794767436,2795183554,2795185357,2795205893,2798224110,2803597621,2804113804,2807804736,2809486328,2813025413,2815428841,2815585428,2816618421,2819662823,2820408757,2821986169,2822221150,2822315880,2824682484,2828575765,2828866516,2829935276,2834927579,2834988813,2836892761,2839658405,2844621372,2844815106,2845489684,2845638303,2855163005,2857193006,2860702321,2861907234,2866492514,2870435535,2874906565,2880233005,2885526550,2886304164,2887625380,2889073982,2893961579,2894962731,2896115089,2896360091,2896815948,2898520762,2898642745,2907467650,2908250170,2908376536,2911135641,2915014315,2918403731,2918486269,2919235927,2920587887,2921981389,2922468503,2922493886,2923084706,2929584080,2931398379,2931402541,2934752311,2934893225,2937779198,2939718255,2941551192,2943207335,2944624083,2944643800,2947465711,2947810750,2947839623,2948393504,2948690168,2948867989,2949433359,2951266128,2953613654,2954570766,2955048302,2956489777,2960184498,2960188722,2960612931,2962892549,2963032843,2966548328,2968983188,2976545290,2976620947,2978924197,2982913903,2986096991,2987284613,2988637881,2993692642,2996709992,2999106536,2999693174,3000568496,3002891536,3005531064,3005732955,3006549345,3007175865,3007286028,3008753857,3010444860,3010880247,3017258218,3019938621,3020499579,3022866914,3023311759,3024482653,3024795687,3024807531,3027071777,3029820267,3032088673,3032839979,3033043261,3033965900,3036878933,3037343835,3038234864,3044024978,3051293097,3052701732,3054970205,3055037923,3056484673,3060407188,3061523114,3071254387,3071254500,3071254881,3073058130,3074871971,3074935051,3075008146,3075048985,3075285442,3075422693,3075548305,3075766008,3075860343,3075962648,3076097045,3077391764,3079190285,3085252246,3091066645,3091553195,3096769792,3103424085,3107541791,3107727924,3107749241,3107778469,3107783354,3107787446,3107790299,3107948057,3107956419,3107974264,3107984588,3107991466,3108296169,3111583245,3113459538,3115513630,3116256345,3116975703,3117043431,3123411243,3123445549,3123737595,3127243644,3131616468,3134139083,3134716611,3141196244,3141709512,3148676509,3154082174,3155375542,3160028447,3163162577,3163167462,3163515572,3163650864,3172095015,3178395499,3179968189,3183658699,3187099641,3187299343,3189362935,3189614929,3189845278,3191231848,3191324353,3196795314,3196799538,3197664642,3200115829,3202732235,3206363778,3207294280,3218691622,3224832477,3226582088,3231960701,3231960825,3238444781,3240506687,3241127686,3241536496,3245505639,3246685420,3255250502,3255493270,3258010725,3259268259,3259708744,3269885479,3272088211,3285490421,3287497511,3294281816,3300709686,3302430666,3307080284,3310372188,3310580422,3313110325,3313272952,3317570505,3321771963,3323504524,3331794938,3332552236,3336602563,3340803503,3344036147,3344936763,3351242611,3354164541,3356161036,3356994116,3357443896,3358280978,3360549707,3361435146,3362509089,3362630778,3366920760,3368501591,3372160500,3373297021,3374596217,3375285141,3376798040,3377755895,3379029866,3380241983,3380595728,3381834713,3382169680,3385946526,3386125251,3387539161,3388057612,3393544563,3399698423,3404840083,3405857857,3407191084,3408814815,3408819560,3409018494,3409457570,3410577155,3411051814,3411102162,3412047440,3412913800,3413983999,3416442515,3416515385,3416581522,3416635233,3418887913,3424150275,3425734594,3426036948,3426656604,3429124000,3430316367,3430320824,3430870942,3431771155,3432731814,3434192147,3435576236,3435582845,3435750771,3435755340,3435827335,3435838083,3435867222,3435992037,3436024307,3436059437,3436063816,3436069982,3436074280,3436077508,3436091273,3436159613,3436165190,3436170719,3436195088,3436196199,3436197592,3436249372,3436269078,3436269081,3436293672,3436294647,3436301787,3436342898,3436364333,3436370464,3436392181,3436429036,3436429043,3436459789,3436497793,3436643348,3437361412,3440930072,3441289467,3445003174,3448289841,3448536520,3448614961,3452859864,3455445539,3455973701,3456106851,3456282588,3457601666,3463597433,3465489744,3467469261,3471221309,3473077716,3481649290,3487446962,3488022631,3488033206,3488034362,3488035079,3488035561,3488035719,3488035993,3488036079,3488037593,3488039692,3488040337,3488045626,3488047642,3488051093,3488051126,3488053833,3488816292,3489196379,3495434909,3495798979,3503723552,3503962589,3503975251,3504086267,3504111353,3504116046,3504274912,3505764984,3506277065,3508805241,3509081590,3513566261,3514339133,3515728076,3515960057,3516630755,3523519258,3523935664,3526432473,3530287752,3530461503,3530748624,3530798581,3531066474,3531601080,3532265658,3532567787,3533680386,3536219166,3538145547,3540002868,3540019679,3541120058,3543598258,3544077455,3551826674,3554146688,3557238629,3557288966,3558510813,3560409651,3560721423,3560755308,3560772904,3560776799,3560843986,3563273081,3564677062,3564681286,3567399383,3567824494,3572225704,3572896829,3582031081,3584271853,3584286131,3585048866,3585049834,3585528102,3593775985,3599378282,3602300234,3602787435,3607509617,3608111536,3611661676,3611790203,3614121054,3615995480,3621964687,3621965124,3621966081,3621966083,3621968414,3621969916,3621970585,3621975893,3622095083,3622538650,3627671724,3631197772,3635135986,3636965307,3639447013,3642331354,3659188474,3659876530,3665337607,3667545339,3668394990,3668555001,3668632957,3671699945,3674122558,3676733804,3682693088,3686247745,3690182854,3691035506,3691048605,3691317036,3693068020,3694814128,3697923226,3699114476,3702342894,3706900355,3707026630,3708334595,3708762397,3709045244,3712703179,3712728440,3712733478,3716618496,3716733543,3717443225,3718845099,3718930524,3720827503,3723950536,3728968422,3729352785,3729562677,3730027878,3734185373,3735541918,3737224996,3738382782,3738387349,3738389800,3738389990,3738390006,3738390241,3738390427,3738394220,3738394620,3738394722,3738394744,3738394859,3738396519,3738397033,3738399064,3738400460,3738887202,3738887334,3739466542,3742755730,3743223168,3743289449,3743358776,3744330913,3745299015,3748385635,3749221030,3756564018,3766265917,3766587032,3767014136,3767872686,3768672199,3771941409,3772113601,3772128853,3772772804,3774466709,3776028623,3776032376,3776447581,3776673980,3777321837,3777702607,3777706691,3777840696,3778052019,3778877784,3781867794,3788596678,3788641118,3789096147,3790949066,3792555306,3792675197,3794434962,3795445637,3797340812,3799396589,3802359444,3802425981,3802900168,3803509878,3803533553,3803824710,3805465891,3813366359,3817195077,3825134626,3831783888,3837846657,3837850203,3842564401,3842605521,3845461162,3845489549,3848928610,3854658802,3856336918,3857323999,3859684851,3862352064,3863136572,3867966833,3871085378,3871829833,3872291932,3872427595,3873740388,3874034025,3875048726,3875975886,3876231871,3877484520,3878080222,3881750832,3882302039,3886373040,3888702999,3890651277,3890862632,3896043913,3896689307,3899279503,3900747045,3906847659,3911916015,3927826024,3932062404,3932228732,3935292304,3943337509,3944324480,3944448839,3947301018,3949488650,3950159753,3952494101,3953197696,3960241116,3960376152,3961917741,3963099658,3963421060,3963723254,3967007952,3967259205,3967845242,3969124422,3970612783,3970678261,3973713485,3975040093,3975243357,3975693785,3987058095,3990704705,3992681822,3994071046,3995478227,3995612289,3998971354,3998991175,3999298006,4000670401,4000993351,4001099777,4001277861,4001735503,4002465742,4003357293,4005356768,4007925342,4010478264,4011050686,4011066530,4011075332,4011273939,4011552428,4011788459,4012217148,4012217259,4012952625,4024186918,4027830515,4028975169,4029110469,4029583348,4030423947,4031498693,4031499367,4031499504,4031509172,4031928713,4032208645,4032479130,4033316487,4034881946,4036743247,4038287798,4038545865,4040900190,4042024153,4055745484,4059205746,4059950647,4060130555,4061045790,4064482362,4064482494,4064686007,4068398139,4074270800,4074270919,4074308286,4075674315,4075712516,4075885548,4078878227,4080178633,4081049105,4089654486,4090206590,4090679933,4091412422,4095259202,4095274203,4097043581,4097047544,4097047888,4097050487,4097053538,4097079538,4097094723,4097094855,4097218811,4097289420,4097298261,4097355529,4097358800,4097358806,4097359478,4097365147,4097365569,4097368351,4097368475,4097373732,4097381131,4097390898,4097493023,4097494448,4097500420,4097504860,4097508952,4097518447,4097523657,4097528230,4097528249,4097565588,4097595928,4097769515,4097769660,4097770040,4097900631,4097993352,4097993363,4098078311,4098093255,4098096816,4098101881,4098102013,4098120408,4099257624,4099391059,4100119818,4100353643,4101141701,4101990706,4102099355,4102141580,4102295291,4103385373,4104416776,4104979523,4105354399,4108421678,4108481771,4113654278,4120143040,4120573143,4120685305,4120832270,4121323786,4122797449,4123137490,4123141719,4123166778,4123237466,4124517918,4124852870,4126190390,4126265264,4126330058,4126584791,4128561486,4130538182,4130665595,4135804702,4138805004,4138959002,4142649353,4143010615,4143011353,4149276818,4149741566,4155964946,4160851306,4165043845,4165602674,4166101816,4168506065,4168666626,4168671212,4169534192,4169538416,4174620042,4175499442,4177885870,4178182706,4179726175,4180321577,4180398911,4180437564,4180584501,4180592595,4180655876,4182610142,4190427894,4190436241,4190438903,4190464587,4190536489,4191350062,4197904504,4204887304,4208748285,4213114634,4213114766,4213115878,4213133169,4213139443,4214412462,4216213600,4226637963,4229539334,4230260404,4236039784,4239211903,4244301284,4244359264,4244636840,4244650461,4244697370,4246504751,4248927363,4249781266,4250093591,4252726263,4253347765,4255547342,4262305702,4269915810,4271230391,4273205904,4280822506,4281987205,4281991429,4287811748,4288642117,4290818353,4290862694,4290938088,4291163255,4291519114,4292375442,4292614575,1563,113029,2431109,6154799,9085905,10454523,11833936,15005411,29369909,32348563,32392946,34831997,35241656,35407085,41719852,42040525,49751269,54657448,54829135,61297674,64616140,64792746,65243007,69912355,73497087,75564691,84754216,85474843,95227810,97671606,97869711,98556036,111529024,112714201,113832573,118457586,119013459,129204800,129504899,132934253,133576354,140643360,141325108,142928709,144351849,147399388,148485881,153516070,159755595,162751717,164324227,164324569,164324664,164324791,165338893,166383271,169804649,169909381,170281316,170281555,170281599,170281951,172221532,172281217,172281369,172281601,172281701,172281789,172615247,173287589,173592416,173930363,174306514,176844018,177079695,177080427,177147671,177148014,177148020,177546706,179139641,179379875,179569944,180056941,180259371,181198501,181240422,181950714,183096195,183096537,183468910,183469260,183603589,183603872,186043176,187501046,187763081,189174183,190912115,191031927,191069908,191103669,193357074,193420201,194024818,195040318,195040605,195184107,195615400,195788148,195817845,196491587,197098180,197098196,197098242,197098387,197098716,197098773,197098834,198219090,201802654,203969128,204000291,204003102,205844479,211702237,213315812,216404638,223633303,225036633,231228447,233832515,235585683,236122625,238349947,244953360,253603556,254556119,268305044,270508724,279497384,282260013,286117940,288337735,294222691,294944592,297796540,299806932,301175958,305396028,309814229,316711416,319659866,321667918,323472705,329290740,333539694,336073493,344556873,345150446,346582968,352942917,361618841,362641227,363650316,368392429,371447569,379018060,379803748,381683792,382346929,390037588,392534911,393050977,398079720,401473592,404580880,408076405,409551689,412923104,413523569,417762611,418389794,418643706,420076057,430774757,431420666,431463230,433047970,433960232,434424313,439016491,446595824,448347366,453082265,459993498,461991320,467355959,468677861,471325996,478194174,481007914,483933287,492579864,492820046,493239087,495294245,500922416,501132892,502571724,503870109,505520155,505540840,505547348,507674743,507704542,508155006,508732896,524499536,528698966,533082472,536472645,536606854,536706420,544035780,545100578,547829195,548068662,550157112,554422931,557980541,558904957,566123574,569085212,574052622,575078226,579214441,582810837,583362052,583453417,594063106,598128236,601157755,601161740,601948346,602413319,603986209,605582466,609198625,610045978,617827459,620396524,626039263,626988485,629099694,630452394,635400744,640415961,643558590,645257576,652659119,656273907,665354414,666296511,667333922,668403785,669730879,674175725,680972003,682364285,684524418,689215333,704136516,706383966,708808466,710978465,712995495,713788357,717519098,722956329,725449644,727209749,729977159,734622016,735035205,737142807,737152212,737166334,737644692,737837074,739516787,739566545,739985822,741816033,742252614,742260586,745092996,747930588,750219296,750508933,752522257,753857751,754000708,757807602,758478444,762067870,762641736,764248075,764320946,764825188,766296725,766355544,766643209,766774330,767540529,772363084,774299734,777688891,792068311,792844833,796739176,800010738,800087019,809563086,810061706,810813298,811092091,817847511,819009519,826260124,833658992,834470340,839856739,847675799,861294299,862950715,867021650,867036335,867732810,870151875,874296659,875944810,876149555,884498580,887482102,893652881,894264732,896104248,896979123,897240751,902139830,911653942,912249299,919599881,927052135,933697266,933746041,939098524,939114841,948752149,955130439,955354780,955942299,956480228,958121442,966830075,970076747,972273212,976381303,978919739,981829565,984418838,997412732,1001458257,1001637783,1001651627,1005191377,1008948875,1010556097,1016009727,1016348317,1023879932,1024317101,1027786481,1027856392,1032266307,1033049924,1035709107,1038486906,1041294385,1043437244,1049779946,1051535617,1053737172,1054370922,1056150770,1056645919,1056720884,1063952736,1064732809,1064857294,1065290596,1079732589,1080478458,1081536009,1086069586,1088535269,1094421058,1095718313,1096687866,1100372480,1101043104,1102004406,1104733017,1110237878,1112959177,1113096701,1114972095,1117545303,1118952562,1125668821,1130216203,1132104794,1132534664,1132579070,1132598106,1135683888,1135892328,1136018325,1138287902,1145147923,1145899518,1146523166,1149204820,1151262913,1152056864,1154536715,1154542665,1155367440,1155994599,1161218045,1164964007,1166033123,1167024992,1167025137,1174582808,1174756828,1181469438,1183829925,1186977866,1188208310,1189560180,1191923730,1192723278,1199133859,1199554249,1199600208,1202045876,1204911535,1210779948,1220586092,1221782335,1221920801,1236932222,1238449939,1243532105,1246474378,1257626414,1257876060,1258346504,1259689738,1260836076,1261324364,1266641105,1268763191,1271531819,1273274467,1276658942,1282928227,1283757717,1290537388,1296235125,1301946320,1305140481,1310807544,1310899277,1312163653,1316036626,1316125796,1324285266,1324310094,1324331646,1324337571,1324579984,1325750278,1326569216,1333842476,1349684561,1351415139,1351862653,1351880550,1354386923,1356250756,1357629674,1362165018,1363404812,1364008114,1364487272,1365133140,1365599531,1365623138,1366730785,1366987615,1372241226,1372705460,1372794328,1373871548,1375834117,1377641421,1378253217,1385859280,1391291390,1391293134,1391299074,1391300548,1393577155,1394469288,1394469303,1394469473,1394469866,1394470005,1394470066,1396870772,1399867662,1410090536,1413067533,1423547895,1430902259,1433581041,1435770227,1436788950,1441473969,1443172426,1444705872,1444722875,1444727957,1445594238,1447082963,1448082324,1455246557,1457519039,1458084479,1458493639,1458555099,1459794391,1460930084,1465058743,1465976327,1465976425,1465976436,1465976550,1465976555,1465976625,1465976632,1465976696,1465976747,1465976870,1465976979,1465976985,1465976986,1465976991,1465977196,1465977261,1465977271,1465977274,1465977323,1474444421,1478092049,1478716185,1481566528,1482522967,1489772937,1494181387,1504535254,1509029106,1510450262,1511907991,1515598870,1519441587,1522685369,1525831150,1526085253,1527459723,1529619411,1532042759,1533712942,1537663939,1539902893,1541073018,1541496652,1542773859,1549199388,1549209224,1549210203,1552284203,1553692884,1555806428,1561102750,1568416773,1570561776,1573188605,1576134740,1582406800,1582529544,1585380899,1587251606,1592687509,1594093747,1601662530,1602151715,1602222565,1602416912,1604312683,1604313702,1604341906,1605478605,1610069144,1610724928,1613430619,1616149762,1616623247,1616826805,1622345684,1624120544,1624575040,1631446240,1634840328,1635306209,1637735434,1639041637,1643893360,1645239134,1645714411,1646967505,1647763648,1648026812,1648459154,1652482428,1654623339,1659538076,1660752253,1661285202,1662950537,1675032552,1676328914,1681382184,1682444281,1683407715,1684605451,1684964181,1686375531,1686572406,1686834359,1687225102,1687228988,1687238599,1687241697,1693905970,1693924649,1694678234,1696017211,1697022103,1698247372,1700196518,1700874190,1702743585,1705191422,1705572464,1705775316,1708553688,1711224201,1712893263,1713051167,1713095897,1715999558,1716074224,1716087943,1716947524,1721557559,1722492001,1723859941,1728197301,1730461660,1732377833,1740500925,1740503023,1747349646,1747349737,1747349747,1747349811,1747350242,1747350353,1747350383,1747350483,1747350570,1757625214,1758838683,1759487629,1759488516,1759498393,1759499821,1759502442,1759502966,1759512274,1759512283,1759513528,1759514495,1759514515,1759516437,1759524172,1759589336,1760335250,1762975960,1762992044,1763004314,1763977119,1772061961,1772164204,1782043531,1789421301,1792792037,1793905730,1800839994,1801396125,1804673412,1806579373,1807671676,1813955111,1814430790,1817436421,1822787251,1823557150,1828043124,1839996532,1839996844,1841030555,1842560365,1844448916,1844480213,1846724376,1860761623,1861064328,1863000850,1867708596,1873769763,1873773882,1874142716,1875798230,1880233189,1882601503,1885862630,1890372289,1890379225,1891031342,1891205640,1891938925,1894539933,1896919160,1896919227,1896919294,1897898461,1899147627,1900573373,1901379444,1902628941,1905060165,1906789934,1906796594,1906797455,1906801573,1906806837,1906810233,1906810485,1906820915,1906820924,1906823423,1925206882,1927020241,1928994000,1935386784,1936188797,1939298330,1939994885,1941474619,1944071536,1945201987,1946130305,1946324244,1947055740,1949193282,1951127334,1956200886,1960661844,1964294607,1971670426,1975660003,1977074332,1979063800,1986972074,1987660949,1991785763,1992080509,1995174355,1995890751,2001507875,2004488903,2015900220,2018783243,2021213332,2023260368,2025018361,2025037989,2025039155,2026543248,2027114414,2034028822,2034927376,2035815698,2037403782,2037552632,2038238057,2038463378,2038609522,2039595722,2040354520,2040943501,2041028464,2044842550,2047340057,2047377876,2047791608,2047824538,2050823774,2050838609,2051525062,2051827668,2052255777,2052901511,2053206810,2053240934,2053337172,2053478875,2053493456,2053853373,2054449324,2055229681,2056180496,2057710300,2058751811,2059048621,2061275137,2066721635,2067699997,2071301924,2075934693,2077460241,2077463931,2082279457,2082350395,2082490504,2083899515,2084905908,2087506861,2087556005,2087568425,2087595516,2092046651,2097381010,2097529923,2100199727,2103470828,2105481502,2107063121,2107436658,2111314048,2113664954,2116750738,2117068897,2119040128,2122563214,2122618177,2124668692,2134191641,2134715695,2138049165,2138494997,2144770101,2151094932,2151644274,2163712208,2163898589,2170508442,2176727539,2177318798,2178944930,2179027416,2184528600,2186571792,2187374596,2190645414,2190660247,2190897184,2195413098,2195424198,2198290764,2203121973,2208876632,2209276004,2211529485,2216861598,2219976143,2224936471,2229389306,2229428098,2233205867,2235535537,2241998064,2243922068,2245744882,2246095470,2246624423,2249578444,2251500542,2256423319,2257131811,2259407586,2265403416,2277922362,2278366865,2281444864,2284221844,2290521795,2298483014,2298859942,2303709693,2305684069,2306183534,2310688315,2315634657,2319104481,2323978889,2326416557,2327685947,2331542577,2334488740,2335980755,2343955873,2343987387,2344051572,2344081298,2353017729,2357782940,2360233424,2372460029,2372478071,2376327406,2380959235,2384339112,2392072803,2399346319,2399822664,2401643245,2401782259,2403261116,2407789481,2409182571,2417084170,2417165267,2417652035,2419411749,2419417423,2422324904,2423117096,2424431334,2432634086,2435584133,2436015021,2441679501,2441854846,2444838503,2451024601,2451094457,2453483137,2454448917,2456215407,2459247176,2463271525,2463506842,2467234433,2469945372,2473920266,2486666796,2489018185,2489169796,2490847830,2503042985,2512844015,2518379243,2518777282,2525588137,2525608018,2528358668,2528706848,2531896313,2536602755,2551310943,2554772601,2556085817,2558131228,2564231467,2565836498,2569358076,2571159128,2572746788,2575905107,2579846032,2582295686,2585286228,2585297154,2587884409,2590263013,2592032772,2597156358,2600208325,2600311538,2609976564,2614031703,2619619987,2622453927,2622601193,2622997773,2630676340,2635726130,2636739119,2637611531,2637745410,2637827916,2639832942,2646831691,2652889161,2656916375,2658971428,2667387895,2669967601,2671812960,2675377616,2680331975,2692646873,2694622232,2697812844,2704604996,2707358863,2708256980,2708843581,2721005193,2723132333,2723449219,2726239859,2727613517,2729386864,2732129495,2739504392,2742067873,2743561936,2745053658,2748129339,2755346949,2756835810,2762308724,2762732310,2772048233,2773342582,2773916239,2777215669,2780442125,2780969136,2784038323,2786612080,2787145966,2787151566,2791623281,2792656912,2793820597,2793843165,2794535853,2794558276,2794571602,2794781905,2794904579,2795201682,2795316793,2795489178,2795518714,2795547152,2795551511,2795554576,2795567189,2795581043,2795588603,2797512177,2798111293,2798512509,2799526810,2799947922,2802973072,2804403738,2805637755,2805753744,2812187177,2812916202,2815541885,2820491263,2822394574,2829422945,2831048350,2832237259,2834623189,2837348717,2839650695,2840525902,2841159353,2842490055,2844781614,2846385194,2846982791,2849860412,2850213786,2852028874,2852573181,2854701866,2857974075,2864766480,2865932173,2873369054,2873382924,2877054650,2878248977,2880150758,2882016813,2894321712,2900972274,2907164383,2909422460,2910191497,2914081458,2914744694,2914938714,2915009556,2917041430,2918571873,2929237742,2930384385,2931708704,2933052029,2935350303,2939956665,2941858877,2943539162,2944562948,2945364171,2947166646,2953041500,2953600606,2958695479,2959025464,2963193938,2963907974,2964323647,2969439522,2972958854,2976622717,2978201778,2982085395,2985605450,2996423818,2999691650,3008190733,3008855969,3023766416,3029366772,3032047068,3036119914,3036992672,3039024727,3042813479,3043904968,3050467218,3051886594,3053067553,3056188564,3057812794,3065938060,3066185554,3067801157,3068762275,3077857486,3080857101,3087114209,3087935921,3088190003,3089015336,3091255985,3095401268,3096813247,3098725318,3105671535,3118052513,3118932015,3119183299,3121944857,3124496054,3126706525,3130262956,3136193853,3146277579,3150523560,3154412692,3159557566,3164499075,3164706839,3168577861,3173559921,3174529089,3176196996,3176871024,3180039849,3180784320,3181226348,3184223807,3185392090,3186278865,3187205025,3189849017,3192015124,3201052817,3206103617,3212240200,3229338204,3231038915,3232995840,3236363663,3236684869,3240062262,3241501460,3243217472,3249410406,3254464708,3257959952,3274402918,3276160836,3276196901,3278107133,3290502878,3291450742,3293286977,3293297241,3296419295,3299472058,3299767442,3301223392,3301309499,3301391192,3304599725,3306064327,3313552392,3321637504,3331885553,3332277580,3333914252,3337182013,3337858974,3341471161,3347209717,3350345047,3350816321,3351869587,3352060268,3355691995,3356175586,3356927752,3366755503,3367073048,3367944003,3372319994,3375346812,3376868662,3381262072,3382258705,3385088233,3389287501,3392485763,3403435361,3403782237,3406109171,3406111906,3407122639,3411575670,3424242744,3426100153,3426523263,3431675506,3431798787,3432725491,3433958809,3443103158,3445734210,3450482982,3453219838,3455171543,3455975626,3458629656,3459326184,3460835389,3468111852,3471910127,3473608107,3474158466,3478804050,3479897537,3480605972,3481097537,3485240025,3491815953,3492209950,3494777461,3500328283,3503925212,3506796962,3514565086,3514565812,3518469610,3519725933,3524188747,3529349528,3542452078,3546487756,3550700124,3550989552,3551573749,3553442167,3554781799,3557221487,3557691349,3558264087,3560824248,3563344816,3565186253,3565418379,3566074326,3568626956,3569886279,3570187564,3574536814,3576593305,3584104748,3586564634,3588013803,3590119076,3594126223,3605649145,3607964178,3610130320,3611466472,3615937331,3618863110,3629119210,3629792790,3635459541,3636074310,3638424639,3640911628,3642130958,3642225062,3647798063,3656108419,3657615451,3659534155,3659611370,3659667263,3660545348,3660867367,3671487562,3678946749,3680027665,3686613485,3686646984,3691543485,3691543777,3695175653,3698130051,3700803863,3704722354,3718851041,3722297297,3724304421,3727535579,3735382080,3740438523,3740440657,3745910284,3748112414,3748157778,3751765724,3751843037,3758548269,3759175702,3760229117,3767579376,3767636566,3774416951,3774620406,3775107448,3777554302,3789001045,3789217359,3790213466,3791430232,3792756850,3797275201,3797334865,3797547975,3797752814,3798120765,3799727891,3800284920,3803890887,3807736858,3811590943,3812650457,3813081457,3814583456,3816238011,3818244185,3820433217,3821631768,3824973847,3830752599,3831121452,3831131041,3839962587,3842157165,3849728326,3849729892,3849734551,3849787726,3849792721,3849819373,3853184002,3854490492,3856121458,3860607422,3861431943,3861926244,3867504094,3869648625,3871255217,3879613384,3902486573,3909678524,3911290870,3919568627,3924938673,3928836058,3929271846,3932881151,3932899585,3934007962,3942901813,3950379841,3960912026,3973890763,3976040035,3981985710,3991078309,3992022849,3992259208,4010941807,4012569891,4013412307,4021161495,4025854722,4027536004,4033312623,4036094574,4037300319,4043405137,4048222256,4048420974,4051811237,4052267313,4054558966,4064836207,4066383490,4070580503,4073707968,4100786237,4104807039,4115427659,4116271014,4117626035,4127381498,4128299636,4132054341,4132795027,4133480683,4136878052,4138452493,4138537192,4138587115,4138850346,4138930624,4148483014,4149140792,4149626272,4149641566,4149809179,4152090640,4152153727,4156628388,4159166567,4161006924,4161031359,4167095051,4168702437,4168921085,4175490343,4178043127,4179607399,4182917435,4196816243,4201195770,4201710836,4204344500,4212065046,4216249688,4218603456,4220181346,4230252988,4230808631,4235216564,4245730359,4250048329,4251017064,4254397175,4261049438,4265986719,4266150865,4270257086,4272517612,4285995571,4287809158,4287924367,4293141634,4293320049,7,171252454,314658260,1911007288,2310391087,2705648135,3085052283,4199583372,0,0,30,66987915,366428436,366991379,487687151,649399193,716916462,900018457,911616432,914855142,981141093,981156754,1068454171,1213136917,1357549542,1437166305,1491010671,1491010869,2035443912,2098925819,2412701058,2447973967,2572472237,2572499572,2572504631,2734871983,2873757688,3229893628,3628727675,3840638318,4020469118,1978,3609572,4707302,4731941,7066741,12732264,12733869,12874473,12898727,15239865,15443925,15464989,17770158,18806137,22641470,34805542,37254453,38352510,47103897,47124528,47160482,47264668,47270558,47521880,47670735,47682584,48206184,54052064,55399270,55790429,57861540,64629239,65951659,73540622,74816563,79005572,79010572,79432449,79977826,80960607,90941114,91781471,93732497,101061895,101792620,105281118,114635485,121111459,126395821,127613999,134819976,135124399,135156325,135512978,139443164,140195744,146403274,147165318,147311351,147680945,154712981,156193153,157683252,162021680,165184869,165682351,167795310,169177047,169285407,170248114,175536255,176298648,181584625,186190871,188366635,190461039,190805290,190817793,191644192,193330267,200367649,204872798,208246903,213994908,222038678,222914983,226753977,227658815,230657663,231976681,232418677,234224516,235125560,235385397,235630461,235880887,236100347,237106084,237695302,243768879,244905302,245221564,245221621,245248688,246957980,247379872,247404538,247547714,249186148,249832804,250298968,252007821,252166643,254498243,256250975,256734086,257675257,258276240,260078806,269653037,270614174,270803459,279865482,290747254,296104342,296106331,296214241,297365588,297388265,297388314,297395043,297872731,297875338,305678573,310113063,317059542,318726251,320983337,321380700,329390871,340233049,343985311,368331859,368339983,374202536,374729119,377042975,377218502,377330983,379160277,387137528,390536878,397426025,410462833,410898354,411028646,415359567,418289923,418809394,420699727,422768411,423087664,434374676,434499530,439966930,443910462,444881445,446735168,470802373,473022090,475752042,480190019,481797890,482141996,493334140,493996949,494002753,494111972,496668263,505642028,513006918,520166698,522732652,524323805,524791178,525296785,532366388,537994409,538156652,539123093,539125333,540384923,545724556,546598380,552815312,564847266,572585472,572589595,572660745,572917514,572938118,581295982,583116728,584477771,585356786,585510953,586974440,588341431,590260151,593171510,600861600,602587622,608185550,608501000,611172806,617227910,620862123,625412750,626878575,627192073,628675473,636454657,644892435,645708934,646772532,650376939,653264074,653865504,654835286,655274400,657684596,657843927,665654464,665772443,667917050,667982163,668803663,678409190,685972429,687873546,699223116,722349553,723381066,723506578,725289629,728910939,728916446,729301272,730375222,731520837,731524865,731524893,733458327,734942836,742063133,744425628,745118723,750501894,753379261,753585532,755936840,755999442,757164322,757742871,758908039,758927262,766978617,767310694,767319597,768502512,775086059,775783015,776818569,777129529,782249017,782470551,782586541,783225086,783819749,787058931,793173186,793643539,793791572,794069868,797737785,801549019,805476735,809560577,810471911,810660018,813069363,813965189,814609400,819689086,822265343,827811881,828807618,840895172,842670706,845178939,849626506,857304293,867054787,875581912,878480613,878489001,888652626,892902192,904040802,904780949,904781069,904781208,904781211,904781269,904781270,904781407,904781445,904781469,904781569,904781597,904781741,904781750,904781798,907680375,909542970,913350787,915552624,943105427,944616168,945567936,946059164,946112067,950116031,950459761,950797941,950991772,952407653,954708706,954904735,956279390,959296218,959317553,960000436,960088334,964474682,965248297,965252181,968600148,969495568,969714387,969714391,969714751,975014436,976847064,977515724,978655375,985441466,985451059,988676432,989199112,995754553,995754557,998100773,998582596,1001682227,1002897238,1005026102,1007267340,1018029509,1019292109,1021170671,1021615491,1027478448,1027904949,1028176876,1028524011,1033544761,1037073656,1039464298,1041396131,1043364491,1051084878,1053049944,1055328538,1055480209,1058862972,1066609925,1068948457,1071874351,1072134738,1082834847,1084511341,1087693738,1089012798,1089634494,1093384439,1093825560,1094815391,1098082937,1102471353,1113642022,1113846049,1121249692,1127953536,1132317159,1132485954,1132585385,1132689597,1132723356,1132858392,1133501028,1133636064,1134046361,1134351151,1134824033,1135467502,1135737574,1135775689,1136782059,1136883336,1137085890,1137173922,1138138823,1138714596,1139072942,1139153897,1139221159,1139981182,1140405028,1140510661,1141246959,1141280718,1141381995,1141584549,1141719585,1141874653,1142159541,1142193300,1142260818,1142366610,1144440814,1144457023,1144667374,1144802410,1144975561,1145579956,1145625081,1147135141,1147314976,1148184718,1148522564,1149131059,1150514349,1150729533,1151393172,1151494449,1153073825,1154465661,1155177503,1156094385,1156940664,1158572559,1160038984,1160487168,1161167906,1161578459,1161965872,1162013821,1163255421,1163472226,1163645377,1163777146,1163979700,1164916562,1165010690,1165068597,1165937726,1165940993,1166410608,1167096330,1167193469,1167260731,1167598577,1169823858,1170720439,1171147706,1171150005,1180230175,1180849387,1188216287,1188228500,1188701654,1190334387,1190352716,1190641324,1202600586,1206718941,1209302133,1214814043,1216095517,1220486075,1223892937,1224444732,1225577971,1229986049,1243738793,1247471306,1252266596,1252792940,1253960230,1254127330,1255848785,1255859538,1257563663,1257583343,1258195056,1258213434,1262993336,1263908042,1265512654,1267283463,1278475387,1281229947,1281889125,1284797630,1288585218,1290240457,1290513099,1293031053,1295516865,1297095740,1297597617,1298827289,1298832842,1299380998,1300818337,1304310342,1304455504,1310534169,1316956180,1336232039,1337809090,1340075459,1343684265,1347737800,1348149256,1354685816,1355025196,1357282216,1357301365,1363667295,1364395531,1364732891,1373278040,1373514813,1373685873,1375205051,1375419602,1376146087,1380234474,1380513046,1381723825,1382632688,1382645602,1382709874,1386126578,1388184353,1389190819,1389902309,1389912616,1390104485,1390958270,1391687090,1391699393,1393151104,1395748391,1395924208,1397018707,1397022500,1397827261,1398423514,1400330808,1401462671,1410284129,1411428439,1412479074,1412717811,1412831927,1420822802,1423109435,1423890423,1424552007,1425040900,1428131728,1431817030,1431897749,1433480127,1433483767,1434457973,1451286836,1451565010,1452211848,1452224159,1455851258,1458060161,1458176029,1458620255,1463365872,1466302404,1472319400,1475303091,1484355552,1486115226,1486401243,1489893113,1490054949,1492145100,1494001659,1494630697,1494690535,1494695213,1494714660,1494714786,1494714930,1494889015,1494990523,1494992680,1494997876,1495466906,1500014997,1502962162,1504548128,1505655813,1508029184,1508045454,1509815249,1518807662,1524160328,1529373691,1536802563,1538089784,1539586715,1544812783,1547140470,1552392687,1552405115,1552405169,1553111822,1553462237,1554120313,1554158027,1555241094,1555436471,1555595989,1556675361,1557492455,1557696008,1558835738,1558865070,1559582938,1559928005,1561078602,1565016185,1565113430,1565407826,1568314306,1568314316,1568317266,1568696751,1568699472,1568940804,1569248185,1570879860,1573625992,1573800670,1576869802,1581247153,1581398717,1581675892,1581718434,1583510121,1583803496,1588886160,1595292826,1602148307,1605015374,1609481646,1612153257,1618209596,1618218864,1618873873,1619384363,1624861042,1630153983,1638526919,1639454708,1640524262,1641042489,1641812886,1647303548,1648240296,1650468220,1650500409,1651513056,1658862087,1658979753,1661301475,1667470132,1667473335,1667728240,1667806132,1677105623,1680875001,1680882207,1681660610,1685495090,1685495093,1685495270,1685495398,1688394353,1688567575,1688665455,1688778883,1690751126,1691125863,1693300755,1694472929,1703388735,1709297356,1709313729,1712511978,1715661089,1717927392,1718114956,1721373840,1722360575,1724823399,1726408681,1726606395,1726645504,1732927910,1736066754,1736347741,1740486766,1742215384,1745377406,1758824175,1758930481,1758975612,1759122505,1759143730,1759227293,1759313682,1759313685,1759412017,1759432510,1759498975,1759505228,1759507354,1759515800,1759642661,1759864276,1759893786,1760159824,1763810143,1766750547,1769211545,1769618102,1772590156,1775156822,1780760274,1783870720,1784406502,1786353732,1793007575,1811810046,1815656403,1816569647,1816866992,1822574126,1822868024,1822868031,1823268852,1823275309,1823288115,1823390804,1823768300,1833535991,1842420860,1844031908,1844296341,1844524436,1844853963,1845272265,1845433501,1850725233,1851761689,1851765614,1852766386,1853687691,1854177922,1861204803,1863593250,1872674263,1872992134,1873841021,1877281407,1877305076,1881597618,1884316146,1886743174,1887188539,1892879921,1905997196,1912353097,1916296381,1919640688,1919643810,1924325687,1935798204,1935801369,1935813711,1935815187,1935818499,1941710024,1944260378,1945210145,1951157591,1955955663,1957378415,1957388660,1957444069,1958153525,1958153878,1962799016,1964448624,1967235715,1967514117,1968334692,1970709900,1974828022,1977445003,1980811473,1981302481,1984866213,1986874949,1987285901,1987558613,1988913069,1998855379,2023930736,2026542768,2029442974,2029502301,2031253491,2041190670,2044176332,2044519717,2044521677,2044845895,2044862336,2050748464,2055299797,2059226128,2060744697,2060874008,2061631935,2062602594,2062613436,2062713055,2062721365,2062782118,2064194523,2064289093,2064667157,2064835977,2065546931,2065580690,2065783508,2066019598,2067177842,2067640249,2068518016,2068619301,2069026672,2069773511,2070805664,2073324624,2075547993,2076314666,2076760108,2076927096,2078661044,2080078919,2080126248,2080270176,2080768362,2080948565,2081049148,2081811414,2082081519,2083365940,2084275182,2089789238,2090043919,2090165361,2090287045,2092471497,2092773191,2093281591,2093290649,2093484170,2095261287,2096596043,2096775591,2100685312,2102866955,2108433077,2109903284,2110249550,2112026046,2112754908,2114424326,2115251185,2116737470,2118764990,2119510407,2120903194,2121183749,2121530494,2121539444,2122085862,2123968241,2123974461,2124038667,2126585211,2127702833,2127711196,2129393172,2140172366,2141043403,2144163444,2144352359,2146552134,2146559400,2146579609,2146771534,2146787712,2147192784,2149214372,2150227387,2151276842,2152677197,2158829447,2159124528,2159550475,2161337980,2161361535,2163722410,2163917836,2165826914,2169168320,2170868227,2173022808,2174751247,2179048400,2184998274,2196541409,2200622033,2203412941,2206322353,2208794483,2219653172,2219657520,2225010953,2226828879,2238722895,2238722920,2238723506,2245936247,2248375230,2249276550,2249625301,2254065144,2254179087,2254183431,2254275149,2254449430,2254449877,2255178054,2264880989,2270863210,2290294367,2304704334,2304866355,2305219189,2310350875,2310486036,2312897274,2314773060,2315564905,2319231065,2319463533,2325240383,2327016339,2330482855,2337919027,2340169455,2359883328,2361871491,2366081778,2369823335,2369831600,2371523459,2372759050,2374977123,2376431395,2378889732,2382890223,2383755454,2386589953,2387052696,2389856295,2391789782,2398718314,2399324290,2400888860,2401211408,2404756392,2406557074,2407241140,2409418646,2411497922,2411691127,2413846222,2413908037,2414944572,2415208709,2417936111,2419639306,2423159152,2423360684,2425978408,2428076111,2437572023,2440527060,2444775143,2449407487,2457428534,2469735934,2475146676,2475744613,2476033552,2476112212,2476147614,2477393954,2478803388,2479415778,2482075359,2485317413,2485370363,2488499588,2488699734,2491415998,2492607180,2493496209,2497515972,2499072481,2499532790,2504383993,2504870149,2505121421,2505147736,2513647314,2513693640,2513701512,2513706827,2521253655,2521398855,2526527953,2526528078,2527291586,2527292245,2527666001,2528098475,2536669081,2536933437,2537106090,2538335365,2541170503,2541170604,2541177518,2545965593,2546249066,2546819122,2548278991,2548782015,2549421379,2557808039,2557863700,2558865115,2568950385,2569073380,2569341502,2569405925,2570837952,2575053435,2575619554,2575627585,2579451785,2581687876,2582936524,2586547509,2590439971,2600983050,2602643559,2605946857,2608238576,2608504686,2611889973,2612202111,2619739935,2621175072,2627204334,2627570013,2627677159,2631480810,2631901285,2635187702,2637430468,2638897207,2639751704,2642390316,2644459471,2644532855,2644906311,2645171587,2647433605,2647443463,2649904288,2651288351,2652440186,2655263134,2660229222,2660362019,2662714632,2671981072,2673085999,2676359415,2678218950,2680015310,2683201101,2683726243,2687071289,2687546085,2689958531,2690565794,2691049537,2696922944,2702278755,2705586928,2707450736,2708750293,2710694053,2710777678,2717039465,2719746264,2719953243,2722365346,2724396360,2730361077,2732178535,2732249147,2732255792,2732453216,2732465831,2733162785,2733179003,2740913336,2743326046,2745816408,2746770100,2768031559,2768594053,2769743066,2770453396,2777301260,2777413063,2779047561,2779131760,2781151044,2788878449,2791114477,2792266216,2795123222,2795130739,2795148393,2803000277,2803220098,2820015673,2824852881,2825063248,2825297984,2826183623,2826618777,2828159974,2830840737,2840364717,2844137461,2844192015,2844331414,2844474265,2845536368,2847702680,2847708560,2849875839,2854691117,2857021867,2857111846,2857167445,2857291628,2857718467,2857718874,2859609075,2860369035,2860944275,2861234828,2861431296,2861773187,2862323803,2862729831,2862789186,2862818280,2865000297,2865536587,2872917161,2879220442,2885591219,2886256228,2886266660,2886337850,2886340600,2886347487,2886358758,2886559394,2888553420,2893735969,2893987517,2894277589,2895201770,2895970159,2903889952,2904798808,2907566289,2911967032,2913775681,2917443420,2921648360,2921994283,2925162127,2925540459,2931480722,2936112276,2938485423,2939997155,2941295122,2942568797,2944555176,2950549599,2952067971,2952072562,2955690120,2961421753,2962144430,2962519996,2962841785,2964270344,2964373735,2965548040,2966852375,2970298080,2974400461,2975755381,2981996158,2987922608,2991195167,2991625994,2993771546,2995901561,3000958971,3001281849,3001388716,3004478994,3004479027,3004479111,3004479159,3004479171,3004479184,3004479190,3004479239,3004479240,3004479258,3004479289,3004479305,3004479323,3004479334,3004479373,3004479389,3004479390,3004479401,3004479425,3004479785,3004479787,3004479818,3004479829,3004479837,3004479976,3004479994,3004480114,3005847375,3006723884,3006726944,3006727797,3006731179,3006737252,3006744684,3006811183,3012299493,3014399025,3019017018,3019072181,3019996757,3020108825,3020133371,3020188532,3023885513,3024558034,3024589567,3024626538,3033483503,3034109278,3035739007,3035887950,3044634578,3044797796,3044821749,3045244983,3045788419,3045876876,3046124074,3046256428,3050244615,3050333064,3050334784,3056297406,3062281966,3063798750,3063849681,3073445035,3073797863,3073848296,3086119708,3087786680,3089398889,3089451715,3089454054,3089461994,3089735415,3094552970,3097888413,3098875466,3099276787,3104375123,3104503715,3105798493,3107144912,3107146953,3110631110,3110681545,3111601102,3111601746,3111606786,3114815727,3119543502,3119594433,3120807553,3120857998,3122897068,3125786613,3128821880,3133975234,3135838657,3136281421,3145164732,3147940006,3154068140,3154152867,3157412719,3157501664,3159380027,3160589879,3161016478,3161897203,3164181610,3174437714,3180245112,3180300610,3182786585,3183126568,3183293814,3183325319,3184294753,3188347051,3191217062,3196370198,3197567695,3198643172,3198783739,3198824989,3198841920,3198930383,3199640352,3200095506,3203439089,3203573947,3203579445,3208441350,3209729826,3210506925,3210514725,3210570457,3214383466,3214394316,3214653823,3215790970,3217760577,3218901480,3218928718,3218996674,3218997101,3219339071,3219427268,3220535722,3220543483,3221757640,3223098753,3224727829,3232284385,3232339054,3234508143,3234559072,3235473148,3237969392,3243142044,3247991594,3253953941,3269910681,3270985722,3273573836,3273628995,3275986591,3277061645,3277112578,3277868236,3277980164,3278129999,3278154322,3280832255,3280992609,3283017533,3286262047,3290414111,3301409832,3301494567,3302526185,3302610918,3305712858,3305866028,3305950755,3309540327,3309590022,3309595898,3309596203,3309660560,3309660597,3309937069,3312550946,3312639405,3317007142,3317095593,3324397363,3331028046,3331525682,3331580349,3331802213,3332642035,3332696700,3333929978,3334870005,3334920442,3335058344,3335315569,3343940221,3345496201,3350023967,3353092349,3358586999,3365687143,3366763202,3368167300,3371155980,3372842751,3373802982,3374003367,3374007861,3374013921,3374033257,3374071862,3374072315,3374075119,3374222601,3374506623,3377952754,3382868701,3384928690,3388197033,3390931348,3391051206,3391063809,3391068622,3391334282,3391402631,3391423133,3391432603,3392425741,3394879910,3395277647,3399311251,3402270417,3404440519,3414226886,3414277321,3415566709,3417045783,3417060092,3418683074,3418733517,3424453774,3431921225,3437307073,3437430868,3437705452,3444401619,3445590826,3447374472,3456431399,3458638240,3461359920,3463272868,3468986640,3469121667,3471246134,3474393156,3474446194,3476056250,3478543821,3486841411,3486906847,3489097968,3491201265,3495569706,3496705474,3497897502,3497994843,3498252682,3502149957,3504414102,3504826781,3506839508,3506948350,3508950458,3509210745,3509498189,3511959565,3512025010,3512493029,3514111400,3517669498,3518790968,3521920341,3523035738,3523862571,3524226140,3530307622,3530358057,3536335853,3536792162,3538712404,3541452460,3541507619,3542648636,3544416242,3550676375,3551025439,3553383951,3556498831,3561501051,3561585780,3565016796,3565023071,3565174365,3565227623,3565288856,3566089568,3572109810,3575114019,3577841990,3586425916,3589694483,3591020567,3592221649,3594125448,3595182758,3596128381,3602035250,3602533630,3602552275,3604829927,3607233834,3607322789,3607604079,3608554389,3610981370,3617629034,3619761411,3623812162,3629877419,3636237811,3636292476,3639577654,3639632313,3645953597,3647523178,3649784978,3653883892,3660676457,3664234276,3674197367,3675513627,3681233287,3684650455,3688377898,3689406359,3692544695,3693437133,3694959415,3703294733,3704443907,3704956777,3706490306,3709178884,3709268355,3709272958,3717182590,3718660896,3719413702,3721853564,3731122282,3734934472,3736397122,3736397691,3738359136,3744502996,3744505315,3744515994,3744516038,3745225898,3745403285,3749377655,3751498613,3752631559,3753565240,3756319792,3758308501,3758308691,3761682835,3762386667,3762488637,3763193356,3763904751,3764062969,3764739038,3769398133,3770065529,3774076759,3779092995,3780318738,3781089827,3783201212,3785420602,3786786081,3788364543,3791375542,3791430201,3791912060,3792007260,3792147146,3793208754,3794029235,3805317549,3808957225,3809652473,3811984999,3812594538,3819295903,3819351056,3821104144,3821104746,3829518367,3832811824,3833121835,3833171090,3833706374,3838812042,3843969806,3844552031,3850681433,3851222744,3851541567,3851602009,3851679807,3853676291,3855415829,3856249405,3859110665,3859972063,3862928629,3865386916,3865396334,3873108359,3873163016,3876524049,3883472548,3885986978,3888196487,3895773227,3898366596,3900605466,3900796753,3906034907,3907036333,3914330405,3916906002,3922403377,3925982068,3933039724,3936549300,3939824482,3940957272,3941201834,3941535714,3943160335,3943296300,3950173236,3955179593,3959867562,3960938237,3961299015,3961303520,3961836502,3962329360,3963273426,3966271140,3969493837,3970184201,3971378905,3972349404,3972404563,3974206923,3977375686,3977639927,3981851856,3984175284,3984369770,3984383153,3984388901,3984577838,3986753035,3987449768,3988320676,3989122328,3989124781,3989300792,3991957101,3991978776,3992246021,3993156440,3995285601,4002046206,4002059123,4002298131,4007368305,4009075902,4012314248,4014272956,4018800601,4021398623,4022152923,4023242992,4034787018,4034837957,4040007159,4040507273,4040558214,4042630615,4042667369,4044815570,4044899805,4046325025,4051504220,4051593171,4059166898,4059387372,4060969098,4060986772,4062588735,4063625944,4063736412,4064813411,4074640059,4077930265,4080197122,4081731399,4081736449,4081740860,4081761692,4082508192,4082648933,4085037592,4085499470,4085741867,4086206754,4087477773,4087974431,4087975312,4087977986,4087982672,4087983230,4087984585,4087984590,4087988411,4087993231,4087993234,4087993291,4087993428,4089941093,4090379779,4094838531,4095533224,4098180267,4104794847,4104808845,4105491350,4105500480,4109580593,4111598640,4115797781,4116207257,4116258198,4116322118,4116406345,4116912946,4122262153,4126221625,4127308650,4128209898,4128210099,4128224738,4128228031,4128452341,4131804567,4131859224,4137741343,4141029933,4142953920,4145022541,4149201544,4150566897,4151710650,4152474623,4155185738,4156445644,4157556469,4157644922,4159136925,4159401066,4159780211,4159864444,4164601660,4166043368,4168091484,4169450331,4170161097,4170579962,4170925049,4171014006,4171016671,4171029715,4172482250,4175353143,4176008925,4178981053,4184703759,4186748423,4188894668,4189635776,4190045706,4190142208,4195146068,4196943735,4199824850,4203521301,4206809827,4206944958,4207535653,4208164707,4211585807,4215346074,4215356593,4218114605,4218115138,4218132009,4219656584,4219999876,4220379359,4221957810,4222018626,4225873997,4227433758,4228171984,4228217908,4228360888,4228368741,4228368760,4231583294,4231662792,4232149414,4232629512,4234942237,4235762280,4240864861,4241320459,4241740950,4242647335,4243702915,4245105172,4246629902,4248741847,4252833472,4252840599,4254781707,4254799704,4255058051,4260594638,4261873154,4261894730,4262104449,4262374147,4262375371,4262499171,4264253465,4265048576,4267292711,4271528787,4272039260,4272350188,4272417877,4276136562,4288066094,330,54631547,68945260,76317054,90122581,107533418,134757519,142022835,149084067,169736776,205527546,244603010,255553804,262051769,263431316,265459661,284810646,289494951,371032970,373243562,374621869,387545720,391377589,415171548,415171976,418990556,418990602,425807660,435420269,461226423,483976516,501379566,531625563,553327069,590191545,595217502,649854972,714686602,715141614,717942499,720960146,720974524,720974736,720975995,725617684,744932012,793535325,806495002,817571047,857348365,862847657,871542102,874448701,877175745,893771636,914435801,931438088,937200556,1015486168,1026348750,1029964103,1083568115,1106088318,1206251138,1219433535,1220725895,1220852957,1222628504,1230410191,1242746690,1282239389,1290343418,1326192098,1338160975,1361325259,1374669131,1374800320,1389489864,1401511709,1421711922,1467196671,1467386990,1490648152,1493005045,1506058569,1507763651,1514073041,1515782688,1515784934,1515785058,1523142552,1526329423,1553174585,1591300266,1641166031,1642384128,1661678914,1679485164,1681545174,1704277516,1705410866,1705908110,1714538458,1768636249,1772526810,1818263278,1821800212,1833750850,1834601376,1866278547,1867401367,1936236019,1978039580,1997464432,2017904725,2055461758,2058918178,2080694907,2086814061,2089989988,2123843096,2170766397,2172738430,2174442073,2177527468,2178512614,2233637259,2246941078,2274844928,2274845447,2274845649,2279046513,2293400491,2299670458,2300280964,2300527715,2305877279,2307152224,2316307169,2322963439,2335588857,2337430377,2359562546,2360555826,2405952063,2419834458,2423179189,2436862648,2436862651,2439178127,2460729245,2517521888,2585317679,2631335866,2632842752,2737177336,2757711981,2779759639,2787445139,2796817467,2816464305,2817592022,2826795200,2827908591,2872823135,2873905939,2876785673,2876785759,2901134565,2913059937,2924726497,2938670220,2939089089,2943360116,3005172573,3015670621,3022308183,3050185270,3050185436,3056015384,3056015484,3071839865,3079506072,3079929644,3116612793,3164097381,3176996220,3180729164,3234391576,3234432745,3278041418,3278041816,3319967633,3334769994,3354637514,3375261606,3410106074,3423153883,3456106742,3461071037,3473412940,3486684134,3517650814,3547292615,3571189672,3593285841,3612407497,3666061454,3666061458,3666061568,3666061577,3666061585,3666061591,3666061602,3666061610,3666061613,3666061619,3666061666,3666061672,3666061702,3666061706,3666061732,3666061760,3666061781,3666061825,3666061864,3666061891,3666061895,3666061896,3666061902,3666061903,3666061913,3666062029,3666062293,3666062299,3666062326,3666062331,3666062345,3666062357,3666062361,3666062379,3666062386,3666062390,3666062391,3666062394,3666062408,3666062418,3666062422,3666062427,3666062453,3666062517,3666062569,3666062581,3666062582,3666062586,3666062587,3666099519,3667007182,3676644409,3676644411,3676644421,3676644429,3676644442,3676644586,3676644600,3676644610,3676644643,3676644706,3676644759,3676644775,3676644800,3676644806,3676644819,3676644874,3676644887,3676644888,3676644905,3676644939,3676644953,3676644982,3676645005,3676645006,3676645021,3676645049,3676645073,3684315096,3691777760,3697941178,3708654452,3710369155,3749170769,3772863442,3793240332,3798969166,3800169971,3820675046,3829710462,3829710568,3843370951,3845152461,3847111189,3861225221,3871154340,3872238039,3916589493,3949265042,3952274701,3967179311,4020468984,4088042711,4088042763,4088043471,4098608917,4098609219,4098704176,4098704230,4098775844,4098776178,4098815877,4098816211,4126370696,4127380674,4155818428,4160021452,4179162156,4189349925,4224941776,4233200080,4259920717,4263023754,4268562148,0,0,0,2,343511425,4233599295,4,989615076,1348282182,2372695675,2793429742,66,2516160,83460346,113271207,134752460,310748895,373240553,387546555,465045723,528158848,599016891,599034260,599035482,745170160,771634050,771637032,1156523661,1264600767,1542981532,1557499238,1644040136,1645084619,1709094170,1740118996,1778504542,1836295865,1964668429,2086817070,2091822363,2368015199,2707054618,2757714990,2842899363,2873826097,2875201553,2889802328,2938675535,2942499160,3012594373,3068421535,3068451149,3250117513,3303582289,3303582897,3303582994,3303614961,3346748653,3371744816,3577832733,3577832874,3719669200,3737867596,3737869333,3737882439,3755463030,3789613664,3804622433,3829814476,3847110230,3927045026,3974478460,3994206764,3994206767,4069710253,4103392506,4130682685,4197651626,0,0,0,0,0,66,14034108,23188555,69988957,176179919,181602757,286917352,436746473,472319354,495318858,500388520,527005648,554651161,561857715,588675343,688229624,733631603,804592434,820388681,834351359,838060561,871806992,936253712,1097991931,1188365042,1322375458,1566036640,1637844009,1668922875,1697481902,1779722906,1860444894,1874439438,1942164974,1953292144,2174172768,2253530761,2307427283,2356867634,2454582508,2478294033,2487762682,2523046044,2645305307,2697781106,2713921343,2869381059,2941854634,3090851000,3193365922,3293334302,3298593000,3336190368,3391640312,3415553447,3505446608,3554833241,3710380917,3803370028,3804920752,3894082090,3928753122,4065646590,4180315949,4196008531,4241738188,4265459019]);\n","import {\n  fastPathLookup,\n  IPublicSuffix,\n  ISuffixLookupOptions,\n} from 'tldts-core';\nimport packed from './data/hashes';\n\n/**\n * Find `elt` in `arr` between indices `start` (included) and `end` (excluded)\n * using a binary search algorithm.\n */\nfunction binSearch(\n  arr: Uint32Array,\n  elt: number,\n  start: number,\n  end: number,\n): boolean {\n  if (start >= end) {\n    return false;\n  }\n\n  let low = start;\n  let high = end - 1;\n\n  while (low <= high) {\n    const mid = (low + high) >>> 1;\n    const midVal = arr[mid];\n    if (midVal < elt) {\n      low = mid + 1;\n    } else if (midVal > elt) {\n      high = mid - 1;\n    } else {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Packed hash algorithm makes use of a rolling hash to lookup suffixes. To\n// avoid having to allocate an array to store them at every invocation, we\n// create one global one that can be reused.\nconst BUFFER = new Uint32Array(20);\n\n/**\n * Iterate on hashes of labels from `hostname` backward (from last label to\n * first label), stopping after `maximumNumberOfLabels` have been extracted and\n * calling `cb` on each of them.\n *\n * The `maximumNumberOfLabels` argument is typically used to specify the number\n * of labels seen in the longest public suffix. We do not need to check further\n * in very long hostnames.\n */\nfunction hashHostnameLabelsBackward(\n  hostname: string,\n  maximumNumberOfLabels: number,\n): number {\n  let hash = 5381;\n  let index = 0;\n\n  // Compute hash backward, label per label\n  for (let i = hostname.length - 1; i >= 0; i -= 1) {\n    const code = hostname.charCodeAt(i);\n    // Process label\n    if (code === 46 /* '.' */) {\n      BUFFER[index << 1] = hash >>> 0;\n      BUFFER[(index << 1) + 1] = i + 1;\n      index += 1;\n\n      if (index === maximumNumberOfLabels) {\n        return index;\n      }\n    }\n\n    // Update hash\n    hash = (hash * 33) ^ code;\n  }\n\n  // Let's not forget about last label\n  BUFFER[index << 1] = hash >>> 0;\n  BUFFER[(index << 1) + 1] = 0;\n  index += 1;\n\n  return index;\n}\n\nconst enum Result {\n  NO_MATCH = 0,\n  ICANN_MATCH = 1,\n  PRIVATE_MATCH = 2,\n  EXCEPTION_MATCH = 4,\n  NORMAL_MATCH = 8,\n  WILDCARD_MATCH = 16,\n}\n\n/**\n * Perform a public suffix lookup for `hostname` using the packed hashes\n * data-structure. The `options` allows to specify if ICANN/PRIVATE sections\n * should be considered. By default, both are.\n *\n */\nexport default function suffixLookup(\n  hostname: string,\n  options: ISuffixLookupOptions,\n  out: IPublicSuffix,\n): void {\n  if (fastPathLookup(hostname, options, out) === true) {\n    return;\n  }\n\n  const { allowIcannDomains, allowPrivateDomains } = options;\n\n  // Keep track of longest match\n  let matchIndex = -1;\n  let matchKind = Result.NO_MATCH;\n  let matchLabels = 0; // Keep track of number of labels currently matched\n\n  // Index in the packed array data-structure\n  let index = 1;\n\n  const numberOfHashes = hashHostnameLabelsBackward(\n    hostname,\n    packed[0] /* maximumNumberOfLabels */,\n  );\n\n  for (let label = 0; label < numberOfHashes; label += 1) {\n    const hash = BUFFER[label << 1];\n    const labelStart = BUFFER[(label << 1) + 1];\n    // For each label, matching proceeds in the following way:\n    //\n    //  1. check exceptions\n    //  2. check wildcards\n    //  3. check normal rules\n    //\n    // For each of these, we also perform the lookup in two parts, once for\n    // the ICANN section and one for the PRIVATE section. Both of which are\n    // optional and can be enabled/disabled using the `options` argument.\n    //\n    // We start with exceptions because if an exception is found, we do not\n    // need to continue matching wildcards or normal rules; the exception will\n    // always have priority.\n    //\n    // Similarly, if we find a wildcard match, we do not need to check the\n    // rules for the same label as the wildcard match is always longer (one\n    // more label is matched).\n    //\n    // **WARNING**: the structure of this code follows exactly the structure\n    // of the packed data structure as create in ./bin/builders/hashes.js\n\n    let match = Result.NO_MATCH;\n\n    // ========================================================================\n    // Lookup exceptions\n    // ========================================================================\n    // ICANN\n    if (allowIcannDomains === true) {\n      match = binSearch(packed, hash, index + 1, index + packed[index] + 1)\n        ? Result.ICANN_MATCH | Result.EXCEPTION_MATCH\n        : Result.NO_MATCH;\n    }\n    index += packed[index] + 1;\n\n    // PRIVATE\n    if (allowPrivateDomains === true && match === Result.NO_MATCH) {\n      match = binSearch(packed, hash, index + 1, index + packed[index] + 1)\n        ? Result.PRIVATE_MATCH | Result.EXCEPTION_MATCH\n        : Result.NO_MATCH;\n    }\n    index += packed[index] + 1;\n\n    // ========================================================================\n    // Lookup wildcards\n    // ========================================================================\n    // ICANN\n    if (\n      allowIcannDomains === true &&\n      match === Result.NO_MATCH &&\n      (matchKind & Result.EXCEPTION_MATCH) === 0\n    ) {\n      match = binSearch(packed, hash, index + 1, index + packed[index] + 1)\n        ? Result.WILDCARD_MATCH | Result.ICANN_MATCH\n        : Result.NO_MATCH;\n    }\n    index += packed[index] + 1;\n\n    // PRIVATE\n    if (\n      allowPrivateDomains === true &&\n      match === Result.NO_MATCH &&\n      (matchKind & Result.EXCEPTION_MATCH) === 0\n    ) {\n      match = binSearch(packed, hash, index + 1, index + packed[index] + 1)\n        ? Result.WILDCARD_MATCH | Result.PRIVATE_MATCH\n        : Result.NO_MATCH;\n    }\n    index += packed[index] + 1;\n\n    // ========================================================================\n    // Lookup rules\n    // ========================================================================\n    // ICANN\n    if (\n      allowIcannDomains === true &&\n      match === Result.NO_MATCH &&\n      (matchKind & Result.EXCEPTION_MATCH) === 0 &&\n      matchLabels <= label\n    ) {\n      match = binSearch(packed, hash, index + 1, index + packed[index] + 1)\n        ? Result.NORMAL_MATCH | Result.ICANN_MATCH\n        : Result.NO_MATCH;\n    }\n    index += packed[index] + 1;\n\n    // PRIVATE\n    if (\n      allowPrivateDomains === true &&\n      match === Result.NO_MATCH &&\n      (matchKind & Result.EXCEPTION_MATCH) === 0 &&\n      matchLabels <= label\n    ) {\n      match = binSearch(packed, hash, index + 1, index + packed[index] + 1)\n        ? Result.NORMAL_MATCH | Result.PRIVATE_MATCH\n        : Result.NO_MATCH;\n    }\n    index += packed[index] + 1;\n\n    // If we found a match, the longest match that is being tracked for this\n    // hostname. We need to remember which kind of match it was (exception,\n    // wildcard, normal rule), the index where the suffix starts in `hostname`\n    // as well as the number of labels contained in this suffix (this is\n    // important to make sure that we always keep the longest match if there\n    // are both a wildcard and a normal rule matching).\n    if (match !== Result.NO_MATCH) {\n      matchKind = match;\n      matchLabels = label + ((match & Result.WILDCARD_MATCH) !== 0 ? 2 : 1);\n      matchIndex = labelStart;\n    }\n  }\n\n  out.isIcann = (matchKind & Result.ICANN_MATCH) !== 0;\n  out.isPrivate = (matchKind & Result.PRIVATE_MATCH) !== 0;\n\n  // No match found\n  if (matchIndex === -1) {\n    out.publicSuffix =\n      numberOfHashes === 1 ? hostname : hostname.slice(BUFFER[1]);\n    return;\n  }\n\n  // If match is an exception, this means that we need to count less label.\n  // For example, exception rule !foo.com would yield suffix 'com', so we need\n  // to locate the next dot and slice from there.\n  if ((matchKind & Result.EXCEPTION_MATCH) !== 0) {\n    out.publicSuffix = hostname.slice(BUFFER[((matchLabels - 2) << 1) + 1]);\n    return;\n  }\n\n  // If match is a wildcard, we need to match one more label. If wildcard rule\n  // was *.com, we would have stored only 'com' in the packed structure and we\n  // need to take one extra label on the left.\n  if ((matchKind & Result.WILDCARD_MATCH) !== 0) {\n    out.publicSuffix =\n      matchLabels >= numberOfHashes\n        ? hostname\n        : hostname.slice(BUFFER[((matchLabels - 1) << 1) + 1]);\n    return;\n  }\n\n  // if ((matchKind & Result.NORMAL_MATCH) !== 0)\n  // For normal match, we just slice the hostname at the beginning of suffix.\n  out.publicSuffix = hostname.slice(matchIndex);\n}\n","import { IPublicSuffix, ISuffixLookupOptions } from './interface';\n\nexport default function(\n  hostname: string,\n  options: ISuffixLookupOptions,\n  out: IPublicSuffix,\n): boolean {\n  // Fast path for very popular suffixes; this allows to by-pass lookup\n  // completely as well as any extra allocation or string manipulation.\n  if (options.allowPrivateDomains === false && hostname.length > 3) {\n    const last: number = hostname.length - 1;\n    const c3: number = hostname.charCodeAt(last);\n    const c2: number = hostname.charCodeAt(last - 1);\n    const c1: number = hostname.charCodeAt(last - 2);\n    const c0: number = hostname.charCodeAt(last - 3);\n\n    if (\n      c3 === 109 /* 'm' */ &&\n      c2 === 111 /* 'o' */ &&\n      c1 === 99 /* 'c' */ &&\n      c0 === 46 /* '.' */\n    ) {\n      out.isIcann = true;\n      out.isPrivate = false;\n      out.publicSuffix = 'com';\n      return true;\n    } else if (\n      c3 === 103 /* 'g' */ &&\n      c2 === 114 /* 'r' */ &&\n      c1 === 111 /* 'o' */ &&\n      c0 === 46 /* '.' */\n    ) {\n      out.isIcann = true;\n      out.isPrivate = false;\n      out.publicSuffix = 'org';\n      return true;\n    } else if (\n      c3 === 117 /* 'u' */ &&\n      c2 === 100 /* 'd' */ &&\n      c1 === 101 /* 'e' */ &&\n      c0 === 46 /* '.' */\n    ) {\n      out.isIcann = true;\n      out.isPrivate = false;\n      out.publicSuffix = 'edu';\n      return true;\n    } else if (\n      c3 === 118 /* 'v' */ &&\n      c2 === 111 /* 'o' */ &&\n      c1 === 103 /* 'g' */ &&\n      c0 === 46 /* '.' */\n    ) {\n      out.isIcann = true;\n      out.isPrivate = false;\n      out.publicSuffix = 'gov';\n      return true;\n    } else if (\n      c3 === 116 /* 't' */ &&\n      c2 === 101 /* 'e' */ &&\n      c1 === 110 /* 'n' */ &&\n      c0 === 46 /* '.' */\n    ) {\n      out.isIcann = true;\n      out.isPrivate = false;\n      out.publicSuffix = 'net';\n      return true;\n    } else if (\n      c3 === 101 /* 'e' */ &&\n      c2 === 100 /* 'd' */ &&\n      c1 === 46 /* '.' */\n    ) {\n      out.isIcann = true;\n      out.isPrivate = false;\n      out.publicSuffix = 'de';\n      return true;\n    }\n  }\n\n  return false;\n}\n","import {\n  FLAG,\n  getEmptyResult,\n  IOptions,\n  IResult,\n  parseImpl,\n  resetResult,\n} from 'tldts-core';\n\nimport suffixLookup from './src/packed-hashes';\n\n// For all methods but 'parse', it does not make sense to allocate an object\n// every single time to only return the value of a specific attribute. To avoid\n// this un-necessary allocation, we use a global object which is re-used.\nconst RESULT: IResult = getEmptyResult();\n\nexport function parse(url: string, options: Partial<IOptions> = {}): IResult {\n  return parseImpl(url, FLAG.ALL, suffixLookup, options, getEmptyResult());\n}\n\nexport function getHostname(\n  url: string,\n  options: Partial<IOptions> = {},\n): string | null {\n  /*@__INLINE__*/ resetResult(RESULT);\n  return parseImpl(url, FLAG.HOSTNAME, suffixLookup, options, RESULT).hostname;\n}\n\nexport function getPublicSuffix(\n  url: string,\n  options: Partial<IOptions> = {},\n): string | null {\n  /*@__INLINE__*/ resetResult(RESULT);\n  return parseImpl(url, FLAG.PUBLIC_SUFFIX, suffixLookup, options, RESULT)\n    .publicSuffix;\n}\n\nexport function getDomain(\n  url: string,\n  options: Partial<IOptions> = {},\n): string | null {\n  /*@__INLINE__*/ resetResult(RESULT);\n  return parseImpl(url, FLAG.DOMAIN, suffixLookup, options, RESULT).domain;\n}\n\nexport function getSubdomain(\n  url: string,\n  options: Partial<IOptions> = {},\n): string | null {\n  /*@__INLINE__*/ resetResult(RESULT);\n  return parseImpl(url, FLAG.SUB_DOMAIN, suffixLookup, options, RESULT)\n    .subdomain;\n}\n\nexport function getDomainWithoutSuffix(\n  url: string,\n  options: Partial<IOptions> = {},\n): string | null {\n  /*@__INLINE__*/ resetResult(RESULT);\n  return parseImpl(url, FLAG.ALL, suffixLookup, options, RESULT)\n    .domainWithoutSuffix;\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\n/**\n * Thin abstraction around a Uint32Array which allows to push tokens\n * whithout caring for the offset. It is used as a way to avoid multiple\n * allocations while calling tokenization (mostly beneficitial for\n * `NetworkFilter.getTokens()`).\n */\nexport class TokensBuffer {\n  private readonly buffer: Uint32Array;\n  public pos: number = 0;\n\n  constructor(size: number) {\n    this.buffer = new Uint32Array(size);\n  }\n\n  public reset(): void {\n    this.pos = 0;\n  }\n\n  public slice(): Uint32Array {\n    return this.buffer.slice(0, this.pos);\n  }\n\n  public push(token: number): void {\n    this.buffer[this.pos++] = token;\n  }\n\n  public empty(): boolean {\n    return this.pos === 0;\n  }\n\n  public full(): boolean {\n    return this.pos === this.buffer.length;\n  }\n\n  public remaining(): number {\n    return this.buffer.length - this.pos;\n  }\n}\n\nexport const TOKENS_BUFFER = new TokensBuffer(1024);\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { TokensBuffer, TOKENS_BUFFER } from './tokens-buffer';\n\nexport const HASH_SEED = 7877;\n\n/***************************************************************************\n *  Bitwise helpers\n * ************************************************************************* */\n\n// From: https://stackoverflow.com/a/43122214/1185079\nexport function bitCount(n: number): number {\n  n = n - ((n >> 1) & 0x55555555);\n  n = (n & 0x33333333) + ((n >> 2) & 0x33333333);\n  return (((n + (n >> 4)) & 0xf0f0f0f) * 0x1010101) >> 24;\n}\n\nexport function getBit(n: number, mask: number): boolean {\n  return !!(n & mask);\n}\n\nexport function setBit(n: number, mask: number): number {\n  return n | mask;\n}\n\nexport function clearBit(n: number, mask: number): number {\n  return n & ~mask;\n}\n\nexport function fastHashBetween(str: string, begin: number, end: number): number {\n  let hash = HASH_SEED;\n\n  for (let i = begin; i < end; i += 1) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n\n  return hash >>> 0;\n}\n\nexport function fastHash(str: string): number {\n  if (typeof str !== 'string') {\n    return HASH_SEED;\n  }\n\n  if (str.length === 0) {\n    return HASH_SEED;\n  }\n\n  return fastHashBetween(str, 0, str.length);\n}\n\nexport function hashStrings(strings: string[]): Uint32Array {\n  const result = new Uint32Array(strings.length);\n  let index = 0;\n  for (const str of strings) {\n    result[index++] = fastHash(str);\n  }\n  return result;\n}\n\n// https://jsperf.com/string-startswith/21\nexport function fastStartsWith(haystack: string, needle: string): boolean {\n  if (haystack.length < needle.length) {\n    return false;\n  }\n\n  const ceil = needle.length;\n  for (let i = 0; i < ceil; i += 1) {\n    if (haystack[i] !== needle[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function fastStartsWithFrom(haystack: string, needle: string, start: number): boolean {\n  if (haystack.length - start < needle.length) {\n    return false;\n  }\n\n  const ceil = start + needle.length;\n  for (let i = start; i < ceil; i += 1) {\n    if (haystack[i] !== needle[i - start]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function isDigit(ch: number): boolean {\n  // 48 == '0'\n  // 57 == '9'\n  return ch >= 48 && ch <= 57;\n}\n\nexport function isAlpha(ch: number): boolean {\n  // 65 == 'A'\n  // 90 == 'Z'\n  // 97 == 'a'\n  // 122 === 'z'\n  return (ch >= 97 && ch <= 122) || (ch >= 65 && ch <= 90);\n}\n\nfunction isAlphaExtended(ch: number): boolean {\n  // 192 -> 450\n  // À  Á  Â  Ã  Ä  Å  Æ  Ç  È  É  Ê  Ë  Ì  Í  Î  Ï  Ð  Ñ  Ò  Ó  Ô  Õ  Ö  ×  Ø\n  // Ù  Ú  Û  Ü  Ý  Þ  ß  à  á  â  ã  ä  å  æ  ç  è  é  ê  ë  ì  í  î  ï  ð  ñ\n  // ò  ó  ô  õ  ö  ÷  ø  ù  ú  û  ü  ý  þ  ÿ  Ā  ā  Ă  ă  Ą  ą  Ć  ć  Ĉ  ĉ  Ċ\n  // ċ  Č  č  Ď  ď  Đ  đ  Ē  ē  Ĕ  ĕ  Ė  ė  Ę  ę  Ě  ě  Ĝ  ĝ  Ğ  ğ  Ġ  ġ  Ģ  ģ\n  // Ĥ  ĥ  Ħ  ħ  Ĩ  ĩ  Ī  ī  Ĭ  ĭ  Į  į  İ  ı  Ĳ  ĳ  Ĵ  ĵ  Ķ  ķ  ĸ  Ĺ  ĺ  Ļ  ļ\n  // Ľ  ľ  Ŀ  ŀ  Ł  ł  Ń  ń  Ņ  ņ  Ň  ň  ŉ  Ŋ  ŋ  Ō  ō  Ŏ  ŏ  Ő  ő  Œ  œ  Ŕ  ŕ\n  // Ŗ  ŗ  Ř  ř  Ś  ś  Ŝ  ŝ  Ş  ş  Š  š  Ţ  ţ  Ť  ť  Ŧ  ŧ  Ũ  ũ  Ū  ū  Ŭ  ŭ  Ů\n  // ů  Ű  ű  Ų  ų  Ŵ  ŵ  Ŷ  ŷ  Ÿ  Ź  ź  Ż  ż  Ž  ž  ſ  ƀ  Ɓ  Ƃ  ƃ  Ƅ  ƅ  Ɔ  Ƈ\n  // ƈ  Ɖ  Ɗ  Ƌ  ƌ  ƍ  Ǝ  Ə  Ɛ  Ƒ  ƒ  Ɠ  Ɣ  ƕ  Ɩ  Ɨ  Ƙ  ƙ  ƚ  ƛ  Ɯ  Ɲ  ƞ  Ɵ  Ơ\n  // ơ  Ƣ  ƣ  Ƥ  ƥ  Ʀ  Ƨ  ƨ  Ʃ  ƪ  ƫ  Ƭ  ƭ  Ʈ  Ư  ư  Ʊ  Ʋ  Ƴ  ƴ  Ƶ  ƶ  Ʒ  Ƹ  ƹ\n  // ƺ  ƻ  Ƽ  ƽ  ƾ  ƿ  ǀ  ǁ  ǂ\n  return ch >= 192 && ch <= 450;\n}\n\nfunction isCyrillic(ch: number): boolean {\n  // 1024 -> 1279\n  // Ѐ Ё Ђ Ѓ Є Ѕ І Ї Ј Љ Њ Ћ Ќ Ѝ Ў Џ А Б В Г Д Е Ж З И Й К Л М Н О П Р С Т У Ф Х\n  // Ц Ч Ш Щ Ъ Ы Ь Э Ю Я а б в г д е ж з и й к л м н о п р с т у ф х ц ч ш щ ъ ы\n  // ь э ю я ѐ ё ђ ѓ є ѕ і ї ј љ њ ћ ќ ѝ ў џ Ѡ ѡ Ѣ ѣ Ѥ ѥ Ѧ ѧ Ѩ ѩ Ѫ ѫ Ѭ ѭ Ѯ ѯ\n  // Ѱ ѱ Ѳ ѳ Ѵ ѵ Ѷ ѷ Ѹ ѹ Ѻ ѻ Ѽ ѽ Ѿ ѿ Ҁ ҁ ҂ ҃ ҄ ҅ ҆ ҇ ҈ ҉ Ҋ ҋ Ҍ ҍ Ҏ ҏ Ґ ґ Ғ ғ Ҕ ҕ Җ җ Ҙ ҙ\n  // Қ қ Ҝ ҝ Ҟ ҟ Ҡ ҡ Ң ң Ҥ ҥ Ҧ ҧ Ҩ ҩ Ҫ ҫ Ҭ ҭ Ү ү Ұ ұ Ҳ ҳ Ҵ ҵ Ҷ ҷ Ҹ ҹ Һ һ Ҽ ҽ Ҿ\n  // ҿ Ӏ Ӂ ӂ Ӄ ӄ Ӆ ӆ Ӈ ӈ Ӊ ӊ Ӌ ӌ Ӎ ӎ ӏ Ӑ ӑ Ӓ ӓ Ӕ ӕ Ӗ ӗ Ә ә Ӛ ӛ Ӝ ӝ Ӟ ӟ Ӡ ӡ Ӣ ӣ Ӥ\n  // ӥ Ӧ ӧ Ө ө Ӫ ӫ Ӭ ӭ Ӯ ӯ Ӱ ӱ Ӳ ӳ Ӵ ӵ Ӷ ӷ Ӹ ӹ Ӻ ӻ Ӽ ӽ Ӿ ӿ\n  return ch >= 1024 && ch <= 1279;\n}\n\nfunction isAllowedCode(ch: number): boolean {\n  return (\n    isAlpha(ch) || isDigit(ch) || ch === 37 /* '%' */ || isAlphaExtended(ch) || isCyrillic(ch)\n  );\n}\n\nexport function tokenizeWithWildcardsInPlace(\n  pattern: string,\n  skipFirstToken: boolean,\n  skipLastToken: boolean,\n  buffer: TokensBuffer,\n): void {\n  // TODO maybe better to check if buffer is full?\n  // Otherwise we are under-using the space.\n  const len = Math.min(pattern.length, buffer.remaining() * 2);\n  let inside = false;\n  let precedingCh = 0;\n  let start = 0;\n  let hash = HASH_SEED;\n\n  for (let i = 0; i < len; i += 1) {\n    const ch = pattern.charCodeAt(i);\n    if (isAllowedCode(ch) === true) {\n      if (inside === false) {\n        hash = HASH_SEED;\n        inside = true;\n        start = i;\n      }\n      hash = (hash * 33) ^ ch;\n    } else {\n      if (inside === true) {\n        inside = false;\n\n        if (\n          i - start > 1 && // Ignore tokens of 1 character\n          ch !== 42 && // Ignore tokens followed by a '*'\n          precedingCh !== 42 && // Ignore tokens preceeded by a '*'\n          (skipFirstToken === false || start !== 0)\n        ) {\n          buffer.push(hash >>> 0);\n        }\n      }\n\n      precedingCh = ch;\n    }\n  }\n\n  if (\n    skipLastToken === false &&\n    inside === true &&\n    precedingCh !== 42 && // Ignore tokens preceeded by a '*'\n    pattern.length - start > 1 && // Ignore tokens of 1 character\n    buffer.full() === false\n  ) {\n    buffer.push(hash >>> 0);\n  }\n}\n\nexport function tokenizeInPlace(\n  pattern: string,\n  skipFirstToken: boolean,\n  skipLastToken: boolean,\n  buffer: TokensBuffer,\n): void {\n  const len = Math.min(pattern.length, buffer.remaining() * 2);\n  let inside = false;\n  let start = 0;\n  let hash = HASH_SEED;\n\n  for (let i = 0; i < len; i += 1) {\n    const ch = pattern.charCodeAt(i);\n    if (isAllowedCode(ch) === true) {\n      if (inside === false) {\n        hash = HASH_SEED;\n        inside = true;\n        start = i;\n      }\n      hash = (hash * 33) ^ ch;\n    } else if (inside === true) {\n      inside = false;\n      if (\n        i - start > 1 && // Ignore tokens of 1 character\n        (skipFirstToken === false || start !== 0)\n      ) {\n        buffer.push(hash >>> 0);\n      }\n    }\n  }\n\n  if (\n    inside === true &&\n    skipLastToken === false &&\n    pattern.length - start > 1 && // Ignore tokens of 1 character\n    buffer.full() === false\n  ) {\n    buffer.push(hash >>> 0);\n  }\n}\n\nexport function tokenizeNoSkipInPlace(pattern: string, buffer: TokensBuffer): void {\n  const len = Math.min(pattern.length, buffer.remaining() * 2);\n  let inside = false;\n  let start = 0;\n  let hash = HASH_SEED;\n\n  for (let i = 0; i < len; i += 1) {\n    const ch = pattern.charCodeAt(i);\n    if (isAllowedCode(ch) === true) {\n      if (inside === false) {\n        hash = HASH_SEED;\n        inside = true;\n        start = i;\n      }\n      hash = (hash * 33) ^ ch;\n    } else if (inside === true) {\n      inside = false;\n      if (i - start > 1) {\n        buffer.push(hash >>> 0);\n      }\n    }\n  }\n\n  if (inside === true && pattern.length - start > 1 && buffer.full() === false) {\n    buffer.push(hash >>> 0);\n  }\n}\n\nexport function tokenizeNoSkip(pattern: string): Uint32Array {\n  TOKENS_BUFFER.reset();\n  tokenizeNoSkipInPlace(pattern, TOKENS_BUFFER);\n  return TOKENS_BUFFER.slice();\n}\n\nexport function tokenizeWithWildcards(\n  pattern: string,\n  skipFirstToken: boolean,\n  skipLastToken: boolean,\n): Uint32Array {\n  TOKENS_BUFFER.reset();\n  tokenizeWithWildcardsInPlace(pattern, skipFirstToken, skipLastToken, TOKENS_BUFFER);\n  return TOKENS_BUFFER.slice();\n}\n\nexport function tokenize(\n  pattern: string,\n  skipFirstToken: boolean,\n  skipLastToken: boolean,\n): Uint32Array {\n  TOKENS_BUFFER.reset();\n  tokenizeInPlace(pattern, skipFirstToken, skipLastToken, TOKENS_BUFFER);\n  return TOKENS_BUFFER.slice();\n}\n\nexport function tokenizeRegexInPlace(selector: string, tokens: TokensBuffer): void {\n  let end = selector.length - 1;\n  let begin = 1;\n  let prev: number = 0;\n\n  // Try to find the longest safe *prefix* that we can tokenize\n  for (; begin < end; begin += 1) {\n    const code = selector.charCodeAt(begin);\n\n    // If we encounter '|' before any other opening bracket, then it's not safe\n    // to tokenize this filter (e.g.: 'foo|bar'). Instead we abort tokenization\n    // to be safe.\n    if (code === 124 /* '|' */) {\n      return;\n    }\n\n    if (\n      code === 40 /* '(' */ ||\n      code === 42 /* '*' */ ||\n      code === 43 /* '+' */ ||\n      code === 63 /* '?' */ ||\n      code === 91 /* '[' */ ||\n      code === 123 /* '{' */ ||\n      (code === 46 /* '.' */ && prev !== 92) /* '\\' */ ||\n      (code === 92 /* '\\' */ && isAlpha(selector.charCodeAt(begin + 1)))\n    ) {\n      break;\n    }\n\n    prev = code;\n  }\n\n  // Try to find the longest safe *suffix* that we can tokenize\n  prev = 0;\n  for (; end >= begin; end -= 1) {\n    const code = selector.charCodeAt(end);\n\n    // If we encounter '|' before any other opening bracket, then it's not safe\n    // to tokenize this filter (e.g.: 'foo|bar'). Instead we abort tokenization\n    // to be safe.\n    if (code === 124 /* '|' */) {\n      return;\n    }\n\n    if (\n      code === 41 /* ')' */ ||\n      code === 42 /* '*' */ ||\n      code === 43 /* '+' */ ||\n      code === 63 /* '?' */ ||\n      code === 93 /* ']' */ ||\n      code === 125 /* '}' */ ||\n      (code === 46 /* '.' */ && selector.charCodeAt(end - 1) !== 92) /* '\\' */ ||\n      (code === 92 /* '\\' */ && isAlpha(prev))\n    ) {\n      break;\n    }\n\n    prev = code;\n  }\n\n  if (end < begin) {\n    // Full selector is safe\n    const skipFirstToken: boolean = selector.charCodeAt(1) !== 94; /* '^' */\n    const skipLastToken: boolean = selector.charCodeAt(selector.length - 1) !== 36; /* '$' */\n    tokenizeInPlace(selector.slice(1, selector.length - 1), skipFirstToken, skipLastToken, tokens);\n  } else {\n    // Tokenize prefix\n    if (begin > 1) {\n      tokenizeInPlace(\n        selector.slice(1, begin),\n        selector.charCodeAt(1) !== 94 /* '^' */, // skipFirstToken\n        true,\n        tokens,\n      );\n    }\n\n    // Tokenize suffix\n    if (end < selector.length - 1) {\n      tokenizeInPlace(\n        selector.slice(end + 1, selector.length - 1),\n        true,\n        selector.charCodeAt(selector.length - 1) !== 94 /* '^' */, // skipLastToken\n        tokens,\n      );\n    }\n  }\n}\n\nexport function binSearch(arr: Uint32Array, elt: number): number {\n  if (arr.length === 0) {\n    return -1;\n  }\n\n  let low = 0;\n  let high = arr.length - 1;\n\n  while (low <= high) {\n    const mid = (low + high) >>> 1;\n    const midVal = arr[mid];\n    if (midVal < elt) {\n      low = mid + 1;\n    } else if (midVal > elt) {\n      high = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n}\n\nexport function binLookup(arr: Uint32Array, elt: number): boolean {\n  return binSearch(arr, elt) !== -1;\n}\n\nconst hasUnicodeRe = /[^\\u0000-\\u00ff]/;\nexport function hasUnicode(str: string): boolean {\n  return hasUnicodeRe.test(str);\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport guessUrlType from '@remusao/guess-url-type';\nimport { parse } from 'tldts-experimental';\n\nimport { EMPTY_UINT32_ARRAY } from './data-view';\nimport { TOKENS_BUFFER } from './tokens-buffer';\nimport { fastHash, tokenizeNoSkipInPlace, HASH_SEED } from './utils';\n\nconst TLDTS_OPTIONS = {\n  extractHostname: true,\n  mixedInputs: false,\n  validateHostname: false,\n};\n\n// From: https://github.com/electron/electron/blob/34c4c8d5088fa183f56baea28809de6f2a427e02/shell/browser/net/atom_network_delegate.cc#L30\nexport type ElectronRequestType =\n  | 'mainFrame'\n  | 'subFrame'\n  | 'stylesheet'\n  | 'script'\n  | 'image'\n  | 'font'\n  | 'object'\n  | 'xhr'\n  | 'ping'\n  | 'cspReport'\n  | 'media'\n  | 'webSocket'\n  | 'other';\n\n// From: https://github.com/DefinitelyTyped/DefinitelyTyped/blob/7f3549ed0050f2ca8d7fcc00c33eba21f0cbdd88/types/puppeteer/index.d.ts#L945\nexport type PuppeteerRequestType =\n  | 'cspviolationreport'\n  | 'document'\n  | 'eventsource'\n  | 'fetch'\n  | 'font'\n  | 'image'\n  | 'manifest'\n  | 'media'\n  | 'other'\n  | 'prefetch'\n  | 'preflight'\n  | 'script'\n  | 'signedexchange'\n  | 'stylesheet'\n  | 'texttrack'\n  | 'websocket'\n  | 'xhr';\n\nexport type PlaywrightRequestType =\n  | 'document'\n  | 'eventsource'\n  | 'fetch'\n  | 'font'\n  | 'image'\n  | 'manifest'\n  | 'media'\n  | 'other'\n  | 'script'\n  | 'stylesheet'\n  | 'texttrack'\n  | 'websocket'\n  | 'xhr';\n\n// From: https://developer.chrome.com/extensions/webRequest#type-ResourceType\nexport type WebRequestTypeChrome = chrome.webRequest.ResourceType;\n\n// From: https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/ResourceType#Type\nexport type WebRequestTypeFirefox = browser.webRequest.ResourceType;\n\n// The set of WebRequest types is the union of both Firefox and Chrome\nexport type WebRequestType = WebRequestTypeChrome | WebRequestTypeFirefox;\n\n// The set of supported types is the union of WebRequest\nexport type RequestType =\n  | WebRequestType\n  | ElectronRequestType\n  | PuppeteerRequestType\n  | PlaywrightRequestType;\n\nexport const NORMALIZED_TYPE_TOKEN: { [s in RequestType]: number } = {\n  beacon: fastHash('type:beacon'),\n  cspReport: fastHash('type:csp'),\n  csp_report: fastHash('type:csp'),\n  cspviolationreport: fastHash('type:cspviolationreport'),\n  document: fastHash('type:document'),\n  eventsource: fastHash('type:other'),\n  fetch: fastHash('type:xhr'),\n  font: fastHash('type:font'),\n  image: fastHash('type:image'),\n  imageset: fastHash('type:image'),\n  mainFrame: fastHash('type:document'),\n  main_frame: fastHash('type:document'),\n  manifest: fastHash('type:other'),\n  media: fastHash('type:media'),\n  object: fastHash('type:object'),\n  object_subrequest: fastHash('type:object'),\n  other: fastHash('type:other'),\n  ping: fastHash('type:ping'),\n  prefetch: fastHash('type:other'),\n  preflight: fastHash('type:preflight'),\n  script: fastHash('type:script'),\n  signedexchange: fastHash('type:signedexchange'),\n  speculative: fastHash('type:other'),\n  stylesheet: fastHash('type:stylesheet'),\n  subFrame: fastHash('type:subdocument'),\n  sub_frame: fastHash('type:subdocument'),\n  texttrack: fastHash('type:other'),\n  webSocket: fastHash('type:websocket'),\n  web_manifest: fastHash('type:other'),\n  websocket: fastHash('type:websocket'),\n  xhr: fastHash('type:xhr'),\n  xml_dtd: fastHash('type:other'),\n  xmlhttprequest: fastHash('type:xhr'),\n  xslt: fastHash('type:other'),\n};\n\nexport function hashHostnameBackward(hostname: string): number {\n  let hash = HASH_SEED;\n  for (let j = hostname.length - 1; j >= 0; j -= 1) {\n    hash = (hash * 33) ^ hostname.charCodeAt(j);\n  }\n  return hash >>> 0;\n}\n\nexport function getHashesFromLabelsBackward(\n  hostname: string,\n  end: number,\n  startOfDomain: number,\n): Uint32Array {\n  TOKENS_BUFFER.reset();\n  let hash = HASH_SEED;\n\n  // Compute hash backward, label per label\n  for (let i = end - 1; i >= 0; i -= 1) {\n    const code = hostname.charCodeAt(i);\n\n    // Process label\n    if (code === 46 /* '.' */ && i < startOfDomain) {\n      TOKENS_BUFFER.push(hash >>> 0);\n    }\n\n    // Update hash\n    hash = (hash * 33) ^ code;\n  }\n\n  TOKENS_BUFFER.push(hash >>> 0);\n  return TOKENS_BUFFER.slice();\n}\n\n/**\n * Given a hostname and its domain, return the hostname without the public\n * suffix. We know that the domain, with one less label on the left, will be a\n * the public suffix; and from there we know which trailing portion of\n * `hostname` we should remove.\n */\nexport function getHostnameWithoutPublicSuffix(hostname: string, domain: string): string | null {\n  let hostnameWithoutPublicSuffix: string | null = null;\n\n  const indexOfDot = domain.indexOf('.');\n  if (indexOfDot !== -1) {\n    const publicSuffix = domain.slice(indexOfDot + 1);\n    hostnameWithoutPublicSuffix = hostname.slice(0, -publicSuffix.length - 1);\n  }\n\n  return hostnameWithoutPublicSuffix;\n}\n\nexport function getEntityHashesFromLabelsBackward(hostname: string, domain: string): Uint32Array {\n  const hostnameWithoutPublicSuffix = getHostnameWithoutPublicSuffix(hostname, domain);\n  if (hostnameWithoutPublicSuffix !== null) {\n    return getHashesFromLabelsBackward(\n      hostnameWithoutPublicSuffix,\n      hostnameWithoutPublicSuffix.length,\n      hostnameWithoutPublicSuffix.length,\n    );\n  }\n  return EMPTY_UINT32_ARRAY;\n}\n\nexport function getHostnameHashesFromLabelsBackward(\n  hostname: string,\n  domain: string,\n): Uint32Array {\n  return getHashesFromLabelsBackward(hostname, hostname.length, hostname.length - domain.length);\n}\n\nfunction isThirdParty(\n  hostname: string,\n  domain: string,\n  sourceHostname: string,\n  sourceDomain: string,\n  type: RequestType,\n): boolean {\n  if (type === 'main_frame' || type === 'mainFrame') {\n    return false;\n  } else if (domain.length !== 0 && sourceDomain.length !== 0) {\n    return domain !== sourceDomain;\n  } else if (domain.length !== 0 && sourceHostname.length !== 0) {\n    return domain !== sourceHostname;\n  } else if (sourceDomain.length !== 0 && hostname.length !== 0) {\n    return hostname !== sourceDomain;\n  }\n\n  return false;\n}\n\nexport interface RequestInitialization {\n  requestId: string;\n  tabId: number;\n\n  url: string;\n  hostname: string;\n  domain: string;\n\n  sourceUrl: string;\n  sourceHostname: string;\n  sourceDomain: string;\n\n  type: RequestType;\n\n  // Optional attribute referencing the original request details used to create\n  // the Request instance. This can be for example:\n  // * Electron.OnHeadersReceivedListenerDetails\n  // * Electron.OnBeforeRequestListenerDetails\n  // * puppeteer.Request\n  // * webRequest details\n  _originalRequestDetails: any | undefined;\n}\n\nexport default class Request {\n  /**\n   * Create an instance of `Request` from raw request details.\n   */\n  public static fromRawDetails({\n    requestId = '0',\n    tabId = 0,\n    url = '',\n    hostname,\n    domain,\n    sourceUrl = '',\n    sourceHostname,\n    sourceDomain,\n    type = 'main_frame',\n    _originalRequestDetails,\n  }: Partial<RequestInitialization>): Request {\n    url = url.toLowerCase();\n\n    if (hostname === undefined || domain === undefined) {\n      const parsed = parse(url, TLDTS_OPTIONS);\n      hostname = hostname || parsed.hostname || '';\n      domain = domain || parsed.domain || '';\n    }\n\n    // Initialize source URL\n    if (sourceHostname === undefined || sourceDomain === undefined) {\n      const parsed = parse(sourceHostname || sourceDomain || sourceUrl, TLDTS_OPTIONS);\n      sourceHostname = sourceHostname || parsed.hostname || '';\n      sourceDomain = sourceDomain || parsed.domain || sourceHostname || '';\n    }\n\n    return new Request({\n      requestId,\n      tabId,\n\n      domain,\n      hostname,\n      url,\n\n      sourceDomain,\n      sourceHostname,\n      sourceUrl,\n\n      type,\n\n      _originalRequestDetails,\n    });\n  }\n\n  public readonly _originalRequestDetails: any | undefined;\n\n  public type: RequestType;\n  public readonly isHttp: boolean;\n  public readonly isHttps: boolean;\n  public readonly isSupported: boolean;\n  public readonly isFirstParty: boolean;\n  public readonly isThirdParty: boolean;\n\n  public readonly id: string;\n  public readonly tabId: number;\n  public readonly url: string;\n  public readonly hostname: string;\n  public readonly domain: string;\n\n  public readonly sourceHostnameHashes: Uint32Array;\n  public readonly sourceEntityHashes: Uint32Array;\n\n  // Lazy attributes\n  private tokens: Uint32Array | undefined = undefined;\n  private hostnameHashes: Uint32Array | undefined = undefined;\n  private entityHashes: Uint32Array | undefined = undefined;\n\n  constructor({\n    requestId,\n    tabId,\n\n    type,\n\n    domain,\n    hostname,\n    url,\n\n    sourceDomain,\n    sourceHostname,\n\n    _originalRequestDetails,\n  }: RequestInitialization) {\n    this._originalRequestDetails = _originalRequestDetails;\n    this.id = requestId;\n    this.tabId = tabId;\n    this.type = type;\n\n    this.url = url;\n    this.hostname = hostname;\n    this.domain = domain;\n\n    this.sourceHostnameHashes =\n      sourceHostname.length === 0\n        ? EMPTY_UINT32_ARRAY\n        : getHostnameHashesFromLabelsBackward(sourceHostname, sourceDomain);\n\n    this.sourceEntityHashes =\n      sourceHostname.length === 0\n        ? EMPTY_UINT32_ARRAY\n        : getEntityHashesFromLabelsBackward(sourceHostname, sourceDomain);\n\n    // Decide on partiness\n    this.isThirdParty = isThirdParty(hostname, domain, sourceHostname, sourceDomain, type);\n    this.isFirstParty = !this.isThirdParty;\n\n    // Check protocol\n    this.isSupported = true;\n    if (this.type === 'websocket' || this.url.startsWith('ws:') || this.url.startsWith('wss:')) {\n      this.isHttp = false;\n      this.isHttps = false;\n      this.type = 'websocket';\n      this.isSupported = true;\n    } else if (this.url.startsWith('http:')) {\n      this.isHttp = true;\n      this.isHttps = false;\n    } else if (this.url.startsWith('https:')) {\n      this.isHttps = true;\n      this.isHttp = false;\n    } else if (this.url.startsWith('data:')) {\n      this.isHttp = false;\n      this.isHttps = false;\n\n      // Only keep prefix of URL\n      const indexOfComa = this.url.indexOf(',');\n      if (indexOfComa !== -1) {\n        this.url = this.url.slice(0, indexOfComa);\n      }\n    } else {\n      this.isHttp = false;\n      this.isHttps = false;\n      this.isSupported = false;\n    }\n  }\n\n  public getHostnameHashes(): Uint32Array {\n    if (this.hostnameHashes === undefined) {\n      this.hostnameHashes =\n        this.hostname.length === 0\n          ? EMPTY_UINT32_ARRAY\n          : getHostnameHashesFromLabelsBackward(this.hostname, this.domain);\n    }\n\n    return this.hostnameHashes;\n  }\n\n  public getEntityHashes(): Uint32Array {\n    if (this.entityHashes === undefined) {\n      this.entityHashes =\n        this.hostname.length === 0\n          ? EMPTY_UINT32_ARRAY\n          : getEntityHashesFromLabelsBackward(this.hostname, this.domain);\n    }\n\n    return this.entityHashes;\n  }\n\n  public getTokens(): Uint32Array {\n    if (this.tokens === undefined) {\n      TOKENS_BUFFER.reset();\n\n      for (const hash of this.sourceHostnameHashes) {\n        TOKENS_BUFFER.push(hash);\n      }\n\n      // Add token corresponding to request type\n      TOKENS_BUFFER.push(NORMALIZED_TYPE_TOKEN[this.type]);\n\n      tokenizeNoSkipInPlace(this.url, TOKENS_BUFFER);\n\n      this.tokens = TOKENS_BUFFER.slice();\n    }\n\n    return this.tokens;\n  }\n\n  public isMainFrame(): boolean {\n    return this.type === 'main_frame' || this.type === 'mainFrame';\n  }\n\n  public isSubFrame(): boolean {\n    return this.type === 'sub_frame' || this.type === 'subFrame';\n  }\n\n  /**\n   * Calling this method will attempt to guess the type of a request based on\n   * information found in `url` only. This can be useful to try and fine-tune\n   * the type of a Request when it is not otherwise available or if it was\n   * inferred as 'other'.\n   */\n  public guessTypeOfRequest(): RequestType {\n    const currentType = this.type;\n    this.type = guessUrlType(this.url);\n    if (currentType !== this.type) {\n      this.tokens = undefined;\n    }\n    return this.type;\n  }\n}\n\n/**\n * Kept for backward compatibility. The recommended way is to call\n * `Request.fromRawDetails` directly.\n */\nexport function makeRequest(details: Partial<RequestInitialization>): Request {\n  return Request.fromRawDetails(details);\n}\n",null,null,"/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { hashHostnameBackward } from '../request';\nimport { toASCII } from '../punycode';\nimport { StaticDataView, sizeOfUint32Array } from '../data-view';\nimport { binLookup, hasUnicode } from '../utils';\n\nexport class Domains {\n  public static parse(parts: string[]): Domains | undefined {\n    if (parts.length === 0) {\n      return undefined;\n    }\n\n    const entities: number[] = [];\n    const notEntities: number[] = [];\n    const hostnames: number[] = [];\n    const notHostnames: number[] = [];\n\n    for (let hostname of parts) {\n      if (hasUnicode(hostname)) {\n        hostname = toASCII(hostname);\n      }\n\n      const negation: boolean = hostname.charCodeAt(0) === 126; /* '~' */\n      const entity: boolean =\n        hostname.charCodeAt(hostname.length - 1) === 42 /* '*' */ &&\n        hostname.charCodeAt(hostname.length - 2) === 46; /* '.' */\n\n      const start: number = negation ? 1 : 0;\n      const end: number = entity ? hostname.length - 2 : hostname.length;\n\n      const hash = hashHostnameBackward(\n        negation === true || entity === true ? hostname.slice(start, end) : hostname,\n      );\n\n      if (negation) {\n        if (entity) {\n          notEntities.push(hash);\n        } else {\n          notHostnames.push(hash);\n        }\n      } else {\n        if (entity) {\n          entities.push(hash);\n        } else {\n          hostnames.push(hash);\n        }\n      }\n    }\n\n    return new Domains({\n      entities: entities.length !== 0 ? new Uint32Array(entities).sort() : undefined,\n      hostnames: hostnames.length !== 0 ? new Uint32Array(hostnames).sort() : undefined,\n      notEntities: notEntities.length !== 0 ? new Uint32Array(notEntities).sort() : undefined,\n      notHostnames: notHostnames.length !== 0 ? new Uint32Array(notHostnames).sort() : undefined,\n    });\n  }\n\n  public static deserialize(buffer: StaticDataView): Domains {\n    const optionalParts = buffer.getUint8();\n\n    // The order of these fields should be the same as when we serialize them.\n    return new Domains({\n      entities: (optionalParts & 1) === 1 ? buffer.getUint32Array() : undefined,\n      hostnames: (optionalParts & 2) === 2 ? buffer.getUint32Array() : undefined,\n      notEntities: (optionalParts & 4) === 4 ? buffer.getUint32Array() : undefined,\n      notHostnames: (optionalParts & 8) === 8 ? buffer.getUint32Array() : undefined,\n    });\n  }\n\n  // hostnames\n  public readonly entities: Uint32Array | undefined;\n  public readonly hostnames: Uint32Array | undefined;\n\n  // Exceptions\n  public readonly notEntities: Uint32Array | undefined;\n  public readonly notHostnames: Uint32Array | undefined;\n\n  constructor({\n    entities,\n    hostnames,\n    notEntities,\n    notHostnames,\n  }: {\n    entities: Uint32Array | undefined;\n    hostnames: Uint32Array | undefined;\n    notEntities: Uint32Array | undefined;\n    notHostnames: Uint32Array | undefined;\n  }) {\n    // Hostname constraints\n    this.entities = entities;\n    this.hostnames = hostnames;\n\n    // Hostname exceptions\n    this.notEntities = notEntities;\n    this.notHostnames = notHostnames;\n  }\n\n  public updateId(hash: number): number {\n    const { hostnames, entities, notHostnames, notEntities } = this;\n\n    if (hostnames !== undefined) {\n      for (const hostname of hostnames) {\n        hash = (hash * 33) ^ hostname;\n      }\n    }\n\n    if (entities !== undefined) {\n      for (const entity of entities) {\n        hash = (hash * 33) ^ entity;\n      }\n    }\n\n    if (notHostnames !== undefined) {\n      for (const notHostname of notHostnames) {\n        hash = (hash * 33) ^ notHostname;\n      }\n    }\n\n    if (notEntities !== undefined) {\n      for (const notEntity of notEntities) {\n        hash = (hash * 33) ^ notEntity;\n      }\n    }\n\n    return hash;\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    // Mandatory fields\n    const index = buffer.getPos();\n    buffer.pushUint8(0);\n\n    // This bit-mask indicates which optional parts of the filter were serialized.\n    let optionalParts = 0;\n\n    if (this.entities !== undefined) {\n      optionalParts |= 1;\n      buffer.pushUint32Array(this.entities);\n    }\n\n    if (this.hostnames !== undefined) {\n      optionalParts |= 2;\n      buffer.pushUint32Array(this.hostnames);\n    }\n\n    if (this.notEntities !== undefined) {\n      optionalParts |= 4;\n      buffer.pushUint32Array(this.notEntities);\n    }\n\n    if (this.notHostnames !== undefined) {\n      optionalParts |= 8;\n      buffer.pushUint32Array(this.notHostnames);\n    }\n\n    buffer.setByte(index, optionalParts);\n  }\n\n  public getSerializedSize(): number {\n    let estimate: number = 1; // optional parts (1 byte)\n\n    if (this.entities !== undefined) {\n      estimate += sizeOfUint32Array(this.entities);\n    }\n\n    if (this.hostnames !== undefined) {\n      estimate += sizeOfUint32Array(this.hostnames);\n    }\n\n    if (this.notHostnames !== undefined) {\n      estimate += sizeOfUint32Array(this.notHostnames);\n    }\n\n    if (this.notEntities !== undefined) {\n      estimate += sizeOfUint32Array(this.notEntities);\n    }\n\n    return estimate;\n  }\n\n  public match(hostnameHashes: Uint32Array, entityHashes: Uint32Array): boolean {\n    // Check if `hostname` is blacklisted\n    if (this.notHostnames !== undefined) {\n      for (const hash of hostnameHashes) {\n        if (binLookup(this.notHostnames, hash)) {\n          return false;\n        }\n      }\n    }\n\n    // Check if `hostname` is blacklisted by *entity*\n    if (this.notEntities !== undefined) {\n      for (const hash of entityHashes) {\n        if (binLookup(this.notEntities, hash)) {\n          return false;\n        }\n      }\n    }\n\n    // Check if `hostname` is allowed\n    if (this.hostnames !== undefined || this.entities !== undefined) {\n      if (this.hostnames !== undefined) {\n        for (const hash of hostnameHashes) {\n          if (binLookup(this.hostnames, hash)) {\n            return true;\n          }\n        }\n      }\n\n      if (this.entities !== undefined) {\n        for (const hash of entityHashes) {\n          if (binLookup(this.entities, hash)) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }\n\n    return true;\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\n// This module implements an extremely efficient stream HTML filtering engine\n// which is able to consume an HTML document over time and filter part of it\n// using adblocker selectors.\n\nexport type HTMLSelector = readonly ['script', readonly string[]];\n\nexport function extractHTMLSelectorFromRule(rule: string): HTMLSelector | undefined {\n  if (rule.startsWith('^script') === false) {\n    return undefined;\n  }\n\n  const prefix = ':has-text(';\n  const selectors: string[] = [];\n\n  let index = 7;\n  // ^script:has-text\n  //        ^ 7\n\n  // Prepare for finding one or more ':has-text(' selectors in a row\n  while (rule.startsWith(prefix, index)) {\n    index += prefix.length;\n    let currentParsingDepth = 1;\n    const startOfSelectorIndex = index;\n    let prev = -1; // previous character\n    for (; index < rule.length && currentParsingDepth !== 0; index += 1) {\n      const code = rule.charCodeAt(index);\n\n      if (prev !== 92 /* '\\' */) {\n        if (code === 40 /* '(' */) {\n          currentParsingDepth += 1;\n        }\n\n        if (code === 41 /* ')' */) {\n          currentParsingDepth -= 1;\n        }\n      }\n\n      prev = code;\n    }\n\n    selectors.push(rule.slice(startOfSelectorIndex, index - 1));\n  }\n\n  if (index !== rule.length) {\n    return undefined;\n  }\n\n  return ['script', selectors];\n}\n\nexport function extractTagsFromHtml(\n  html: string,\n  tag: string,\n): [[number, string][], string, string] {\n  const tags: [number, string][] = [];\n  const prefix = `<${tag}`;\n  const suffix = `</${tag}>`;\n\n  // Keep track of the beginning of current identified tag\n  let index = html.indexOf(prefix);\n  // Keep tracks of index immediately following last extracted tag\n  let endOfLastTag = 0;\n\n  while (index !== -1) {\n    // Find index of end of current tag. If we do not find it, it could be\n    // because it will come in the next chunk and we should try parsing it\n    // again then.\n    const endOfTagIndex = html.indexOf('>', index + prefix.length);\n    if (endOfTagIndex === -1) {\n      return [tags, html.slice(0, index), html.slice(index)];\n    }\n\n    // Handle short tag form <tag/> which will not have a closing tag.\n    if (html.charCodeAt(endOfTagIndex - 1) === 47 /* '/' */) {\n      endOfLastTag = endOfTagIndex + 1;\n      tags.push([index, html.slice(index, endOfLastTag)]);\n    } else {\n      // Find index of closing tag '</tag>'. If we do not find it, again, it\n      // could mean that it will come in next chunk and we need to try parsing\n      // it again with more input.\n      const indexOfClosingTag = html.indexOf(suffix, endOfTagIndex);\n      if (indexOfClosingTag === -1) {\n        return [tags, html.slice(0, index), html.slice(index)];\n      }\n\n      tags.push([index, html.slice(index, indexOfClosingTag + suffix.length)]);\n      endOfLastTag = indexOfClosingTag + suffix.length;\n    }\n\n    index = html.indexOf(prefix, endOfLastTag);\n  }\n\n  // Make sure we consume as much input as possible so that we do not parse the\n  // same portion of HTML again next time and we can stream chunks as early as\n  // possible.\n  //\n  // We check if there is at least one '<' char after the end of the last\n  // extracted tag; this would indicate that the next chunk might contain the\n  // remaining of a valid tag. We then look up to N characters after this '<'\n  // character, where N is the size of 'prefix'. The rational is that if we\n  // reached this part of the code, then it cannot be a match otherwise we\n  // would have returned earlier (from the loop).\n  let lastClosingTagIndex = html.lastIndexOf('>');\n  if (lastClosingTagIndex === -1) {\n    lastClosingTagIndex = endOfLastTag;\n  }\n\n  const indexOfNextTag = html.indexOf('<', lastClosingTagIndex);\n  // If no '<' in the remaining of input, then it means we can count this chunk\n  // as fully parsed (i.e.: next chunk can be parsed independently without\n  // missing a tag which would start in this one).\n  if (indexOfNextTag === -1) {\n    return [tags, html, ''];\n  }\n\n  // In case of a partial tag ending this 'html' chunk. Then check if we have\n  // enough information to discard it already based on the kind of tags we are\n  // looking for.\n  if (\n    html.length - indexOfNextTag >= prefix.length ||\n    prefix.startsWith(html.slice(indexOfNextTag)) === false\n  ) {\n    return [tags, html, ''];\n  }\n\n  return [tags, html.slice(0, indexOfNextTag), html.slice(indexOfNextTag)];\n}\n\ntype Patterns = readonly [readonly string[], readonly RegExp[]][];\n\nexport function extractSelectorsFromRules(filter: HTMLSelector[]): Patterns {\n  const patterns: [string[], RegExp[]][] = [];\n\n  for (const [_, selectors] of filter) {\n    const plainPatterns: string[] = [];\n    const regexpPatterns: RegExp[] = [];\n\n    for (const selector of selectors) {\n      if (selector.charCodeAt(0) === 47 /* '/' */) {\n        if (selector.endsWith('/')) {\n          regexpPatterns.push(new RegExp(selector.slice(1, -1)));\n        } else if (selector.endsWith('/i')) {\n          regexpPatterns.push(new RegExp(selector.slice(1, -2), 'i'));\n        }\n      } else {\n        plainPatterns.push(selector);\n      }\n    }\n\n    if (plainPatterns.length !== 0 || regexpPatterns.length !== 0) {\n      patterns.push([plainPatterns, regexpPatterns]);\n    }\n  }\n\n  return patterns;\n}\n\n/**\n * Check if `tag` should be removed from HTML based on `plainPatterns` and\n * `regexpPatterns`. For a tag to be removed, all elements from `plainPatterns`\n * and `regexpPatterns` must match.\n */\nfunction tagShouldBeRemoved(\n  tag: string,\n  plainPatterns: readonly string[],\n  regexpPatterns: readonly RegExp[],\n): boolean {\n  for (const pattern of plainPatterns) {\n    if (tag.indexOf(pattern) === -1) {\n      return false;\n    }\n  }\n\n  for (const pattern of regexpPatterns) {\n    if (pattern.test(tag) === false) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function selectTagsToRemove(\n  patterns: Patterns,\n  tags: [number, string][],\n): [number, string][] {\n  const toRemove: [number, string][] = [];\n\n  for (const tag of tags) {\n    for (const [plainPatterns, regexpPatterns] of patterns) {\n      if (tagShouldBeRemoved(tag[1], plainPatterns, regexpPatterns)) {\n        toRemove.push(tag);\n        break;\n      }\n    }\n  }\n\n  return toRemove;\n}\n\nexport function removeTagsFromHtml(html: string, toRemove: [number, string][]): string {\n  if (toRemove.length === 0) {\n    return html;\n  }\n\n  let filteredHtml = html;\n  toRemove.reverse(); // make sure to remove from last to first tag (preserve indices)\n  for (const [index, tag] of toRemove) {\n    filteredHtml = filteredHtml.slice(0, index) + filteredHtml.slice(index + tag.length);\n  }\n\n  return filteredHtml;\n}\n\nexport default class StreamingHtmlFilter {\n  private buffer: string;\n  private readonly patterns: Patterns;\n\n  constructor(selectors: HTMLSelector[]) {\n    this.buffer = '';\n    this.patterns = extractSelectorsFromRules(selectors);\n  }\n\n  public flush(): string {\n    return this.buffer;\n  }\n\n  public write(chunk: string): string {\n    // If there are no valid selectors, abort.\n    if (this.patterns.length === 0) {\n      return chunk;\n    }\n\n    // If given an empty string, abort.\n    if (chunk.length === 0) {\n      return chunk;\n    }\n\n    // Accumulate buffer + new data\n    this.buffer += chunk;\n\n    // Parse tags from `this.buffer`\n    const [tags, parsed, rest] = extractTagsFromHtml(this.buffer, 'script');\n    this.buffer = rest;\n\n    // If no tags were found, just return the parsed version\n    if (tags.length === 0) {\n      return parsed;\n    }\n\n    // Perform tags filtering using `this.patterns` and `this.regexps`.\n    return removeTagsFromHtml(parsed, selectTagsToRemove(this.patterns, tags));\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport {\n  AST,\n  classifySelector,\n  SelectorType,\n  parse as parseCssSelector,\n} from '@cliqz/adblocker-extended-selectors';\n\nimport { Domains } from '../engine/domains';\nimport {\n  EMPTY_UINT32_ARRAY,\n  StaticDataView,\n  sizeOfASCII,\n  sizeOfCosmeticSelector,\n  sizeOfUTF8,\n  sizeOfRawCosmetic,\n} from '../data-view';\nimport {\n  getHostnameHashesFromLabelsBackward,\n  getEntityHashesFromLabelsBackward,\n} from '../request';\nimport {\n  fastHash,\n  fastHashBetween,\n  fastStartsWithFrom,\n  getBit,\n  hasUnicode,\n  setBit,\n  tokenize,\n} from '../utils';\nimport IFilter from './interface';\nimport { HTMLSelector, extractHTMLSelectorFromRule } from '../html-filtering';\n\nconst EMPTY_TOKENS: [Uint32Array] = [EMPTY_UINT32_ARRAY];\nexport const DEFAULT_HIDDING_STYLE: string = 'display: none !important;';\n\n/**\n * Given a `selector` starting with either '#' or '.' check if what follows is\n * a simple CSS selector: /^-?[_a-zA-Z]+[_a-zA-Z0-9-]*$/\n */\nfunction isSimpleSelector(selector: string): boolean {\n  for (let i = 1; i < selector.length; i += 1) {\n    const code: number = selector.charCodeAt(i);\n    if (\n      !(\n        code === 45 /* '-' */ ||\n        code === 95 /* '_' */ ||\n        (code >= 48 && code <= 57) /* [0-9] */ ||\n        (code >= 65 && code <= 90) /* [A-Z] */ ||\n        (code >= 97 && code <= 122)\n      ) /* [a-z] */\n    ) {\n      if (i < selector.length - 1) {\n        // Check if what follows is a ' >' or ' ~' or ' +', in which case we\n        // also consider it a simple selector and the token this filter can be\n        // indexed with is the first selector.\n        const nextCode = selector.charCodeAt(i + 1);\n        if (\n          code === 91 /* '[' */ ||\n          code === 46 /* '.' */ ||\n          code === 58 /* ':' */ ||\n          (code === 32 /* ' ' */ &&\n            (nextCode === 62 /* '>' */ ||\n              nextCode === 43 /* '+' */ ||\n              nextCode === 126 /* '~' */ ||\n              nextCode === 46 /* '.' */ ||\n              nextCode === 35)) /* '#' */\n        ) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Given a `selector` starting with either 'a[' or '[', check if what follows\n * is a simple href attribute selector of the form: 'href^=' or 'href*='.\n */\nfunction isSimpleHrefSelector(selector: string, start: number): boolean {\n  return (\n    selector.startsWith('href^=\"', start) ||\n    selector.startsWith('href*=\"', start) ||\n    selector.startsWith('href=\"', start)\n  );\n}\n\n/**\n * Validate CSS selector. There is a fast path for simple selectors (e.g.: #foo\n * or .bar) which are the most common case. For complex ones, we rely on\n * `Element.matches` (if available).\n */\nconst isValidCss = (() => {\n  const div =\n    typeof document !== 'undefined'\n      ? document.createElement('div')\n      : {\n          matches: () => {\n            /* noop */\n          },\n        };\n  const matches = (selector: string): void | boolean => div.matches(selector);\n  const validSelectorRe = /^[#.]?[\\w-.]+$/;\n\n  return function isValidCssImpl(selector: string): boolean {\n    if (validSelectorRe.test(selector)) {\n      return true;\n    }\n\n    try {\n      matches(selector);\n    } catch (ex) {\n      return false;\n    }\n\n    return true;\n  };\n})();\n\n/**\n * Masks used to store options of cosmetic filters in a bitmask.\n */\nconst enum COSMETICS_MASK {\n  unhide = 1 << 0,\n  scriptInject = 1 << 1,\n  isUnicode = 1 << 2,\n  isClassSelector = 1 << 3,\n  isIdSelector = 1 << 4,\n  isHrefSelector = 1 << 5,\n  remove = 1 << 6,\n  extended = 1 << 7,\n}\n\nfunction computeFilterId(\n  mask: number,\n  selector: string | undefined,\n  domains: Domains | undefined,\n  style: string | undefined,\n): number {\n  let hash = (5437 * 33) ^ mask;\n\n  if (selector !== undefined) {\n    for (let i = 0; i < selector.length; i += 1) {\n      hash = (hash * 33) ^ selector.charCodeAt(i);\n    }\n  }\n\n  if (domains !== undefined) {\n    hash = domains.updateId(hash);\n  }\n\n  if (style !== undefined) {\n    for (let i = 0; i < style.length; i += 1) {\n      hash = (hash * 33) ^ style.charCodeAt(i);\n    }\n  }\n\n  return hash >>> 0;\n}\n\n/***************************************************************************\n *  Cosmetic filters parsing\n * ************************************************************************ */\n\nexport default class CosmeticFilter implements IFilter {\n  /**\n   * Given a line that we know contains a cosmetic filter, create a CosmeticFiler\n   * instance out of it. This function should be *very* efficient, as it will be\n   * used to parse tens of thousands of lines.\n   */\n  public static parse(line: string, debug: boolean = false): CosmeticFilter | null {\n    const rawLine = line;\n\n    // Mask to store attributes. Each flag (unhide, scriptInject, etc.) takes\n    // only 1 bit at a specific offset defined in COSMETICS_MASK.\n    // cf: COSMETICS_MASK for the offset of each property\n    let mask = 0;\n    let selector: string | undefined;\n    let domains: Domains | undefined;\n    let style: string | undefined;\n    const sharpIndex = line.indexOf('#');\n\n    // Start parsing the line\n    const afterSharpIndex = sharpIndex + 1;\n    let suffixStartIndex = afterSharpIndex + 1;\n\n    // hostname1,hostname2#?#.selector\n    // hostname1,hostname2#@#.selector\n    //                    ^^ ^\n    //                    || |\n    //                    || suffixStartIndex\n    //                    |afterSharpIndex\n    //                    sharpIndex\n\n    // Check if unhide\n    if (line.length > afterSharpIndex) {\n      if (line[afterSharpIndex] === '@') {\n        mask = setBit(mask, COSMETICS_MASK.unhide);\n        suffixStartIndex += 1;\n      } else if (line[afterSharpIndex] === '?') {\n        suffixStartIndex += 1;\n      }\n    }\n\n    if (suffixStartIndex >= line.length) {\n      return null;\n    }\n\n    // Parse hostnames and entitites as well as their negations.\n    //\n    // - ~hostname##.selector\n    // - hostname##.selector\n    // - entity.*##.selector\n    // - ~entity.*##.selector\n    //\n    // Each kind will have its own Uint32Array containing hashes, sorted by\n    // number of labels considered. This allows a compact representation of\n    // hostnames and fast matching without any string copy.\n    if (sharpIndex > 0) {\n      domains = Domains.parse(line.slice(0, sharpIndex).split(','));\n    }\n\n    if (line.endsWith(':remove()')) {\n      // ##selector:remove()\n      mask = setBit(mask, COSMETICS_MASK.remove);\n      mask = setBit(mask, COSMETICS_MASK.extended);\n      line = line.slice(0, -9);\n    } else if (\n      line.length - suffixStartIndex >= 8 &&\n      line.endsWith(')') &&\n      line.indexOf(':style(', suffixStartIndex) !== -1\n    ) {\n      // ##selector:style(...)\n      const indexOfStyle = line.indexOf(':style(', suffixStartIndex);\n      style = line.slice(indexOfStyle + 7, -1);\n      line = line.slice(0, indexOfStyle);\n    }\n\n    // Deal with HTML filters\n    if (line.charCodeAt(suffixStartIndex) === 94 /* '^' */) {\n      if (\n        fastStartsWithFrom(line, 'script:has-text(', suffixStartIndex + 1) === false ||\n        line.charCodeAt(line.length - 1) !== 41 /* ')' */\n      ) {\n        return null;\n      }\n\n      // NOTE: currently only ^script:has-text(...) is supported.\n      //\n      //   ^script:has-text(selector)\n      //   ^                         ^\n      //   |                         |\n      //   |                         |\n      //   |                         line.length\n      //   |\n      //   suffixStartIndex\n      //\n      selector = line.slice(suffixStartIndex, line.length);\n      if (extractHTMLSelectorFromRule(selector) === undefined) {\n        return null;\n      }\n    } else if (\n      line.length - suffixStartIndex > 4 &&\n      line.charCodeAt(suffixStartIndex) === 43 /* '+' */ &&\n      fastStartsWithFrom(line, '+js(', suffixStartIndex)\n    ) {\n      // Generic scriptlets are invalid, unless they are un-hide\n      if (\n        (domains === undefined ||\n          (domains.hostnames === undefined && domains.entities === undefined)) &&\n        getBit(mask, COSMETICS_MASK.unhide) === false\n      ) {\n        return null;\n      }\n\n      mask = setBit(mask, COSMETICS_MASK.scriptInject);\n      selector = line.slice(suffixStartIndex + 4, line.length - 1);\n\n      // An empty scriptlet (i.e. '+js()') can be specified to cancel injections\n      // on a specific domain or globally. It does not make sense though to have\n      // an empty scriptlet without an exception (i.e. '#@#' is mandatory).\n      if (getBit(mask, COSMETICS_MASK.unhide) === false && selector.length === 0) {\n        return null;\n      }\n    } else {\n      selector = line.slice(suffixStartIndex);\n      const selectorType = classifySelector(selector);\n      if (selectorType === SelectorType.Extended) {\n        mask = setBit(mask, COSMETICS_MASK.extended);\n      } else if (selectorType === SelectorType.Invalid || !isValidCss(selector)) {\n        // console.error('Invalid', line);\n        // TODO - maybe perform `isValidCss` from the other module.\n        return null;\n      }\n    }\n\n    // Extended selectors should always be specific to some domain.\n    if (domains === undefined && getBit(mask, COSMETICS_MASK.extended) === true) {\n      return null;\n    }\n\n    if (selector !== undefined) {\n      // Check if unicode appears in selector\n      if (hasUnicode(selector)) {\n        mask = setBit(mask, COSMETICS_MASK.isUnicode);\n      }\n\n      // Classify selector\n      if (\n        getBit(mask, COSMETICS_MASK.scriptInject) === false &&\n        getBit(mask, COSMETICS_MASK.remove) === false &&\n        getBit(mask, COSMETICS_MASK.extended) === false &&\n        selector.startsWith('^') === false\n      ) {\n        const c0 = selector.charCodeAt(0);\n        const c1 = selector.charCodeAt(1);\n        const c2 = selector.charCodeAt(2);\n\n        // Check if we have a specific case of simple selector (id, class or\n        // href) These are the most common filters and will benefit greatly from\n        // a custom dispatch mechanism.\n        if (getBit(mask, COSMETICS_MASK.scriptInject) === false) {\n          if (c0 === 46 /* '.' */ && isSimpleSelector(selector)) {\n            mask = setBit(mask, COSMETICS_MASK.isClassSelector);\n          } else if (c0 === 35 /* '#' */ && isSimpleSelector(selector)) {\n            mask = setBit(mask, COSMETICS_MASK.isIdSelector);\n          } else if (\n            c0 === 97 /* a */ &&\n            c1 === 91 /* '[' */ &&\n            c2 === 104 /* 'h' */ &&\n            isSimpleHrefSelector(selector, 2)\n          ) {\n            mask = setBit(mask, COSMETICS_MASK.isHrefSelector);\n          } else if (\n            c0 === 91 /* '[' */ &&\n            c1 === 104 /* 'h' */ &&\n            isSimpleHrefSelector(selector, 1)\n          ) {\n            mask = setBit(mask, COSMETICS_MASK.isHrefSelector);\n          }\n        }\n      }\n    }\n\n    return new CosmeticFilter({\n      mask,\n      rawLine: debug === true ? rawLine : undefined,\n      selector,\n      style,\n      domains,\n    });\n  }\n\n  /**\n   * Deserialize cosmetic filters. The code accessing the buffer should be\n   * symetrical to the one in `serializeCosmeticFilter`.\n   */\n  public static deserialize(buffer: StaticDataView): CosmeticFilter {\n    const mask = buffer.getUint8();\n    const isUnicode = getBit(mask, COSMETICS_MASK.isUnicode);\n    const optionalParts = buffer.getUint8();\n    const selector = isUnicode ? buffer.getUTF8() : buffer.getCosmeticSelector();\n\n    // The order of these fields should be the same as when we serialize them.\n    return new CosmeticFilter({\n      // Mandatory fields\n      mask,\n      selector,\n\n      // Optional fields\n      domains: (optionalParts & 1) === 1 ? Domains.deserialize(buffer) : undefined,\n      rawLine: (optionalParts & 2) === 2 ? buffer.getRawCosmetic() : undefined,\n      style: (optionalParts & 4) === 4 ? buffer.getASCII() : undefined,\n    });\n  }\n\n  // Mandatory fields\n  public readonly mask: number;\n  public readonly selector: string;\n\n  public readonly domains: Domains | undefined;\n\n  public readonly style: string | undefined;\n  public readonly rawLine: string | undefined;\n\n  private id: number | undefined;\n\n  constructor({\n    mask,\n    selector,\n    domains,\n    rawLine,\n    style,\n  }: {\n    mask: number;\n    domains: Domains | undefined;\n    rawLine: string | undefined;\n    selector: string;\n    style: string | undefined;\n  }) {\n    this.mask = mask;\n    this.selector = selector;\n    this.domains = domains;\n    this.style = style;\n\n    this.id = undefined;\n    this.rawLine = rawLine;\n  }\n\n  public isCosmeticFilter(): boolean {\n    return true;\n  }\n\n  public isNetworkFilter(): boolean {\n    return false;\n  }\n\n  /**\n   * The format of a cosmetic filter is:\n   *\n   * | mask | selector length | selector... | hostnames length | hostnames...\n   *   32     16                              16\n   *\n   * The header (mask) is 32 bits, then we have a total of 32 bits to store the\n   * length of `selector` and `hostnames` (16 bits each).\n   *\n   * Improvements similar to the onces mentioned in `serializeNetworkFilters`\n   * could be applied here, to get a more compact representation.\n   */\n  public serialize(buffer: StaticDataView): void {\n    // Mandatory fields\n    buffer.pushUint8(this.mask);\n    const index = buffer.getPos();\n    buffer.pushUint8(0);\n\n    if (this.isUnicode()) {\n      buffer.pushUTF8(this.selector);\n    } else {\n      buffer.pushCosmeticSelector(this.selector);\n    }\n\n    // This bit-mask indicates which optional parts of the filter were serialized.\n    let optionalParts = 0;\n\n    if (this.domains !== undefined) {\n      optionalParts |= 1;\n      this.domains.serialize(buffer);\n    }\n\n    if (this.rawLine !== undefined) {\n      optionalParts |= 2;\n      buffer.pushRawCosmetic(this.rawLine);\n    }\n\n    if (this.style !== undefined) {\n      optionalParts |= 4;\n      buffer.pushASCII(this.style);\n    }\n\n    buffer.setByte(index, optionalParts);\n  }\n\n  /**\n   * Return an estimation of the size (in bytes) needed to persist this filter\n   * in a DataView. This does not need to be 100% accurate but should be an\n   * upper-bound. It should also be as fast as possible.\n   */\n  public getSerializedSize(compression: boolean): number {\n    let estimate: number = 1 + 1; // mask (1 byte) + optional parts (1 byte)\n\n    if (this.isUnicode()) {\n      estimate += sizeOfUTF8(this.selector);\n    } else {\n      estimate += sizeOfCosmeticSelector(this.selector, compression);\n    }\n\n    if (this.domains !== undefined) {\n      estimate += this.domains.getSerializedSize();\n    }\n\n    if (this.rawLine !== undefined) {\n      estimate += sizeOfRawCosmetic(this.rawLine, compression);\n    }\n\n    if (this.style !== undefined) {\n      estimate += sizeOfASCII(this.style);\n    }\n\n    return estimate;\n  }\n\n  /**\n   * Create a more human-readable version of this filter. It is mainly used for\n   * debugging purpose, as it will expand the values stored in the bit mask.\n   */\n  public toString(): string {\n    if (this.rawLine !== undefined) {\n      return this.rawLine;\n    }\n\n    let filter = '';\n\n    if (this.domains !== undefined) {\n      filter += '<hostnames>';\n    }\n\n    if (this.isUnhide()) {\n      filter += '#@#';\n    } else {\n      filter += '##';\n    }\n\n    if (this.isScriptInject()) {\n      filter += '+js(';\n      filter += this.selector;\n      filter += ')';\n    } else {\n      filter += this.selector;\n    }\n\n    return filter;\n  }\n\n  public match(hostname: string, domain: string): boolean {\n    // Not constraint on hostname, match is true\n    if (this.hasHostnameConstraint() === false) {\n      return true;\n    }\n\n    // No `hostname` available but this filter has some constraints on hostname.\n    if (!hostname && this.hasHostnameConstraint()) {\n      return false;\n    }\n\n    if (this.domains !== undefined) {\n      // TODO - this hashing could be re-used between cosmetics by using an\n      // abstraction like `Request` (similar to network filters matching).\n      // Maybe could we reuse `Request` directly without any change?\n      return this.domains.match(\n        hostname.length === 0\n          ? EMPTY_UINT32_ARRAY\n          : getHostnameHashesFromLabelsBackward(hostname, domain),\n        hostname.length === 0\n          ? EMPTY_UINT32_ARRAY\n          : getEntityHashesFromLabelsBackward(hostname, domain),\n      );\n    }\n\n    return true;\n  }\n\n  /**\n   * Get tokens for this filter. It can be indexed multiple times if multiple\n   * hostnames are specified (e.g.: host1,host2##.selector).\n   */\n  public getTokens(): Uint32Array[] {\n    const tokens: Uint32Array[] = [];\n\n    // Note, we do not need to use negated domains or entities as tokens here\n    // since they will by definition not match on their own, unless accompanied\n    // by a domain or entity. Instead, they are handled in\n    // `CosmeticFilterBucket.getCosmeticsFilters(...)`.\n\n    if (this.domains !== undefined) {\n      const { hostnames, entities } = this.domains;\n\n      if (hostnames !== undefined) {\n        for (const hostname of hostnames) {\n          tokens.push(new Uint32Array([hostname]));\n        }\n      }\n\n      if (entities !== undefined) {\n        for (const entity of entities) {\n          tokens.push(new Uint32Array([entity]));\n        }\n      }\n    }\n\n    // Here we only take selector into account if the filter is not unHide.\n    if (tokens.length === 0 && this.isUnhide() === false) {\n      if (this.isIdSelector() || this.isClassSelector()) {\n        // Here we try to identify the end of selector si that we can extract a\n        // valid token out of it. In all these examples, 'selector' is our\n        // token:\n        //\n        //   .selector[...]\n        //   #selector[...]\n        //   #selector ~ foo\n        //   .selector:not(...)\n        //   .selector.foo\n        //\n        // We now try to identify the first valid end of selector which will\n        // also be the end of our token: space, bracket, colon, dot.\n        let endOfSelector = 1;\n        const selector = this.selector;\n        for (; endOfSelector < selector.length; endOfSelector += 1) {\n          const code = selector.charCodeAt(endOfSelector);\n          if (\n            code === 32 /* ' ' */ ||\n            code === 46 /* '.' */ ||\n            code === 58 /* ':' */ ||\n            code === 91 /* '[' */\n          ) {\n            break;\n          }\n        }\n\n        const arr = new Uint32Array(1);\n        arr[0] = fastHashBetween(selector, 1, endOfSelector);\n        tokens.push(arr);\n      } else if (this.isHrefSelector() === true) {\n        const selector: string = this.getSelector();\n\n        // Locate 'href' in selector\n        let hrefIndex = selector.indexOf('href');\n        if (hrefIndex === -1) {\n          return EMPTY_TOKENS;\n        }\n        hrefIndex += 4;\n\n        // Tokenize optimally depending on the kind of selector: 'href=',\n        // 'href*=', 'href^='.\n        let skipFirstToken: boolean = false;\n        let skipLastToken: boolean = true;\n        if (selector.charCodeAt(hrefIndex) === 42 /* '*' */) {\n          // skip: '*'\n          skipFirstToken = true;\n          hrefIndex += 1;\n        } else if (selector.charCodeAt(hrefIndex) === 94 /* '^' */) {\n          // skip: '^'\n          hrefIndex += 1;\n        } else {\n          skipLastToken = false;\n        }\n\n        hrefIndex += 2; // skip:  '=\"'\n\n        // Locate end of href\n        const hrefEnd = selector.indexOf('\"', hrefIndex);\n        if (hrefEnd === -1) {\n          // That cannot happen unless the filter is not well-formed. In this\n          // case, we just return no tokens, which will result in this filter\n          // ending up in the \"wildcard\" bucket of the index.\n          return EMPTY_TOKENS;\n        }\n\n        tokens.push(\n          tokenize(this.selector.slice(hrefIndex, hrefEnd), skipFirstToken, skipLastToken),\n        );\n      }\n    }\n\n    if (tokens.length === 0) {\n      return EMPTY_TOKENS;\n    }\n\n    return tokens;\n  }\n\n  public getScript(js: Map<string, string>): string | undefined {\n    let scriptName = this.getSelector();\n    let scriptArguments: string[] = [];\n    if (scriptName.indexOf(',') !== -1) {\n      const parts = scriptName.split(',');\n      if (parts.length === 0) {\n        return undefined;\n      }\n\n      const firstPart = parts[0];\n      if (firstPart === undefined) {\n        return undefined;\n      }\n\n      scriptName = firstPart;\n      scriptArguments = parts.slice(1).map((s) => s.trim());\n    }\n\n    let script = js.get(scriptName);\n    if (script !== undefined) {\n      for (let i = 0; i < scriptArguments.length; i += 1) {\n        script = script.replace(`{{${i + 1}}}`, scriptArguments[i]);\n      }\n\n      return script;\n    } // TODO - else throw an exception?\n\n    return undefined;\n  }\n\n  public hasHostnameConstraint(): boolean {\n    return this.domains !== undefined;\n  }\n\n  public getId(): number {\n    if (this.id === undefined) {\n      this.id = computeFilterId(this.mask, this.selector, this.domains, this.style);\n    }\n    return this.id;\n  }\n\n  public hasCustomStyle(): boolean {\n    return this.style !== undefined;\n  }\n\n  public getStyle(): string {\n    return this.style || DEFAULT_HIDDING_STYLE;\n  }\n\n  public getStyleAttributeHash(): string {\n    return `s${fastHash(this.getStyle())}`;\n  }\n\n  public getSelector(): string {\n    return this.selector;\n  }\n\n  public getSelectorAST(): AST | undefined {\n    return parseCssSelector(this.getSelector());\n  }\n\n  public getExtendedSelector(): HTMLSelector | undefined {\n    return extractHTMLSelectorFromRule(this.selector);\n  }\n\n  public isExtended(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.extended);\n  }\n\n  public isRemove(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.remove);\n  }\n\n  public isUnhide(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.unhide);\n  }\n\n  public isScriptInject(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.scriptInject);\n  }\n\n  public isCSS(): boolean {\n    return this.isScriptInject() === false;\n  }\n\n  public isIdSelector(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.isIdSelector);\n  }\n\n  public isClassSelector(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.isClassSelector);\n  }\n\n  public isHrefSelector(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.isHrefSelector);\n  }\n\n  public isUnicode(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.isUnicode);\n  }\n\n  public isHtmlFiltering(): boolean {\n    return this.getSelector().startsWith('^');\n  }\n\n  // A generic hide cosmetic filter is one that:\n  //\n  // * Do not have a domain specified. \"Hide this element on all domains\"\n  // * Have only domain exceptions specified. \"Hide this element on all domains except example.com\"\n  //\n  // For example: ~example.com##.ad  is a generic filter as well!\n  public isGenericHide(): boolean {\n    return this?.domains?.hostnames === undefined && this?.domains?.entities === undefined;\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { Domains } from '../engine/domains';\nimport {\n  StaticDataView,\n  sizeOfNetworkCSP,\n  sizeOfNetworkFilter,\n  sizeOfNetworkHostname,\n  sizeOfNetworkRedirect,\n  sizeOfUTF8,\n  sizeOfRawNetwork,\n} from '../data-view';\nimport { toASCII } from '../punycode';\nimport Request, { RequestType, NORMALIZED_TYPE_TOKEN } from '../request';\nimport { TOKENS_BUFFER } from '../tokens-buffer';\nimport {\n  bitCount,\n  clearBit,\n  fastHash,\n  fastStartsWith,\n  fastStartsWithFrom,\n  getBit,\n  hasUnicode,\n  isAlpha,\n  isDigit,\n  setBit,\n  tokenizeInPlace,\n  tokenizeRegexInPlace,\n  tokenizeWithWildcardsInPlace,\n} from '../utils';\nimport IFilter from './interface';\n\nconst HTTP_HASH = fastHash('http');\nconst HTTPS_HASH = fastHash('https');\n\nfunction isAllowedHostname(ch: number): boolean {\n  return (\n    isDigit(ch) || isAlpha(ch) || ch === 95 /* '_' */ || ch === 45 /* '-' */ || ch === 46 /* '.' */\n  );\n}\n\nconst NORMALIZE_OPTIONS: { [option: string]: string } = {\n  'document': 'doc',\n  'first-party': '1p',\n  'generichide': 'ghide',\n  'object-subrequest': 'object',\n  'stylesheet': 'css',\n  'subdocument': 'frame',\n  'third-party': '3p',\n  'xmlhttprequest': 'xhr',\n  '~first-party': '3p',\n  '~third-party': '1p',\n  'all': '',\n};\n\n/**\n * Normalize a raw filter by replacing options with their canonical forms. For\n * example `||foo.com$stylesheet,first-party,xhr` would be normalized to\n * `||foo.com$css,1p,xhr`.\n */\nconst REGEX = /all|~third-party|~first-party|third-party|first-party|object-subrequest|stylesheet|subdocument|xmlhttprequest|document|generichide/g;\nexport function normalizeRawFilterOptions(rawFilter: string): string {\n  rawFilter = rawFilter.toLowerCase();\n\n  let indexOfOptions = rawFilter.lastIndexOf('$');\n  if (indexOfOptions === -1) {\n    return rawFilter;\n  }\n\n  // Remove trailing '*' if possible\n  if (indexOfOptions !== 0 && rawFilter[indexOfOptions - 1] === '*') {\n    rawFilter = rawFilter.slice(0, indexOfOptions - 1) + rawFilter.slice(indexOfOptions);\n    indexOfOptions -= 1;\n  }\n\n  // Normalize options\n  const options = rawFilter.slice(indexOfOptions + 1);\n  const normalizedOptions = options\n    .replace(REGEX, (option) => {\n      const normalized = NORMALIZE_OPTIONS[option];\n      if (normalized === undefined) {\n        return option;\n      }\n      return normalized;\n    })\n    .split(',')\n    .sort()\n    .join(',');\n\n  if (options === normalizedOptions) {\n    return rawFilter;\n  }\n\n  if (normalizedOptions === '') {\n    return rawFilter.slice(0, indexOfOptions);\n  }\n\n  return `${rawFilter.slice(0, indexOfOptions)}$${normalizedOptions}`;\n}\n\n/**\n * Masks used to store options of network filters in a bitmask.\n */\nexport const enum NETWORK_FILTER_MASK {\n  // Request Type\n  fromDocument = 1 << 0,\n  fromFont = 1 << 1,\n  fromHttp = 1 << 2,\n  fromHttps = 1 << 3,\n  fromImage = 1 << 4,\n  fromMedia = 1 << 5,\n  fromObject = 1 << 6,\n  fromOther = 1 << 7,\n  fromPing = 1 << 8,\n  fromScript = 1 << 9,\n  fromStylesheet = 1 << 10,\n  fromSubdocument = 1 << 11,\n  fromWebsocket = 1 << 12, // e.g.: ws, wss\n  fromXmlHttpRequest = 1 << 13,\n\n  // Partiness\n  firstParty = 1 << 14,\n  thirdParty = 1 << 15,\n\n  // Options\n  // FREE - 1 << 16\n  isBadFilter = 1 << 17,\n  isCSP = 1 << 18,\n  isGenericHide = 1 << 19,\n  isImportant = 1 << 20,\n  isSpecificHide = 1 << 21,\n\n  // Kind of patterns\n  isFullRegex = 1 << 22,\n  isRegex = 1 << 23,\n  isUnicode = 1 << 24,\n  isLeftAnchor = 1 << 25,\n  isRightAnchor = 1 << 26,\n  isException = 1 << 27,\n  isHostnameAnchor = 1 << 28,\n  isRedirectRule = 1 << 29,\n}\n\n/**\n * Mask used when a network filter can be applied on any content type.\n */\nconst FROM_ANY: number =\n  NETWORK_FILTER_MASK.fromDocument |\n  NETWORK_FILTER_MASK.fromFont |\n  NETWORK_FILTER_MASK.fromImage |\n  NETWORK_FILTER_MASK.fromMedia |\n  NETWORK_FILTER_MASK.fromObject |\n  NETWORK_FILTER_MASK.fromOther |\n  NETWORK_FILTER_MASK.fromPing |\n  NETWORK_FILTER_MASK.fromScript |\n  NETWORK_FILTER_MASK.fromStylesheet |\n  NETWORK_FILTER_MASK.fromSubdocument |\n  NETWORK_FILTER_MASK.fromWebsocket |\n  NETWORK_FILTER_MASK.fromXmlHttpRequest;\n\n/**\n * Map content type value to mask the corresponding mask.\n * ref: https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIContentPolicy\n */\nconst REQUEST_TYPE_TO_MASK: { [s in RequestType]: number | undefined } = {\n  beacon: NETWORK_FILTER_MASK.fromPing, // fromOther?\n  document: NETWORK_FILTER_MASK.fromDocument,\n  cspviolationreport: NETWORK_FILTER_MASK.fromOther,\n  fetch: NETWORK_FILTER_MASK.fromXmlHttpRequest,\n  font: NETWORK_FILTER_MASK.fromFont,\n  image: NETWORK_FILTER_MASK.fromImage,\n  imageset: NETWORK_FILTER_MASK.fromImage,\n  mainFrame: NETWORK_FILTER_MASK.fromDocument,\n  main_frame: NETWORK_FILTER_MASK.fromDocument,\n  media: NETWORK_FILTER_MASK.fromMedia,\n  object: NETWORK_FILTER_MASK.fromObject,\n  object_subrequest: NETWORK_FILTER_MASK.fromObject,\n  ping: NETWORK_FILTER_MASK.fromPing, // fromOther?\n  script: NETWORK_FILTER_MASK.fromScript,\n  stylesheet: NETWORK_FILTER_MASK.fromStylesheet,\n  subFrame: NETWORK_FILTER_MASK.fromSubdocument,\n  sub_frame: NETWORK_FILTER_MASK.fromSubdocument,\n  webSocket: NETWORK_FILTER_MASK.fromWebsocket,\n  websocket: NETWORK_FILTER_MASK.fromWebsocket,\n  xhr: NETWORK_FILTER_MASK.fromXmlHttpRequest,\n  xmlhttprequest: NETWORK_FILTER_MASK.fromXmlHttpRequest,\n\n  // Other\n  cspReport: NETWORK_FILTER_MASK.fromOther,\n  csp_report: NETWORK_FILTER_MASK.fromOther,\n  eventsource: NETWORK_FILTER_MASK.fromOther,\n  manifest: NETWORK_FILTER_MASK.fromOther,\n  other: NETWORK_FILTER_MASK.fromOther,\n  prefetch: NETWORK_FILTER_MASK.fromOther,\n  preflight: NETWORK_FILTER_MASK.fromOther,\n  signedexchange: NETWORK_FILTER_MASK.fromOther,\n  speculative: NETWORK_FILTER_MASK.fromOther,\n  texttrack: NETWORK_FILTER_MASK.fromOther,\n  web_manifest: NETWORK_FILTER_MASK.fromOther,\n  xml_dtd: NETWORK_FILTER_MASK.fromOther,\n  xslt: NETWORK_FILTER_MASK.fromOther,\n};\n\nfunction getListOfRequestTypesNegated(filter: NetworkFilter): RequestType[] {\n  const types: RequestType[] = [];\n\n  if (filter.fromDocument() === false) {\n    types.push('document');\n  }\n\n  if (filter.fromImage() === false) {\n    types.push('image');\n  }\n\n  if (filter.fromMedia() === false) {\n    types.push('media');\n  }\n\n  if (filter.fromObject() === false) {\n    types.push('object');\n  }\n\n  if (filter.fromOther() === false) {\n    types.push('other');\n  }\n\n  if (filter.fromPing() === false) {\n    types.push('ping');\n  }\n\n  if (filter.fromScript() === false) {\n    types.push('script');\n  }\n\n  if (filter.fromStylesheet() === false) {\n    types.push('stylesheet');\n  }\n\n  if (filter.fromSubdocument() === false) {\n    types.push('sub_frame');\n  }\n\n  if (filter.fromWebsocket() === false) {\n    types.push('websocket');\n  }\n\n  if (filter.fromXmlHttpRequest() === false) {\n    types.push('xhr');\n  }\n\n  if (filter.fromFont() === false) {\n    types.push('font');\n  }\n\n  return types;\n}\n\nfunction getListOfRequestTypes(filter: NetworkFilter): RequestType[] {\n  const types: RequestType[] = [];\n\n  if (filter.fromDocument()) {\n    types.push('document');\n  }\n\n  if (filter.fromImage()) {\n    types.push('image');\n  }\n\n  if (filter.fromMedia()) {\n    types.push('media');\n  }\n\n  if (filter.fromObject()) {\n    types.push('object');\n  }\n\n  if (filter.fromOther()) {\n    types.push('other');\n  }\n\n  if (filter.fromPing()) {\n    types.push('ping');\n  }\n\n  if (filter.fromScript()) {\n    types.push('script');\n  }\n\n  if (filter.fromStylesheet()) {\n    types.push('stylesheet');\n  }\n\n  if (filter.fromSubdocument()) {\n    types.push('sub_frame');\n  }\n\n  if (filter.fromWebsocket()) {\n    types.push('websocket');\n  }\n\n  if (filter.fromXmlHttpRequest()) {\n    types.push('xhr');\n  }\n\n  if (filter.fromFont()) {\n    types.push('font');\n  }\n\n  return types;\n}\n\nfunction computeFilterId(\n  csp: string | undefined,\n  mask: number,\n  filter: string | undefined,\n  hostname: string | undefined,\n  domains: Domains | undefined,\n  denyallow: Domains | undefined,\n  redirect: string | undefined,\n): number {\n  let hash = (7907 * 33) ^ mask;\n\n  if (csp !== undefined) {\n    for (let i = 0; i < csp.length; i += 1) {\n      hash = (hash * 33) ^ csp.charCodeAt(i);\n    }\n  }\n\n  if (domains !== undefined) {\n    hash = domains.updateId(hash);\n  }\n\n  if (denyallow !== undefined) {\n    hash = denyallow.updateId(hash);\n  }\n\n  if (filter !== undefined) {\n    for (let i = 0; i < filter.length; i += 1) {\n      hash = (hash * 33) ^ filter.charCodeAt(i);\n    }\n  }\n\n  if (hostname !== undefined) {\n    for (let i = 0; i < hostname.length; i += 1) {\n      hash = (hash * 33) ^ hostname.charCodeAt(i);\n    }\n  }\n\n  if (redirect !== undefined) {\n    for (let i = 0; i < redirect.length; i += 1) {\n      hash = (hash * 33) ^ redirect.charCodeAt(i);\n    }\n  }\n\n  return hash >>> 0;\n}\n\n/**\n * Compiles a filter pattern to a regex. This is only performed *lazily* for\n * filters containing at least a * or ^ symbol. Because Regexes are expansive,\n * we try to convert some patterns to plain filters.\n */\nfunction compileRegex(\n  filter: string,\n  isLeftAnchor: boolean,\n  isRightAnchor: boolean,\n  isFullRegex: boolean,\n): RegExp {\n  if (isFullRegex === true) {\n    return new RegExp(filter.slice(1, filter.length - 1), 'i');\n  }\n\n  // Escape special regex characters: |.$+?{}()[]\\\n  filter = filter.replace(/([|.$+?{}()[\\]\\\\])/g, '\\\\$1');\n\n  // * can match anything\n  filter = filter.replace(/\\*/g, '.*');\n\n  // ^ can match any separator or the end of the pattern\n  filter = filter.replace(/\\^/g, '(?:[^\\\\w\\\\d_.%-]|$)');\n\n  // Should match end of url\n  if (isRightAnchor) {\n    filter = `${filter}$`;\n  }\n\n  if (isLeftAnchor) {\n    filter = `^${filter}`;\n  }\n\n  return new RegExp(filter);\n}\n\nconst MATCH_ALL = new RegExp('');\n\nexport default class NetworkFilter implements IFilter {\n  public static parse(line: string, debug: boolean = false): NetworkFilter | null {\n    // Represent options as a bitmask\n    let mask: number =\n      NETWORK_FILTER_MASK.thirdParty |\n      NETWORK_FILTER_MASK.firstParty |\n      NETWORK_FILTER_MASK.fromHttps |\n      NETWORK_FILTER_MASK.fromHttp;\n\n    // Temporary masks for positive (e.g.: $script) and negative (e.g.: $~script)\n    // content type options.\n    let cptMaskPositive: number = 0;\n    let cptMaskNegative: number = FROM_ANY;\n\n    let hostname: string | undefined;\n    let domains: Domains | undefined;\n    let denyallow: Domains | undefined;\n    let redirect: string | undefined;\n    let csp: string | undefined;\n\n    // Start parsing\n    let filterIndexStart: number = 0;\n    let filterIndexEnd: number = line.length;\n\n    // @@filter == Exception\n    if (line.charCodeAt(0) === 64 /* '@' */ && line.charCodeAt(1) === 64 /* '@' */) {\n      filterIndexStart += 2;\n      mask = setBit(mask, NETWORK_FILTER_MASK.isException);\n    }\n\n    // filter$options == Options\n    // ^     ^\n    // |     |\n    // |     optionsIndex\n    // filterIndexStart\n    const optionsIndex: number = line.lastIndexOf('$');\n    if (optionsIndex !== -1 && line.charCodeAt(optionsIndex + 1) !== 47 /* '/' */) {\n      // Parse options and set flags\n      filterIndexEnd = optionsIndex;\n\n      // --------------------------------------------------------------------- //\n      // parseOptions\n      // --------------------------------------------------------------------- //\n      for (const rawOption of line.slice(optionsIndex + 1).split(',')) {\n        const negation = rawOption.charCodeAt(0) === 126; /* '~' */\n        let option = negation === true ? rawOption.slice(1) : rawOption;\n\n        // Check for options: option=value1|value2\n        let optionValue: string = '';\n        const indexOfEqual: number = option.indexOf('=');\n        if (indexOfEqual !== -1) {\n          optionValue = option.slice(indexOfEqual + 1);\n          option = option.slice(0, indexOfEqual);\n        }\n\n        switch (option) {\n          case 'denyallow': {\n            denyallow = Domains.parse(optionValue.split('|'));\n            break;\n          }\n          case 'domain': {\n            // domain list starting or ending with '|' is invalid\n            if (\n              optionValue.charCodeAt(0) === 124 /* '|' */ ||\n              optionValue.charCodeAt(optionValue.length - 1) === 124 /* '|' */\n            ) {\n              return null;\n            }\n\n            domains = Domains.parse(optionValue.split('|'));\n            break;\n          }\n          case 'badfilter':\n            mask = setBit(mask, NETWORK_FILTER_MASK.isBadFilter);\n            break;\n          case 'important':\n            // Note: `negation` should always be `false` here.\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isImportant);\n            break;\n          case 'match-case':\n            // Note: `negation` should always be `false` here.\n            if (negation) {\n              return null;\n            }\n\n            // We currently consider all filters to be case-insensitive.\n            break;\n          case '3p':\n          case 'third-party':\n            if (negation) {\n              // ~third-party means we should clear the flag\n              mask = clearBit(mask, NETWORK_FILTER_MASK.thirdParty);\n            } else {\n              // third-party means ~first-party\n              mask = clearBit(mask, NETWORK_FILTER_MASK.firstParty);\n            }\n            break;\n          case '1p':\n          case 'first-party':\n            if (negation) {\n              // ~first-party means we should clear the flag\n              mask = clearBit(mask, NETWORK_FILTER_MASK.firstParty);\n            } else {\n              // first-party means ~third-party\n              mask = clearBit(mask, NETWORK_FILTER_MASK.thirdParty);\n            }\n            break;\n          case 'redirect-rule':\n          case 'redirect':\n            // Negation of redirection doesn't make sense\n            if (negation) {\n              return null;\n            }\n\n            // Ignore this filter if no redirection resource is specified\n            if (optionValue.length === 0) {\n              return null;\n            }\n\n            if (option === 'redirect-rule') {\n              mask = setBit(mask, NETWORK_FILTER_MASK.isRedirectRule);\n            }\n\n            redirect = optionValue;\n            break;\n          case 'csp':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isCSP);\n            if (optionValue.length > 0) {\n              csp = optionValue;\n            }\n            break;\n          case 'ehide':\n          case 'elemhide':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isGenericHide);\n            mask = setBit(mask, NETWORK_FILTER_MASK.isSpecificHide);\n            break;\n          case 'shide':\n          case 'specifichide':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isSpecificHide);\n            break;\n          case 'ghide':\n          case 'generichide':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isGenericHide);\n            break;\n          case 'inline-script':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isCSP);\n            csp =\n              \"script-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:\";\n            break;\n          case 'inline-font':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isCSP);\n            csp =\n              \"font-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:\";\n            break;\n          default: {\n            // Handle content type options separatly\n            let optionMask: number = 0;\n            switch (option) {\n              case 'all':\n                if (negation) {\n                  return null;\n                }\n\n                // NOTE: Currently a filter cannot be both blocking and CSP, so\n                // we will have to create multiple filters to keep the semantics\n                // of 'all'.\n                // mask = setBit(mask, NETWORK_FILTER_MASK.isCSP);\n                // csp = [\n                //   \"script-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:\",\n                //   \"font-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:\",\n                // ].join('; ');\n                break;\n              case 'image':\n                optionMask = NETWORK_FILTER_MASK.fromImage;\n                break;\n              case 'media':\n                optionMask = NETWORK_FILTER_MASK.fromMedia;\n                break;\n              case 'object':\n              case 'object-subrequest':\n                optionMask = NETWORK_FILTER_MASK.fromObject;\n                break;\n              case 'other':\n                optionMask = NETWORK_FILTER_MASK.fromOther;\n                break;\n              case 'ping':\n              case 'beacon':\n                optionMask = NETWORK_FILTER_MASK.fromPing;\n                break;\n              case 'script':\n                optionMask = NETWORK_FILTER_MASK.fromScript;\n                break;\n              case 'css':\n              case 'stylesheet':\n                optionMask = NETWORK_FILTER_MASK.fromStylesheet;\n                break;\n              case 'frame':\n              case 'subdocument':\n                optionMask = NETWORK_FILTER_MASK.fromSubdocument;\n                break;\n              case 'xhr':\n              case 'xmlhttprequest':\n                optionMask = NETWORK_FILTER_MASK.fromXmlHttpRequest;\n                break;\n              case 'websocket':\n                optionMask = NETWORK_FILTER_MASK.fromWebsocket;\n                break;\n              case 'font':\n                optionMask = NETWORK_FILTER_MASK.fromFont;\n                break;\n              case 'doc':\n              case 'document':\n                optionMask = NETWORK_FILTER_MASK.fromDocument;\n                break;\n              default:\n                // Disable this filter if we don't support all the options\n                return null;\n            }\n\n            // We got a valid cpt option, update mask\n            if (negation) {\n              cptMaskNegative = clearBit(cptMaskNegative, optionMask);\n            } else {\n              cptMaskPositive = setBit(cptMaskPositive, optionMask);\n            }\n            break;\n          }\n        }\n      }\n      // End of option parsing\n      // --------------------------------------------------------------------- //\n    }\n\n    if (cptMaskPositive === 0) {\n      mask |= cptMaskNegative;\n    } else if (cptMaskNegative === FROM_ANY) {\n      mask |= cptMaskPositive;\n    } else {\n      mask |= cptMaskPositive & cptMaskNegative;\n    }\n\n    // Identify kind of pattern\n    let filter: string | undefined;\n\n    // Detect Regexps (i.e.: /pattern/)\n    if (\n      filterIndexEnd - filterIndexStart >= 2 &&\n      line.charCodeAt(filterIndexStart) === 47 /* '/' */ &&\n      line.charCodeAt(filterIndexEnd - 1) === 47 /* '/' */\n    ) {\n      // Some extra ideas which could be applied to RegExp filters:\n      // * convert rules without any special RegExp syntax to plain patterns\n      // * remove extra `isFullRegex` flag since `isRegex` might be enough\n      // * apply some optimizations on the fly: /^https?:\\\\/\\\\/rest => isHttp + isHttps + rest\n      filter = line.slice(filterIndexStart, filterIndexEnd);\n\n      // Validate RegExp to make sure this rule is fine\n      try {\n        compileRegex(\n          filter,\n          false /* isLeftAnchor */,\n          false /* isRightAnchor */,\n          true /* isFullRegex */,\n        );\n      } catch (ex) {\n        return null; // invalid RegExp\n      }\n\n      mask = setBit(mask, NETWORK_FILTER_MASK.isFullRegex);\n    } else {\n      // Deal with hostname pattern\n      if (filterIndexEnd > 0 && line.charCodeAt(filterIndexEnd - 1) === 124 /* '|' */) {\n        mask = setBit(mask, NETWORK_FILTER_MASK.isRightAnchor);\n        filterIndexEnd -= 1;\n      }\n\n      if (\n        filterIndexStart < filterIndexEnd &&\n        line.charCodeAt(filterIndexStart) === 124 /* '|' */\n      ) {\n        if (\n          filterIndexStart < filterIndexEnd - 1 &&\n          line.charCodeAt(filterIndexStart + 1) === 124 /* '|' */\n        ) {\n          mask = setBit(mask, NETWORK_FILTER_MASK.isHostnameAnchor);\n          filterIndexStart += 2;\n        } else {\n          mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          filterIndexStart += 1;\n        }\n      }\n\n      // const isRegex = checkIsRegex(line, filterIndexStart, filterIndexEnd);\n      // mask = setNetworkMask(mask, NETWORK_FILTER_MASK.isRegex, isRegex);\n\n      if (getBit(mask, NETWORK_FILTER_MASK.isHostnameAnchor)) {\n        // Split at the first character which is not allowed in a hostname\n        let firstSeparator = filterIndexStart;\n        while (\n          firstSeparator < filterIndexEnd &&\n          isAllowedHostname(line.charCodeAt(firstSeparator)) === true\n        ) {\n          firstSeparator += 1;\n        }\n\n        // No separator found so hostname has full length\n        if (firstSeparator === filterIndexEnd) {\n          hostname = line.slice(filterIndexStart, filterIndexEnd);\n          filterIndexStart = filterIndexEnd;\n          // mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n        } else {\n          // Found a separator\n          hostname = line.slice(filterIndexStart, firstSeparator);\n          filterIndexStart = firstSeparator;\n          const separatorCode = line.charCodeAt(firstSeparator);\n\n          if (separatorCode === 94 /* '^' */) {\n            // If the only symbol remaining for the selector is '^' then ignore it\n            // but set the filter as right anchored since there should not be any\n            // other label on the right\n            if (filterIndexEnd - filterIndexStart === 1) {\n              filterIndexStart = filterIndexEnd;\n              mask = setBit(mask, NETWORK_FILTER_MASK.isRightAnchor);\n            } else {\n              mask = setBit(mask, NETWORK_FILTER_MASK.isRegex);\n              mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n            }\n          } else if (separatorCode === 42 /* '*' */) {\n            mask = setBit(mask, NETWORK_FILTER_MASK.isRegex);\n            // mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          } else {\n            mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          }\n        }\n      }\n\n      // Remove trailing '*'\n      if (\n        filterIndexEnd - filterIndexStart > 0 &&\n        line.charCodeAt(filterIndexEnd - 1) === 42 /* '*' */\n      ) {\n        filterIndexEnd -= 1;\n      }\n\n      // Remove leading '*' if the filter is not hostname anchored.\n      if (\n        getBit(mask, NETWORK_FILTER_MASK.isHostnameAnchor) === false &&\n        filterIndexEnd - filterIndexStart > 0 &&\n        line.charCodeAt(filterIndexStart) === 42 /* '*' */\n      ) {\n        mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n        filterIndexStart += 1;\n      }\n\n      // Transform filters on protocol (http, https, ws)\n      if (getBit(mask, NETWORK_FILTER_MASK.isLeftAnchor)) {\n        if (\n          filterIndexEnd - filterIndexStart === 5 &&\n          fastStartsWithFrom(line, 'ws://', filterIndexStart)\n        ) {\n          mask = setBit(mask, NETWORK_FILTER_MASK.fromWebsocket);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.fromHttp);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.fromHttps);\n          filterIndexStart = filterIndexEnd;\n        } else if (\n          filterIndexEnd - filterIndexStart === 7 &&\n          fastStartsWithFrom(line, 'http://', filterIndexStart)\n        ) {\n          mask = setBit(mask, NETWORK_FILTER_MASK.fromHttp);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.fromHttps);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          filterIndexStart = filterIndexEnd;\n        } else if (\n          filterIndexEnd - filterIndexStart === 8 &&\n          fastStartsWithFrom(line, 'https://', filterIndexStart)\n        ) {\n          mask = setBit(mask, NETWORK_FILTER_MASK.fromHttps);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.fromHttp);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          filterIndexStart = filterIndexEnd;\n        } else if (\n          filterIndexEnd - filterIndexStart === 8 &&\n          fastStartsWithFrom(line, 'http*://', filterIndexStart)\n        ) {\n          mask = setBit(mask, NETWORK_FILTER_MASK.fromHttps);\n          mask = setBit(mask, NETWORK_FILTER_MASK.fromHttp);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          filterIndexStart = filterIndexEnd;\n        }\n      }\n\n      if (filterIndexEnd - filterIndexStart > 0) {\n        filter = line.slice(filterIndexStart, filterIndexEnd).toLowerCase();\n\n        mask = setNetworkMask(mask, NETWORK_FILTER_MASK.isUnicode, hasUnicode(filter));\n        if (getBit(mask, NETWORK_FILTER_MASK.isRegex) === false) {\n          mask = setNetworkMask(\n            mask,\n            NETWORK_FILTER_MASK.isRegex,\n            checkIsRegex(filter, 0, filter.length),\n          );\n        }\n      }\n\n      // TODO\n      // - ignore hostname anchor is not hostname provided\n\n      if (hostname !== undefined) {\n        hostname = hostname.toLowerCase();\n        if (hasUnicode(hostname)) {\n          mask = setNetworkMask(mask, NETWORK_FILTER_MASK.isUnicode, true);\n          hostname = toASCII(hostname);\n        }\n      }\n    }\n\n    return new NetworkFilter({\n      csp,\n      filter,\n      hostname,\n      mask,\n      domains,\n      denyallow,\n      rawLine: debug === true ? line : undefined,\n      redirect,\n      regex: undefined,\n    });\n  }\n\n  /**\n   * Deserialize network filters. The code accessing the buffer should be\n   * symetrical to the one in `serializeNetworkFilter`.\n   */\n  public static deserialize(buffer: StaticDataView): NetworkFilter {\n    const mask = buffer.getUint32();\n    const optionalParts = buffer.getUint8();\n    const isUnicode = getBit(mask, NETWORK_FILTER_MASK.isUnicode);\n\n    // The order of these statements is important. Since `buffer.getX()` will\n    // internally increment the position of next byte to read, they need to be\n    // retrieved in the exact same order they were serialized (check\n    // `serializeNetworkFilter`).\n    return new NetworkFilter({\n      // Mandatory field\n      mask,\n\n      // Optional parts\n      csp: (optionalParts & 1) === 1 ? buffer.getNetworkCSP() : undefined,\n      filter:\n        (optionalParts & 2) === 2\n          ? isUnicode\n            ? buffer.getUTF8()\n            : buffer.getNetworkFilter()\n          : undefined,\n      hostname: (optionalParts & 4) === 4 ? buffer.getNetworkHostname() : undefined,\n      domains: (optionalParts & 8) === 8 ? Domains.deserialize(buffer) : undefined,\n      rawLine: (optionalParts & 16) === 16 ? buffer.getRawNetwork() : undefined,\n      redirect: (optionalParts & 32) === 32 ? buffer.getNetworkRedirect() : undefined,\n      denyallow: (optionalParts & 64) === 64 ? Domains.deserialize(buffer) : undefined,\n      regex: undefined,\n    });\n  }\n\n  public readonly csp: string | undefined;\n  public readonly filter: string | undefined;\n  public readonly hostname: string | undefined;\n  public readonly mask: number;\n  public readonly domains: Domains | undefined;\n  public readonly denyallow: Domains | undefined;\n  public readonly redirect: string | undefined;\n\n  // Set only in debug mode\n  public readonly rawLine: string | undefined;\n\n  // Lazy attributes\n  public id: number | undefined;\n  public regex: RegExp | undefined;\n\n  constructor({\n    csp,\n    filter,\n    hostname,\n    mask,\n    domains,\n    denyallow,\n    rawLine,\n    redirect,\n    regex,\n  }: {\n    csp: string | undefined;\n    filter: string | undefined;\n    hostname: string | undefined;\n    mask: number;\n    domains: Domains | undefined;\n    denyallow: Domains | undefined;\n    rawLine: string | undefined;\n    redirect: string | undefined;\n    regex: RegExp | undefined;\n  }) {\n    this.csp = csp;\n    this.filter = filter;\n    this.hostname = hostname;\n    this.mask = mask;\n    this.domains = domains;\n    this.denyallow = denyallow;\n    this.redirect = redirect;\n\n    this.rawLine = rawLine;\n\n    this.id = undefined;\n    this.regex = regex;\n  }\n\n  public isCosmeticFilter() {\n    return false;\n  }\n  public isNetworkFilter() {\n    return true;\n  }\n\n  public match(request: Request): boolean {\n    return checkOptions(this, request) && checkPattern(this, request);\n  }\n\n  /**\n   * To allow for a more compact representation of network filters, the\n   * representation is composed of a mandatory header, and some optional\n   *\n   * Header:\n   * =======\n   *\n   *  | opt | mask\n   *     8     32\n   *\n   * For an empty filter having no pattern, hostname, the minimum size is: 42 bits.\n   *\n   * Then for each optional part (filter, hostname optDomains, optNotDomains,\n   * redirect), it takes 16 bits for the length of the string + the length of the\n   * string in bytes.\n   *\n   * The optional parts are written in order of there number of occurrence in the\n   * filter list used by the adblocker. The most common being `hostname`, then\n   * `filter`, `optDomains`, `optNotDomains`, `redirect`.\n   *\n   * Example:\n   * ========\n   *\n   * @@||cliqz.com would result in a serialized version:\n   *\n   * | 1 | mask | 9 | c | l | i | q | z | . | c | o | m  (16 bytes)\n   *\n   * In this case, the serialized version is actually bigger than the original\n   * filter, but faster to deserialize. In the future, we could optimize the\n   * representation to compact small filters better.\n   *\n   * Ideas:\n   *  * variable length encoding for the mask (if not option, take max 1 byte).\n   *  * first byte could contain the mask as well if small enough.\n   *  * when packing ascii string, store several of them in each byte.\n   */\n  public serialize(buffer: StaticDataView): void {\n    buffer.pushUint32(this.mask);\n\n    const index = buffer.getPos();\n    buffer.pushUint8(0);\n\n    // This bit-mask indicates which optional parts of the filter were serialized.\n    let optionalParts = 0;\n\n    if (this.csp !== undefined) {\n      optionalParts |= 1;\n      buffer.pushNetworkCSP(this.csp);\n    }\n\n    if (this.filter !== undefined) {\n      optionalParts |= 2;\n      if (this.isUnicode()) {\n        buffer.pushUTF8(this.filter);\n      } else {\n        buffer.pushNetworkFilter(this.filter);\n      }\n    }\n\n    if (this.hostname !== undefined) {\n      optionalParts |= 4;\n      buffer.pushNetworkHostname(this.hostname);\n    }\n\n    if (this.domains !== undefined) {\n      optionalParts |= 8;\n      this.domains.serialize(buffer);\n    }\n\n    if (this.rawLine !== undefined) {\n      optionalParts |= 16;\n      buffer.pushRawNetwork(this.rawLine);\n    }\n\n    if (this.redirect !== undefined) {\n      optionalParts |= 32;\n      buffer.pushNetworkRedirect(this.redirect);\n    }\n\n    if (this.denyallow !== undefined) {\n      optionalParts |= 64;\n      this.denyallow.serialize(buffer);\n    }\n\n    buffer.setByte(index, optionalParts);\n  }\n\n  public getSerializedSize(compression: boolean): number {\n    let estimate: number = 4 + 1; // mask = 4 bytes // optional parts = 1 byte\n\n    if (this.csp !== undefined) {\n      estimate += sizeOfNetworkCSP(this.csp, compression);\n    }\n\n    if (this.filter !== undefined) {\n      if (this.isUnicode() === true) {\n        estimate += sizeOfUTF8(this.filter);\n      } else {\n        estimate += sizeOfNetworkFilter(this.filter, compression);\n      }\n    }\n\n    if (this.hostname !== undefined) {\n      estimate += sizeOfNetworkHostname(this.hostname, compression);\n    }\n\n    if (this.domains !== undefined) {\n      estimate += this.domains.getSerializedSize();\n    }\n\n    if (this.rawLine !== undefined) {\n      estimate += sizeOfRawNetwork(this.rawLine, compression);\n    }\n\n    if (this.redirect !== undefined) {\n      estimate += sizeOfNetworkRedirect(this.redirect, compression);\n    }\n\n    if (this.denyallow !== undefined) {\n      estimate += this.denyallow.getSerializedSize();\n    }\n\n    return estimate;\n  }\n\n  /**\n   * Tries to recreate the original representation of the filter (adblock\n   * syntax) from the internal representation. If `rawLine` is set (when filters\n   * are parsed in `debug` mode for example), then it is returned directly.\n   * Otherwise, we try to stick as closely as possible to the original form;\n   * there are things which cannot be recovered though, like domains options\n   * of which only hashes are stored.\n   */\n  public toString() {\n    if (this.rawLine !== undefined) {\n      return this.rawLine;\n    }\n\n    let filter = '';\n\n    if (this.isException()) {\n      filter += '@@';\n    }\n\n    if (this.isHostnameAnchor()) {\n      filter += '||';\n    } else if (this.fromHttp() !== this.fromHttps()) {\n      if (this.fromHttp()) {\n        filter += '|http://';\n      } else {\n        filter += '|https://';\n      }\n    } else if (this.isLeftAnchor()) {\n      filter += '|';\n    }\n\n    if (this.hasHostname()) {\n      filter += this.getHostname();\n      filter += '^';\n    }\n\n    if (this.isFullRegex()) {\n      filter += `/${this.getRegex().source}/`;\n    } else if (this.isRegex()) {\n      filter += this.getRegex().source;\n    } else {\n      filter += this.getFilter();\n    }\n\n    if (this.isRightAnchor()) {\n      filter += '|';\n    }\n\n    // Options\n    const options: string[] = [];\n\n    if (this.fromAny() === false) {\n      const numberOfCptOptions = bitCount(this.getCptMask());\n      const numberOfNegatedOptions = bitCount(FROM_ANY) - numberOfCptOptions;\n\n      if (numberOfNegatedOptions < numberOfCptOptions) {\n        for (const type of getListOfRequestTypesNegated(this)) {\n          options.push(`~${type}`);\n        }\n      } else {\n        for (const type of getListOfRequestTypes(this)) {\n          options.push(type);\n        }\n      }\n    }\n\n    if (this.isImportant()) {\n      options.push('important');\n    }\n\n    if (this.isRedirectRule()) {\n      options.push(`redirect-rule=${this.getRedirect()}`);\n    } else if (this.isRedirect()) {\n      options.push(`redirect=${this.getRedirect()}`);\n    }\n\n    if (this.isCSP()) {\n      options.push(`csp=${this.csp}`);\n    }\n\n    if (this.isElemHide()) {\n      options.push('elemhide');\n    }\n\n    if (this.isSpecificHide()) {\n      options.push('specifichide');\n    }\n\n    if (this.isGenericHide()) {\n      options.push('generichide');\n    }\n\n    if (this.firstParty() !== this.thirdParty()) {\n      if (this.firstParty()) {\n        options.push('1p');\n      }\n      if (this.thirdParty()) {\n        options.push('3p');\n      }\n    }\n\n    if (this.domains !== undefined) {\n      options.push('domain=<hashed>');\n    }\n\n    if (this.denyallow !== undefined) {\n      options.push('denyallow=<hashed>');\n    }\n\n    if (this.isBadFilter()) {\n      options.push('badfilter');\n    }\n\n    if (options.length > 0) {\n      filter += `$${options.join(',')}`;\n    }\n\n    return filter;\n  }\n\n  // Public API (Read-Only)\n  public getIdWithoutBadFilter(): number {\n    // This method computes the id ignoring the $badfilter option (which will\n    // correspond to the ID of filters being discarded). This allows us to\n    // eliminate bad filters by comparing IDs, which is more robust and faster\n    // than string comparison.\n    return computeFilterId(\n      this.csp,\n      this.mask & ~NETWORK_FILTER_MASK.isBadFilter,\n      this.filter,\n      this.hostname,\n      this.domains,\n      this.denyallow,\n      this.redirect,\n    );\n  }\n\n  public getId(): number {\n    if (this.id === undefined) {\n      this.id = computeFilterId(\n        this.csp,\n        this.mask,\n        this.filter,\n        this.hostname,\n        this.domains,\n        this.denyallow,\n        this.redirect,\n      );\n    }\n    return this.id;\n  }\n\n  public hasFilter(): boolean {\n    return this.filter !== undefined;\n  }\n\n  public hasDomains(): boolean {\n    return this.domains !== undefined;\n  }\n\n  public getMask(): number {\n    return this.mask;\n  }\n\n  public getCptMask(): number {\n    return this.getMask() & FROM_ANY;\n  }\n\n  public isRedirect(): boolean {\n    return this.redirect !== undefined;\n  }\n\n  public isRedirectRule(): boolean {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isRedirectRule);\n  }\n\n  public getRedirect(): string {\n    return this.redirect || '';\n  }\n\n  public hasHostname(): boolean {\n    return this.hostname !== undefined;\n  }\n\n  public getHostname(): string {\n    return this.hostname || '';\n  }\n\n  public getFilter(): string {\n    return this.filter || '';\n  }\n\n  public getRegex(): RegExp {\n    if (this.regex === undefined) {\n      this.regex =\n        this.filter !== undefined && this.isRegex()\n          ? compileRegex(\n              this.filter,\n              this.isLeftAnchor(),\n              this.isRightAnchor(),\n              this.isFullRegex(),\n            )\n          : MATCH_ALL;\n    }\n\n    return this.regex;\n  }\n\n  public getTokens(): Uint32Array[] {\n    TOKENS_BUFFER.reset();\n\n    // If there is only one domain and no domain negation, we also use this\n    // domain as a token.\n    if (\n      this.domains !== undefined &&\n      this.domains.hostnames !== undefined &&\n      this.domains.entities === undefined &&\n      this.domains.notHostnames === undefined &&\n      this.domains.notEntities === undefined &&\n      this.domains.hostnames.length === 1\n    ) {\n      TOKENS_BUFFER.push(this.domains.hostnames[0]);\n    }\n\n    // Get tokens from filter\n    if (this.isFullRegex() === false) {\n      if (this.filter !== undefined) {\n        const skipLastToken = !this.isRightAnchor();\n        const skipFirstToken = !this.isLeftAnchor();\n        tokenizeWithWildcardsInPlace(this.filter, skipFirstToken, skipLastToken, TOKENS_BUFFER);\n      }\n\n      // Append tokens from hostname, if any\n      if (this.hostname !== undefined) {\n        tokenizeInPlace(\n          this.hostname,\n          false,\n          this.filter !== undefined && this.filter.charCodeAt(0) === 42 /* '*' */,\n          TOKENS_BUFFER,\n        );\n      }\n    } else if (this.filter !== undefined) {\n      tokenizeRegexInPlace(this.filter, TOKENS_BUFFER);\n    }\n\n    // If we got no tokens for the filter/hostname part, then we will dispatch\n    // this filter in multiple buckets based on the domains option.\n    if (\n      TOKENS_BUFFER.empty() === true &&\n      this.domains !== undefined &&\n      this.domains.hostnames !== undefined &&\n      this.domains.entities === undefined &&\n      this.domains.notHostnames === undefined &&\n      this.domains.notEntities === undefined\n    ) {\n      const result: Uint32Array[] = [];\n      for (const hostname of this.domains.hostnames) {\n        const arr = new Uint32Array(1);\n        arr[0] = hostname;\n        result.push(arr);\n      }\n      return result;\n    }\n\n    // Add optional token for types\n    if (TOKENS_BUFFER.empty() === true && this.fromAny() === false) {\n      const types = getListOfRequestTypes(this);\n      if (types.length !== 0) {\n        const result: Uint32Array[] = [];\n        for (const type of types) {\n          const arr = new Uint32Array(1);\n          arr[0] = NORMALIZED_TYPE_TOKEN[type];\n          result.push(arr);\n        }\n        return result;\n      }\n    }\n\n    // Add optional token for protocol\n    if (this.fromHttp() === true && this.fromHttps() === false) {\n      TOKENS_BUFFER.push(HTTP_HASH);\n    } else if (this.fromHttps() === true && this.fromHttp() === false) {\n      TOKENS_BUFFER.push(HTTPS_HASH);\n    }\n\n    return [TOKENS_BUFFER.slice()];\n  }\n\n  /**\n   * Check if this filter should apply to a request with this content type.\n   */\n  public isCptAllowed(cpt: RequestType): boolean {\n    const mask: number | undefined = REQUEST_TYPE_TO_MASK[cpt];\n    if (mask !== undefined) {\n      return getBit(this.mask, mask);\n    }\n\n    // If content type is not supported (or not specified), we return `true`\n    // only if the filter does not specify any resource type.\n    return this.fromAny();\n  }\n\n  public isException() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isException);\n  }\n\n  public isHostnameAnchor() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isHostnameAnchor);\n  }\n\n  public isRightAnchor() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isRightAnchor);\n  }\n\n  public isLeftAnchor() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isLeftAnchor);\n  }\n\n  public isImportant() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isImportant);\n  }\n\n  public isFullRegex(): boolean {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isFullRegex);\n  }\n\n  public isRegex() {\n    return (\n      getBit(this.mask, NETWORK_FILTER_MASK.isRegex) ||\n      getBit(this.mask, NETWORK_FILTER_MASK.isFullRegex)\n    );\n  }\n\n  public isPlain() {\n    return !this.isRegex();\n  }\n\n  public isCSP() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isCSP);\n  }\n\n  public isElemHide() {\n    return this.isSpecificHide() && this.isGenericHide();\n  }\n\n  public isSpecificHide() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isSpecificHide);\n  }\n\n  public isGenericHide() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isGenericHide);\n  }\n\n  public isBadFilter() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isBadFilter);\n  }\n\n  public isUnicode() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isUnicode);\n  }\n\n  public fromAny() {\n    return this.getCptMask() === FROM_ANY;\n  }\n\n  public thirdParty() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.thirdParty);\n  }\n\n  public firstParty() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.firstParty);\n  }\n\n  public fromImage() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromImage);\n  }\n\n  public fromMedia() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromMedia);\n  }\n\n  public fromObject() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromObject);\n  }\n\n  public fromOther() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromOther);\n  }\n\n  public fromPing() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromPing);\n  }\n\n  public fromScript() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromScript);\n  }\n\n  public fromStylesheet() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromStylesheet);\n  }\n\n  public fromDocument() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromDocument);\n  }\n\n  public fromSubdocument() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromSubdocument);\n  }\n\n  public fromWebsocket() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromWebsocket);\n  }\n\n  public fromHttp() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromHttp);\n  }\n\n  public fromHttps() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromHttps);\n  }\n\n  public fromXmlHttpRequest() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromXmlHttpRequest);\n  }\n\n  public fromFont() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromFont);\n  }\n}\n\n// ---------------------------------------------------------------------------\n// Filter parsing\n// ---------------------------------------------------------------------------\n\nfunction setNetworkMask(mask: number, m: number, value: boolean): number {\n  if (value === true) {\n    return setBit(mask, m);\n  }\n\n  return clearBit(mask, m);\n}\n\n/**\n * Check if the sub-string contained between the indices start and end is a\n * regex filter (it contains a '*' or '^' char).\n */\nfunction checkIsRegex(filter: string, start: number, end: number): boolean {\n  const indexOfSeparator = filter.indexOf('^', start);\n  if (indexOfSeparator !== -1 && indexOfSeparator < end) {\n    return true;\n  }\n\n  const indexOfWildcard = filter.indexOf('*', start);\n  return indexOfWildcard !== -1 && indexOfWildcard < end;\n}\n\n/**\n * Handle hostname anchored filters, given 'hostname' from ||hostname and\n * request's hostname, check if there is a match. This is tricky because\n * filters authors rely and different assumptions. We can have prefix of suffix\n * matches of anchor.\n */\nexport function isAnchoredByHostname(\n  filterHostname: string,\n  hostname: string,\n  isFollowedByWildcard: boolean,\n): boolean {\n  // Corner-case, if `filterHostname` is empty, then it's a match\n  if (filterHostname.length === 0) {\n    return true;\n  }\n\n  // `filterHostname` cannot be longer than actual hostname\n  if (filterHostname.length > hostname.length) {\n    return false;\n  }\n\n  // If they have the same length, they should be equal\n  if (filterHostname.length === hostname.length) {\n    return filterHostname === hostname;\n  }\n\n  // Check if `filterHostname` appears anywhere in `hostname`\n  const matchIndex = hostname.indexOf(filterHostname);\n\n  // No match\n  if (matchIndex === -1) {\n    return false;\n  }\n\n  // `filterHostname` is a prefix of `hostname` and needs to match full a label.\n  //\n  // Examples (filterHostname, hostname):\n  //   * (foo, foo.com)\n  //   * (sub.foo, sub.foo.com)\n  if (matchIndex === 0) {\n    return (\n      isFollowedByWildcard === true ||\n      hostname.charCodeAt(filterHostname.length) === 46 /* '.' */ ||\n      filterHostname.charCodeAt(filterHostname.length - 1) === 46 /* '.' */\n    );\n  }\n\n  // `filterHostname` is a suffix of `hostname`.\n  //\n  // Examples (filterHostname, hostname):\n  //    * (foo.com, sub.foo.com)\n  //    * (com, foo.com)\n  if (hostname.length === matchIndex + filterHostname.length) {\n    return (\n      hostname.charCodeAt(matchIndex - 1) === 46 /* '.' */ ||\n      filterHostname.charCodeAt(0) === 46 /* '.' */\n    );\n  }\n\n  // `filterHostname` is infix of `hostname` and needs match full labels\n  return (\n    (isFollowedByWildcard === true ||\n      hostname.charCodeAt(filterHostname.length) === 46 /* '.' */ ||\n      filterHostname.charCodeAt(filterHostname.length - 1) === 46) /* '.' */ &&\n    (hostname.charCodeAt(matchIndex - 1) === 46 || filterHostname.charCodeAt(0) === 46)\n  );\n}\n\n/**\n * Specialize a network filter depending on its type. It allows for more\n * efficient matching function.\n */\nfunction checkPattern(filter: NetworkFilter, request: Request): boolean {\n  const pattern = filter.getFilter();\n\n  if (filter.isHostnameAnchor() === true) {\n    // Make sure request is anchored by hostname before proceeding to matching\n    const filterHostname = filter.getHostname();\n    if (\n      isAnchoredByHostname(\n        filterHostname,\n        request.hostname,\n        filter.filter !== undefined && filter.filter.charCodeAt(0) === 42 /* '*' */,\n      ) === false\n    ) {\n      return false;\n    }\n\n    // At this point we know request is hostname anchored so we match the rest of the filter.\n    if (filter.isRegex()) {\n      // ||pattern*^\n      return filter\n        .getRegex()\n        .test(request.url.slice(request.url.indexOf(filterHostname) + filterHostname.length));\n    } else if (filter.isRightAnchor() && filter.isLeftAnchor()) {\n      // |||pattern|\n      // Since this is not a regex, the filter pattern must follow the hostname\n      // with nothing in between. So we extract the part of the URL following\n      // after hostname and will perform the matching on it.\n      const urlAfterHostname = request.url.slice(\n        request.url.indexOf(filterHostname) + filterHostname.length,\n      );\n\n      // Since it must follow immediatly after the hostname and be a suffix of\n      // the URL, we conclude that filter must be equal to the part of the\n      // url following the hostname.\n      return pattern === urlAfterHostname;\n    } else if (filter.isRightAnchor()) {\n      // ||pattern|\n      const requestHostname = request.hostname;\n      if (filter.hasFilter() === false) {\n        // In this specific case it means that the specified hostname should match\n        // at the end of the hostname of the request. This allows to prevent false\n        // positive like ||foo.bar which would match https://foo.bar.baz where\n        // ||foo.bar^ would not.\n        return (\n          filterHostname.length === requestHostname.length ||\n          requestHostname.endsWith(filterHostname)\n        );\n      } else {\n        // pattern|\n        return request.url.endsWith(pattern);\n      }\n    } else if (filter.isLeftAnchor()) {\n      // ||pattern + left-anchor => This means that a plain pattern needs to appear\n      // exactly after the hostname, with nothing in between.\n      // Since this is not a regex, the filter pattern must follow the hostname\n      // with nothing in between. So we extract the part of the URL following\n      // after hostname and will perform the matching on it.\n      return fastStartsWithFrom(\n        request.url,\n        pattern,\n        request.url.indexOf(filterHostname) + filterHostname.length,\n      );\n    }\n\n    if (filter.hasFilter() === false) {\n      return true;\n    }\n\n    // We consider this a match if the plain patter (i.e.: filter) appears anywhere.\n    return (\n      request.url.indexOf(pattern, request.url.indexOf(filterHostname) + filterHostname.length) !==\n      -1\n    );\n  } else if (filter.isRegex()) {\n    // pattern*^\n    return filter.getRegex().test(request.url);\n  } else if (filter.isLeftAnchor() && filter.isRightAnchor()) {\n    // |pattern|\n    return request.url === pattern;\n  } else if (filter.isLeftAnchor()) {\n    // |pattern\n    return fastStartsWith(request.url, pattern);\n  } else if (filter.isRightAnchor()) {\n    // pattern|\n    return request.url.endsWith(pattern);\n  }\n\n  // pattern\n  if (filter.hasFilter() === false) {\n    return true;\n  }\n\n  return request.url.indexOf(pattern) !== -1;\n}\n\nfunction checkOptions(filter: NetworkFilter, request: Request): boolean {\n  // We first discard requests based on type, protocol and party. This is really\n  // cheap and should be done first.\n  if (\n    filter.isCptAllowed(request.type) === false ||\n    (request.isHttps === true && filter.fromHttps() === false) ||\n    (request.isHttp === true && filter.fromHttp() === false) ||\n    (filter.firstParty() === false && request.isFirstParty === true) ||\n    (filter.thirdParty() === false && request.isThirdParty === true)\n  ) {\n    return false;\n  }\n\n  // If `sourceHostname` is *not* matched by `domain` then the request should be allowed.\n  if (\n    filter.domains !== undefined &&\n    filter.domains.match(request.sourceHostnameHashes, request.sourceEntityHashes) === false\n  ) {\n    return false;\n  }\n\n  // If `hostname` is matched by `denyallow` then the request should be allowed.\n  if (\n    filter.denyallow !== undefined &&\n    filter.denyallow.match(request.getHostnameHashes(), request.getEntityHashes()) === true\n  ) {\n    return false;\n  }\n\n  return true;\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport Config from './config';\nimport CosmeticFilter from './filters/cosmetic';\nimport NetworkFilter from './filters/network';\nimport { fastStartsWith, fastStartsWithFrom } from './utils';\n\nexport const enum FilterType {\n  NOT_SUPPORTED = 0,\n  NETWORK = 1,\n  COSMETIC = 2,\n}\n\n/**\n * Given a single line (string), checks if this would likely be a cosmetic\n * filter, a network filter or something that is not supported. This check is\n * performed before calling a more specific parser to create an instance of\n * `NetworkFilter` or `CosmeticFilter`.\n */\nexport function detectFilterType(line: string): FilterType {\n  // Ignore empty line\n  if (line.length === 0 || line.length === 1) {\n    return FilterType.NOT_SUPPORTED;\n  }\n\n  // Ignore comments\n  const firstCharCode: number = line.charCodeAt(0);\n  const secondCharCode: number = line.charCodeAt(1);\n  if (\n    firstCharCode === 33 /* '!' */ ||\n    (firstCharCode === 35 /* '#' */ && secondCharCode <= 32) ||\n    (firstCharCode === 91 /* '[' */ && fastStartsWith(line, '[Adblock'))\n  ) {\n    return FilterType.NOT_SUPPORTED;\n  }\n\n  // Fast heuristics to detect network filters\n  const lastCharCode: number = line.charCodeAt(line.length - 1);\n  if (\n    firstCharCode === 36 /* '$' */ ||\n    firstCharCode === 38 /* '&' */ ||\n    firstCharCode === 42 /* '*' */ ||\n    firstCharCode === 45 /* '-' */ ||\n    firstCharCode === 46 /* '.' */ ||\n    firstCharCode === 47 /* '/' */ ||\n    firstCharCode === 58 /* ':' */ ||\n    firstCharCode === 61 /* '=' */ ||\n    firstCharCode === 63 /* '?' */ ||\n    firstCharCode === 64 /* '@' */ ||\n    firstCharCode === 95 /* '_' */ ||\n    firstCharCode === 124 /* '|' */ ||\n    lastCharCode === 124 /* '|' */\n  ) {\n    return FilterType.NETWORK;\n  }\n\n  // Ignore Adguard cosmetics\n  // `$$` = HTML filtering rules\n  const dollarIndex: number = line.indexOf('$');\n  if (dollarIndex !== -1 && dollarIndex !== line.length - 1) {\n    const afterDollarIndex = dollarIndex + 1;\n    const afterDollarCharCode = line.charCodeAt(afterDollarIndex);\n\n    // Ignore Adguard HTML rewrite rules\n    if (\n      afterDollarCharCode === 36 /* '$' */ ||\n      (afterDollarCharCode === 64 /* '@' */ &&\n        fastStartsWithFrom(line, /* $@$ */ '@$', afterDollarIndex))\n    ) {\n      return FilterType.NOT_SUPPORTED;\n    }\n  }\n\n  // Check if filter is cosmetics\n  const sharpIndex: number = line.indexOf('#');\n  if (sharpIndex !== -1 && sharpIndex !== line.length - 1) {\n    const afterSharpIndex = sharpIndex + 1;\n    const afterSharpCharCode = line.charCodeAt(afterSharpIndex);\n\n    if (\n      afterSharpCharCode === 35 /* '#'*/ ||\n      (afterSharpCharCode === 64 /* '@' */ &&\n        fastStartsWithFrom(line, /* #@# */ '@#', afterSharpIndex))\n      // TODO - support ADB/AdGuard extended css selectors\n      // || (afterSharpCharCode === 63 /* '?' */ &&\n      //   fastStartsWithFrom(line, /* #?# */ '?#', afterSharpIndex))\n    ) {\n      // Parse supported cosmetic filter\n      // `##` `#@#`\n      return FilterType.COSMETIC;\n    } else if (\n      (afterSharpCharCode === 64 /* '@'*/ &&\n        (fastStartsWithFrom(line, /* #@$# */ '@$#', afterSharpIndex) ||\n          fastStartsWithFrom(line, /* #@%# */ '@%#', afterSharpIndex))) ||\n      (afterSharpCharCode === 37 /* '%' */ &&\n        fastStartsWithFrom(line, /* #%# */ '%#', afterSharpIndex)) ||\n      (afterSharpCharCode === 36 /* '$' */ &&\n        fastStartsWithFrom(line, /* #$# */ '$#', afterSharpIndex)) ||\n      (afterSharpCharCode === 63 /* '?' */ &&\n        fastStartsWithFrom(line, /* #?# */ '?#', afterSharpIndex))\n    ) {\n      // Ignore Adguard cosmetics\n      // `#$#` `#@$#`\n      // `#%#` `#@%#`\n      // `#?#`\n      return FilterType.NOT_SUPPORTED;\n    }\n  }\n\n  // Everything else is a network filter\n  return FilterType.NETWORK;\n}\n\nexport function parseFilter(filter: string): NetworkFilter | CosmeticFilter | null {\n  const filterType = detectFilterType(filter);\n\n  if (filterType === FilterType.NETWORK) {\n    return NetworkFilter.parse(filter, true);\n  } else if (filterType === FilterType.COSMETIC) {\n    return CosmeticFilter.parse(filter, true);\n  }\n\n  return null;\n}\n\nexport function f(strings: TemplateStringsArray): NetworkFilter | CosmeticFilter | null {\n  return parseFilter(strings[0]);\n}\n\nexport function parseFilters(\n  list: string,\n  config: Partial<Config> = new Config(),\n): { networkFilters: NetworkFilter[]; cosmeticFilters: CosmeticFilter[] } {\n  config = new Config(config);\n\n  const networkFilters: NetworkFilter[] = [];\n  const cosmeticFilters: CosmeticFilter[] = [];\n  const lines = list.split('\\n');\n\n  for (let i = 0; i < lines.length; i += 1) {\n    let line = lines[i];\n\n    // Check if `line` should be left-trimmed\n    if (line.length !== 0 && line.charCodeAt(0) <= 32) {\n      line = line.trim();\n    }\n\n    // Handle continuations\n    if (line.length > 2) {\n      while (\n        i < lines.length - 1 &&\n        line.charCodeAt(line.length - 1) === 92 &&\n        line.charCodeAt(line.length - 2) === 32\n      ) {\n        line = line.slice(0, -2);\n\n        const nextLine = lines[i + 1];\n        if (\n          nextLine.length > 4 &&\n          nextLine.charCodeAt(0) === 32 &&\n          nextLine.charCodeAt(1) === 32 &&\n          nextLine.charCodeAt(2) === 32 &&\n          nextLine.charCodeAt(3) === 32 &&\n          nextLine.charCodeAt(4) !== 32\n        ) {\n          line += nextLine.slice(4);\n          i += 1;\n        } else {\n          break;\n        }\n      }\n    }\n\n    // Check if `line` should be right-trimmed\n    if (line.length !== 0 && line.charCodeAt(line.length - 1) <= 32) {\n      line = line.trim();\n    }\n\n    // Detect if filter is supported, network or cosmetic\n    const filterType = detectFilterType(line);\n\n    if (filterType === FilterType.NETWORK && config.loadNetworkFilters === true) {\n      const filter = NetworkFilter.parse(line, config.debug);\n      if (filter !== null) {\n        networkFilters.push(filter);\n      }\n    } else if (filterType === FilterType.COSMETIC && config.loadCosmeticFilters === true) {\n      const filter = CosmeticFilter.parse(line, config.debug);\n      if (filter !== null) {\n        if (config.loadGenericCosmeticsFilters === true || filter.isGenericHide() === false) {\n          cosmeticFilters.push(filter);\n        }\n      }\n    }\n  }\n\n  return { networkFilters, cosmeticFilters };\n}\n\nfunction getFilters(list: string, config?: Partial<Config>): (NetworkFilter | CosmeticFilter)[] {\n  const { networkFilters, cosmeticFilters } = parseFilters(list, config);\n  const filters: (NetworkFilter | CosmeticFilter)[] = [];\n  return filters.concat(networkFilters).concat(cosmeticFilters);\n}\n\nexport interface IListDiff {\n  newNetworkFilters: NetworkFilter[];\n  newCosmeticFilters: CosmeticFilter[];\n  removedCosmeticFilters: number[];\n  removedNetworkFilters: number[];\n}\n\nexport interface IRawDiff {\n  added: string[];\n  removed: string[];\n}\n\n/**\n * Helper used to return a set of lines as strings where each line is\n * guaranteed to be a valid filter (i.e.: comments, empty lines and\n * un-supported filters are dropped).\n */\nexport function getLinesWithFilters(\n  list: string,\n  config: Partial<Config> = new Config(),\n): Set<string> {\n  // Set config to `debug` so that we keep track of raw lines for each filter\n  return new Set(\n    getFilters(list, new Config(Object.assign({}, config, { debug: true }))).map(\n      ({ rawLine }) => rawLine as string,\n    ),\n  );\n}\n\n/**\n * Given two versions of the same subscription (e.g.: EasyList) as a string,\n * generate a raw diff (i.e.: a list of filters added and filters removed, in\n * their raw string form).\n */\nexport function generateDiff(\n  prevRevision: string,\n  newRevision: string,\n  config: Partial<Config> = new Config(),\n): IRawDiff {\n  // Set config to `debug` so that we keep track of raw lines for each filter\n  const debugConfig = new Config(Object.assign({}, config, { debug: true }));\n\n  const prevRevisionFilters = getFilters(prevRevision, debugConfig);\n  const prevRevisionIds = new Set(prevRevisionFilters.map((filter) => filter.getId()));\n\n  const newRevisionFilters = getFilters(newRevision, debugConfig);\n  const newRevisionIds = new Set(newRevisionFilters.map((filter) => filter.getId()));\n\n  // Check which filters were added, based on ID\n  const added: Set<string> = new Set();\n  for (const filter of newRevisionFilters) {\n    if (!prevRevisionIds.has(filter.getId())) {\n      added.add(filter.rawLine as string);\n    }\n  }\n\n  // Check which filters were removed, based on ID\n  const removed: Set<string> = new Set();\n  for (const filter of prevRevisionFilters) {\n    if (!newRevisionIds.has(filter.getId())) {\n      removed.add(filter.rawLine as string);\n    }\n  }\n\n  return { added: Array.from(added), removed: Array.from(removed) };\n}\n\n/**\n * Merge several raw diffs into one, taking care of accumulating added and\n * removed filters, even if several diffs add/remove the same ones.\n */\nexport function mergeDiffs(diffs: Partial<IRawDiff>[]): IRawDiff {\n  const addedCumul: Set<string> = new Set();\n  const removedCumul: Set<string> = new Set();\n\n  for (const { added, removed } of diffs) {\n    if (added !== undefined) {\n      for (const str of added) {\n        if (removedCumul.has(str)) {\n          removedCumul.delete(str);\n        }\n        addedCumul.add(str);\n      }\n    }\n\n    if (removed !== undefined) {\n      for (const str of removed) {\n        if (addedCumul.has(str)) {\n          addedCumul.delete(str);\n        }\n        removedCumul.add(str);\n      }\n    }\n  }\n\n  return {\n    added: Array.from(addedCumul),\n    removed: Array.from(removedCumul),\n  };\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { getResourceForMime } from '@remusao/small';\n\nimport { StaticDataView, sizeOfASCII, sizeOfByte } from './data-view';\n\n// Polyfill for `btoa`\nfunction btoaPolyfill(buffer: string): string {\n  if (typeof btoa !== 'undefined') {\n    return btoa(buffer);\n  } else if (typeof Buffer !== 'undefined') {\n    return Buffer.from(buffer).toString('base64');\n  }\n  return buffer;\n}\n\ninterface Resource {\n  contentType: string;\n  body: string;\n}\n\n// TODO - support # alias\n// TODO - support empty resource body\n\n/**\n * Abstraction on top of resources.txt used for redirections as well as script\n * injections. It contains logic to parse, serialize and get resources by name\n * for use in the engine.\n */\nexport default class Resources {\n  public static deserialize(buffer: StaticDataView): Resources {\n    const checksum = buffer.getASCII();\n\n    // Deserialize `resources`\n    const resources: Map<string, Resource> = new Map();\n    const numberOfResources = buffer.getUint16();\n    for (let i = 0; i < numberOfResources; i += 1) {\n      resources.set(buffer.getASCII(), {\n        contentType: buffer.getASCII(),\n        body: buffer.getASCII(),\n      });\n    }\n\n    // Deserialize `js`\n    const js: Map<string, string> = new Map();\n    resources.forEach(({ contentType, body }, name) => {\n      if (contentType === 'application/javascript') {\n        js.set(name, body);\n      }\n    });\n\n    return new Resources({\n      checksum,\n      js,\n      resources,\n    });\n  }\n\n  public static parse(data: string, { checksum }: { checksum: string }): Resources {\n    const typeToResource: Map<string, Map<string, string>> = new Map();\n    const trimComments = (str: string) => str.replace(/^\\s*#.*$/gm, '');\n    const chunks = data.split('\\n\\n');\n\n    for (const chunk of chunks) {\n      const resource = trimComments(chunk).trim();\n      if (resource.length !== 0) {\n        const firstNewLine = resource.indexOf('\\n');\n        const split = resource.slice(0, firstNewLine).split(/\\s+/);\n        const name = split[0];\n        const type = split[1];\n        const body = resource.slice(firstNewLine + 1);\n\n        if (name === undefined || type === undefined || body === undefined) {\n          continue;\n        }\n\n        let resources = typeToResource.get(type);\n        if (resources === undefined) {\n          resources = new Map();\n          typeToResource.set(type, resources);\n        }\n        resources.set(name, body);\n      }\n    }\n\n    // The resource containing javascirpts to be injected\n    const js: Map<string, string> = typeToResource.get('application/javascript') || new Map();\n    for (const [key, value] of js.entries()) {\n      if (key.endsWith('.js')) {\n        js.set(key.slice(0, -3), value);\n      }\n    }\n\n    // Create a mapping from resource name to { contentType, data }\n    // used for request redirection.\n    const resourcesByName: Map<string, Resource> = new Map();\n    typeToResource.forEach((resources, contentType) => {\n      resources.forEach((resource: string, name: string) => {\n        resourcesByName.set(name, {\n          contentType,\n          body: resource,\n        });\n      });\n    });\n\n    return new Resources({\n      checksum,\n      js,\n      resources: resourcesByName,\n    });\n  }\n\n  public readonly checksum: string;\n  public readonly js: Map<string, string>;\n  public readonly resources: Map<string, Resource>;\n\n  constructor({ checksum = '', js = new Map(), resources = new Map() }: Partial<Resources> = {}) {\n    this.checksum = checksum;\n    this.js = js;\n    this.resources = resources;\n  }\n\n  public getResource(name: string): Resource & { dataUrl: string } {\n    const { body, contentType } = this.resources.get(name) || getResourceForMime(name);\n\n    let dataUrl;\n    if (contentType.indexOf(';') !== -1) {\n      dataUrl = `data:${contentType},${body}`;\n    } else {\n      dataUrl = `data:${contentType};base64,${btoaPolyfill(body)}`;\n    }\n\n    return { body, contentType, dataUrl };\n  }\n\n  public getSerializedSize(): number {\n    let estimatedSize = sizeOfASCII(this.checksum) + 2 * sizeOfByte(); // resources.size\n\n    this.resources.forEach(({ contentType, body }, name) => {\n      estimatedSize += sizeOfASCII(name) + sizeOfASCII(contentType) + sizeOfASCII(body);\n    });\n\n    return estimatedSize;\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    // Serialize `checksum`\n    buffer.pushASCII(this.checksum);\n\n    // Serialize `resources`\n    buffer.pushUint16(this.resources.size);\n    this.resources.forEach(({ contentType, body }, name) => {\n      buffer.pushASCII(name);\n      buffer.pushASCII(contentType);\n      buffer.pushASCII(body);\n    });\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nexport function compactTokens(tokens: Uint32Array): Uint32Array {\n  const sorted = tokens.sort();\n  let lastIndex = 1;\n  for (let i = 1; i < sorted.length; i += 1) {\n    if (sorted[lastIndex - 1] !== sorted[i]) {\n      sorted[lastIndex++] = sorted[i];\n    }\n  }\n\n  return sorted.subarray(0, lastIndex);\n}\n\nexport function hasEmptyIntersection(s1: Uint32Array, s2: Uint32Array): boolean {\n  let i = 0;\n  let j = 0;\n\n  while (i < s1.length && j < s2.length && s1[i] !== s2[j]) {\n    if (s1[i] < s2[j]) {\n      i += 1;\n    } else {\n      j += 1;\n    }\n  }\n\n  return i === s1.length || j === s2.length;\n}\n\nconst EMPTY_UINT32_ARRAY = new Uint32Array(0);\n\nexport function concatTypedArrays(arrays: Uint32Array[]): Uint32Array {\n  if (arrays.length === 0) {\n    return EMPTY_UINT32_ARRAY;\n  }\n\n  if (arrays.length === 1) {\n    return arrays[0];\n  }\n\n  let totalSize = 0;\n  for (let i = 0; i < arrays.length; i += 1) {\n    totalSize += arrays[i].length;\n  }\n\n  const result = new Uint32Array(totalSize);\n  let index = 0;\n  for (let i = 0; i < arrays.length; i += 1) {\n    const array = arrays[i];\n    for (let j = 0; j < array.length; j += 1) {\n      result[index++] = array[j];\n    }\n  }\n\n  return result;\n}\n\nexport function mergeCompactSets(arrays: Uint32Array[]): Uint32Array {\n  return compactTokens(concatTypedArrays(arrays));\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport CosmeticFilter from '../filters/cosmetic';\nimport NetworkFilter, { NETWORK_FILTER_MASK } from '../filters/network';\nimport { setBit } from '../utils';\nimport { Domains } from '../engine/domains';\n\nfunction processRegex(r: RegExp): string {\n  return `(?:${r.source})`;\n}\n\nfunction escape(s: string): string {\n  return `(?:${s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')})`;\n}\n\nfunction setWithDefault<K, V>(map: Map<K, V[]>, key: K, value: V): void {\n  let bucket = map.get(key);\n  if (bucket === undefined) {\n    bucket = [];\n    map.set(key, bucket);\n  }\n  bucket.push(value);\n}\n\nfunction groupBy(\n  filters: NetworkFilter[],\n  criteria: (filter: NetworkFilter) => string,\n): NetworkFilter[][] {\n  const grouped: Map<string, NetworkFilter[]> = new Map();\n  for (const filter of filters) {\n    setWithDefault(grouped, criteria(filter), filter);\n  }\n  return Array.from(grouped.values());\n}\n\nfunction splitBy(\n  filters: NetworkFilter[],\n  condition: (filter: NetworkFilter) => boolean,\n): {\n  positive: NetworkFilter[];\n  negative: NetworkFilter[];\n} {\n  const positive: NetworkFilter[] = [];\n  const negative: NetworkFilter[] = [];\n\n  for (const filter of filters) {\n    if (condition(filter)) {\n      positive.push(filter);\n    } else {\n      negative.push(filter);\n    }\n  }\n\n  return {\n    negative,\n    positive,\n  };\n}\n\ninterface IOptimization {\n  description: string;\n  groupByCriteria: (filter: NetworkFilter) => string;\n  select: (filter: NetworkFilter) => boolean;\n  fusion: (filters: NetworkFilter[]) => NetworkFilter;\n}\n\nconst OPTIMIZATIONS: IOptimization[] = [\n  {\n    description: 'Remove duplicated filters by ID',\n    fusion: (filters: NetworkFilter[]) => filters[0],\n    groupByCriteria: (filter: NetworkFilter) => '' + filter.getId(),\n    select: () => true,\n  },\n  {\n    description: 'Group idential filter with same mask but different domains in single filters',\n    fusion: (filters: NetworkFilter[]) => {\n      const hostnames: Set<number> = new Set();\n      const notHostnames: Set<number> = new Set();\n      const entities: Set<number> = new Set();\n      const notEntities: Set<number> = new Set();\n\n      for (const { domains } of filters) {\n        if (domains !== undefined) {\n          if (domains.hostnames !== undefined) {\n            for (const hash of domains.hostnames) {\n              hostnames.add(hash);\n            }\n          }\n\n          if (domains.entities !== undefined) {\n            for (const hash of domains.entities) {\n              entities.add(hash);\n            }\n          }\n\n          if (domains.notHostnames !== undefined) {\n            for (const hash of domains.notHostnames) {\n              notHostnames.add(hash);\n            }\n          }\n\n          if (domains.notEntities !== undefined) {\n            for (const hash of domains.notEntities) {\n              notEntities.add(hash);\n            }\n          }\n        }\n      }\n\n      return new NetworkFilter(\n        Object.assign({}, filters[0], {\n          domains: new Domains({\n            hostnames: hostnames.size !== 0 ? new Uint32Array(hostnames).sort() : undefined,\n            entities: entities.size !== 0 ? new Uint32Array(entities).sort() : undefined,\n            notHostnames:\n              notHostnames.size !== 0 ? new Uint32Array(notHostnames).sort() : undefined,\n            notEntities: notEntities.size !== 0 ? new Uint32Array(notEntities).sort() : undefined,\n          }),\n          rawLine:\n            filters[0].rawLine !== undefined\n              ? filters.map(({ rawLine }) => rawLine).join(' <+> ')\n              : undefined,\n        }),\n      );\n    },\n    groupByCriteria: (filter: NetworkFilter) =>\n      filter.getHostname() + filter.getFilter() + filter.getMask() + filter.getRedirect(),\n    select: (filter: NetworkFilter) =>\n      !filter.isCSP() && filter.denyallow === undefined && filter.domains !== undefined,\n  },\n  {\n    description: 'Group simple patterns, into a single filter',\n    fusion: (filters: NetworkFilter[]) => {\n      const patterns: string[] = [];\n      for (const f of filters) {\n        if (f.isRegex()) {\n          patterns.push(processRegex(f.getRegex()));\n        } else if (f.isRightAnchor()) {\n          patterns.push(`${escape(f.getFilter())}$`);\n        } else if (f.isLeftAnchor()) {\n          patterns.push(`^${escape(f.getFilter())}`);\n        } else {\n          patterns.push(escape(f.getFilter()));\n        }\n      }\n\n      return new NetworkFilter(\n        Object.assign({}, filters[0], {\n          mask: setBit(filters[0].mask, NETWORK_FILTER_MASK.isRegex),\n          rawLine:\n            filters[0].rawLine !== undefined\n              ? filters.map(({ rawLine }) => rawLine).join(' <+> ')\n              : undefined,\n          regex: new RegExp(patterns.join('|')),\n        }),\n      );\n    },\n    groupByCriteria: (filter: NetworkFilter) =>\n      '' + (filter.getMask() & ~NETWORK_FILTER_MASK.isRegex & ~NETWORK_FILTER_MASK.isFullRegex),\n    select: (filter: NetworkFilter) =>\n      filter.domains === undefined &&\n      filter.denyallow === undefined &&\n      !filter.isHostnameAnchor() &&\n      !filter.isRedirect() &&\n      !filter.isCSP(),\n  },\n];\n\n/**\n * Optimizer which returns the list of original filters.\n */\nexport function noopOptimizeNetwork(filters: NetworkFilter[]): NetworkFilter[] {\n  return filters;\n}\n\nexport function noopOptimizeCosmetic(filters: CosmeticFilter[]): CosmeticFilter[] {\n  return filters;\n}\n\n/**\n * Fusion a set of `filters` by applying optimizations sequentially.\n */\nexport function optimizeNetwork(filters: NetworkFilter[]): NetworkFilter[] {\n  const fused: NetworkFilter[] = [];\n  let toFuse = filters;\n\n  for (const { select, fusion, groupByCriteria } of OPTIMIZATIONS) {\n    const { positive, negative } = splitBy(toFuse, select);\n    toFuse = negative;\n\n    const groups = groupBy(positive, groupByCriteria);\n    for (const group of groups) {\n      if (group.length > 1) {\n        fused.push(fusion(group));\n      } else {\n        toFuse.push(group[0]);\n      }\n    }\n  }\n\n  for (const filter of toFuse) {\n    fused.push(filter);\n  }\n\n  return fused;\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport Config from '../config';\nimport { StaticDataView, EMPTY_UINT32_ARRAY, sizeOfBytes } from '../data-view';\nimport IFilter from '../filters/interface';\n\n// https://graphics.stanford.edu/~seander/bithacks.html#RoundUpPowerOf2\nfunction nextPow2(v: number): number {\n  v--;\n  v |= v >> 1;\n  v |= v >> 2;\n  v |= v >> 4;\n  v |= v >> 8;\n  v |= v >> 16;\n  v++;\n  return v;\n}\n\n/**\n * Generate unique IDs for requests, which is used to avoid matching the same\n * buckets multiple times on the same request (which can happen if a token\n * appears more than once in a URL).\n */\nlet UID = 1;\nfunction getNextId(): number {\n  const id = UID;\n  UID = (UID + 1) % 1000000000;\n  return id;\n}\n\n/**\n * List of filters being indexed using the same token in the index.\n */\ninterface Bucket<T extends IFilter> {\n  readonly filters: T[];\n  lastRequestSeen: number;\n}\n\nconst EMPTY_BUCKET: number = Number.MAX_SAFE_INTEGER >>> 0;\n\n/**\n * The ReverseIndex is an accelerating data structure which allows finding a\n * subset of the filters given a list of tokens seen in a URL. It is the core\n * of the adblocker's matching capabilities and speed.\n *\n * It has mainly two caracteristics:\n * 1. It is very compact and is able to load fast.\n * 2. It is *very fast* in finding potential candidates.\n *\n * Conceptually, the reverse index dispatches filters in \"buckets\" (an array of\n * one or more filters). Filters living in the same bucket are guaranteed to\n * share at least one of their tokens (appearing in the pattern). For example:\n *\n *   - Bucket 1 (ads):\n *       - /ads.js\n *       - /script/ads/tracking.js\n *       - /ads/\n *   - Bucket 2 (tracking)\n *       - /tracking.js\n *       - ||tracking.com/cdn\n *\n * We see that filters in \"Bucket 1\" are indexed using the token \"ads\" and\n * \"Bucket 2\" using token \"tracking\".\n *\n * This property allows to quickly discard most of the filters when we match a\n * URL. To achieve this, the URL is tokenized in the same way filters are\n * tokenized and for each token, we check if there are some filters available.\n *\n * For example:\n *\n *  URL \"https://tracking.com/\" has the following tokens: \"https\", \"tracking\"\n *  and \"com\". We immediatly see that we only check the two filters in the\n *  \"tracking\" bucket since they are the only ones having a common token with\n *  the URL.\n *\n * How do we pick the token for each filter?\n * =========================================\n *\n * Each filter is only indexed *once*, which means that we need to pick one of\n * the tokens appearing in the pattern. We choose the token such that each\n * filter is indexed using the token which was the *least seen* globally. In\n * other words, we pick the most discriminative token for each filter. This is\n * done using the following algorithm:\n *   1. Tokenize all the filters which will be stored in the index\n *   2. Compute a histogram of frequency of each token (globally)\n *   3. Select the best token for each filter (lowest frequency)\n */\nexport default class ReverseIndex<T extends IFilter> {\n  public static deserialize<T extends IFilter>(\n    buffer: StaticDataView,\n    deserialize: (view: StaticDataView) => T,\n    optimize: (filters: T[]) => T[],\n    config: Config,\n  ): ReverseIndex<T> {\n    const tokensLookupIndexSize = buffer.getUint32();\n    const bucketsIndexSize = buffer.getUint32();\n    const numberOfFilters = buffer.getUint32();\n\n    // Alignement to 4 bytes is important here since `view` (Uint8Array) can\n    // appear at any offset of `buffer`. But to be sure we can read back\n    // Uint32Array directly from raw buffer, the alignement has to be a\n    // multiple of 4. The same alignement is taken care of in `serialize`.\n    const view = StaticDataView.fromUint8Array(buffer.getBytes(true /* align */), config);\n    const tokensLookupIndex = view.getUint32ArrayView(tokensLookupIndexSize);\n    const bucketsIndex = view.getUint32ArrayView(bucketsIndexSize);\n    const filtersIndexStart = view.pos;\n    view.seekZero(); // not strictly needed but make sure reverse index can be compared with deep equal\n\n    return new ReverseIndex({\n      config,\n      deserialize,\n      filters: [],\n      optimize,\n    }).updateInternals({\n      bucketsIndex,\n      filtersIndexStart,\n      numberOfFilters,\n      tokensLookupIndex,\n      view,\n    });\n  }\n\n  // Internal, compact representation of the reverse index. It contains three\n  // distinct parts stored in the same typed array:\n  //\n  // 1. \"tokens lookup index\" allows to identify a sub-set of buckets which\n  // likely contain filters for a given token. It is an approximate dispatch\n  // table which maps a mask of N bits (N being smaller than 31 bits, the size\n  // of a token) to a list of buckets having a 'token' sharing these same N\n  // bits sub-set. If the binary representation of the token for bucket1 is\n  // 101010 and suffix has size 3, then we would lookup the \"tokens lookup\n  // index\" using the last 3 bits \"010\" which would give us the offset in our\n  // typed array where we can start reading the filters of buckets having a\n  // token ending with the same 3 bits. The value of N is always a power of 2\n  // depending on the total number of filters stored in the index; determined\n  // at the time `update(...)` is called.\n  //\n  // 2. \"buckets index\" is an array which associates tokens to filters. The\n  // structure is: token, filter, token, filter, etc. To identify all the\n  // filters indexed with 'token' a naive approach would be to iterate on\n  // \"buckets index\" and collect all the filters indexed with 'token'. This\n  // would be *very inefficient*! To make this process faster, filters in\n  // \"buckets index\" are grouped so that buckets sharing the same suffix of N\n  // bits in their indexing token (see \"tokens lookup index\") are stored side\n  // by side in the typed array. To know where this section start given a\n  // particular token, we use \"tokens lookup index\" which associated the suffix\n  // of size N to an index in \"buckets index\". From there we can iterate on the\n  // candidates.\n  //\n  // 3. \"filters index\" contains the filters themselves. \"buckets index\"\n  // presented earlier does not contain filters, but an index to the \"filters\n  // index\". This allows a filter to be indexed multiple times without\n  // introducing any overhead; the filter can be associated with multiple\n  // tokens in \"buckets index\" (each pointing to the same place in \"filters\n  // index\") but its actual representation is stored only once in \"filters\n  // index\".\n\n  private bucketsIndex: Uint32Array = EMPTY_UINT32_ARRAY;\n  private filtersIndexStart: number = 0;\n  private numberOfFilters: number = 0;\n  private tokensLookupIndex: Uint32Array = EMPTY_UINT32_ARRAY;\n  private view: StaticDataView;\n\n  // In-memory cache used to keep track of buckets which have been loaded from\n  // the compact representation (i.e.: this.view). It is not strictly necessary\n  // but will speed-up retrival of popular filters (since we do not have to\n  // perform the lookup in \"tokens index\" and \"buckets index\" everytime).\n  private readonly cache: Map<number, Bucket<T>> = new Map();\n\n  // Function used to load a filter (e.g.: CosmeticFilter or NetworkFilter)\n  // from its compact representation in the \"filters index\" section of the\n  // typed array. Each filter exposes a `serialize(...)` method which is used\n  // to store it in `this.view` (section \"filters index\"). While matching we\n  // need to retrieve the instance of the filter to perform matching and use\n  // `this.deserializeFilter(...)` to do so.\n  private readonly deserializeFilter: (view: StaticDataView) => T;\n\n  // Optional function which will be used to optimize a list of filters\n  // in-memory. Typically this is used while matching when a list of filters is\n  // loaded in memory and stored in `this.cache`. Before using the bucket, we\n  // call `this.optimize(...)` on the list of filters to allow some\n  // optimizations to be performed (e.g.: fusion of similar filters, etc.).\n  // Have a look into `./src/engine/optimizer.ts` for examples of such\n  // optimizations.\n  private readonly optimize: (filters: T[]) => T[];\n  private readonly config: Readonly<Config>;\n\n  constructor({\n    deserialize,\n    filters,\n    optimize,\n    config,\n  }: {\n    deserialize: (view: StaticDataView) => T;\n    filters: T[];\n    optimize: (filters: T[]) => T[];\n    config: Config;\n  }) {\n    this.view = StaticDataView.empty(config);\n    this.deserializeFilter = deserialize;\n    this.optimize = optimize;\n    this.config = config;\n\n    if (filters.length !== 0) {\n      this.update(filters, undefined);\n    }\n  }\n\n  /**\n   * Load all filters from this index in memory (i.e.: deserialize them from\n   * the byte array into NetworkFilter or CosmeticFilter instances). This is\n   * mostly useful for debugging or testing purposes.\n   */\n  public getFilters(): T[] {\n    const filters: T[] = [];\n\n    if (this.numberOfFilters === 0) {\n      return filters;\n    }\n\n    // set view cursor at the start of \"filters index\"\n    this.view.setPos(this.filtersIndexStart);\n\n    for (let i = 0; i < this.numberOfFilters; i += 1) {\n      filters.push(this.deserializeFilter(this.view));\n    }\n\n    return filters;\n  }\n\n  /**\n   * Return an array of all the tokens currently used as keys of the \"buckets index\".\n   */\n  public getTokens(): Uint32Array {\n    const tokens: Set<number> = new Set();\n\n    for (let i = 0; i < this.bucketsIndex.length; i += 2) {\n      tokens.add(this.bucketsIndex[i]);\n    }\n\n    return new Uint32Array(tokens);\n  }\n\n  /**\n   * Estimate the number of bytes needed to serialize this instance of `ReverseIndex`.\n   */\n  public getSerializedSize(): number {\n    // 12 = 4 bytes (tokensLookupIndex.length) + 4 bytes (bucketsIndex.length) + 4 bytes (numberOfFilters)\n    return 12 + sizeOfBytes(this.view.buffer, true /* align */);\n  }\n\n  /**\n   * Dump this index to `buffer`.\n   */\n  public serialize(buffer: StaticDataView): void {\n    buffer.pushUint32(this.tokensLookupIndex.length);\n    buffer.pushUint32(this.bucketsIndex.length);\n    buffer.pushUint32(this.numberOfFilters);\n\n    // Aligmenent is crucial here, see comment in `deserialize` for more info.\n    buffer.pushBytes(this.view.buffer, true /* align */);\n  }\n\n  /**\n   * Iterate on all filters found in buckets associated with the given list of\n   * tokens. The callback is called on each of them. Early termination can be\n   * achieved if the callback returns `false`.\n   *\n   * This will not check if each filter returned would match a given request but\n   * is instead used as a list of potential candidates (much smaller than the\n   * total set of filters; typically between 5 and 10 filters will be checked).\n   */\n  public iterMatchingFilters(tokens: Uint32Array, cb: (f: T) => boolean): void {\n    // Each request is assigned an ID so that we can keep track of the last\n    // request seen by each bucket in the reverse index. This provides a cheap\n    // way to prevent filters from being inspected more than once per request\n    // (which could happen if the same token appears more than once in the URL).\n    const requestId = getNextId();\n\n    for (const token of tokens) {\n      if (this.iterBucket(token, requestId, cb) === false) {\n        return;\n      }\n    }\n\n    // Fallback to 0 (i.e.: wildcard bucket) bucket if nothing was found before.\n    this.iterBucket(0, requestId, cb);\n  }\n\n  /**\n   * Re-create the internal data-structure of the reverse index *in-place*. It\n   * needs to be called with a list of new filters and optionally a list of ids\n   * (as returned by either NetworkFilter.getId() or CosmeticFilter.getId())\n   * which need to be removed from the index.\n   */\n  public update(newFilters: T[], removedFilters: Set<number> | undefined): void {\n    // Reset internal cache on each update\n    if (this.cache.size !== 0) {\n      this.cache.clear();\n    }\n\n    const compression = this.config.enableCompression;\n    let totalNumberOfTokens = 0;\n    let totalNumberOfIndexedFilters = 0;\n    const filtersTokens: Uint32Array[][] = [];\n\n    // Keep track of the final size of the buckets index. `bucketsIndexSize` is\n    // the number of indexed filters, multiplied by 2 (since we store both the\n    // token a filter is indexed with and the index of the filter).\n    let bucketsIndexSize = 0;\n\n    // Re-use the current size of \"filters index\" as a starting point so that\n    // we only need to update with new or removed filters. This saves time if\n    // we perform a small update on an existing index.\n    let estimatedBufferSize = this.view.buffer.byteLength - this.filtersIndexStart;\n\n    // Create a list of all filters which will be part of the index. This means\n    // loading existing filters, removing the ones that need to be deleted and\n    // adding the new ones.  At the same time, we update the estimation of\n    // buffer size needed to store this index.\n    let filters: T[] = this.getFilters();\n    if (filters.length !== 0) {\n      // If there is at least one existing filter, then we check if some should\n      // be removed. We subtract their size from the total estimated buffer\n      // size.\n      if (removedFilters !== undefined && removedFilters.size !== 0) {\n        filters = filters.filter((f) => {\n          if (removedFilters.has(f.getId())) {\n            estimatedBufferSize -= f.getSerializedSize(compression);\n            return false;\n          }\n\n          return true;\n        });\n      }\n\n      // Add new filters to the list and also update estimated size\n      for (const filter of newFilters) {\n        estimatedBufferSize += filter.getSerializedSize(compression);\n        filters.push(filter);\n      }\n    } else {\n      // In the case where there is no existing filter in the index (happens on\n      // initialization), then we can take a fast-path and not check removed\n      // filters at all. There is also no need to copy the array of filters.\n      filters = newFilters;\n      for (const filter of newFilters) {\n        estimatedBufferSize += filter.getSerializedSize(compression);\n      }\n    }\n\n    // No filters given; reset to empty index and abort.\n    if (filters.length === 0) {\n      this.updateInternals({\n        bucketsIndex: EMPTY_UINT32_ARRAY,\n        filtersIndexStart: 0,\n        numberOfFilters: 0,\n        tokensLookupIndex: EMPTY_UINT32_ARRAY,\n        view: StaticDataView.empty(this.config),\n      });\n      return;\n    }\n\n    // When we run in `debug` mode, we enable fully deterministic updates of\n    // internal data-structures. To this effect, we sort all filters before\n    // insertion.\n    if (this.config.debug === true) {\n      filters.sort((f1: T, f2: T): number => f1.getId() - f2.getId());\n    }\n\n    const histogram = new Uint32Array(Math.max(nextPow2(2 * filters.length), 256));\n\n    // Tokenize all filters stored in this index. And compute a histogram of\n    // tokens so that we can decide how to index each filter efficiently.\n    for (const filter of filters) {\n      // Tokenize `filter` and store the result in `filtersTokens` which will\n      // be used in the next step to select the best token for each filter.\n      const multiTokens = filter.getTokens();\n      filtersTokens.push(multiTokens);\n\n      // Update estimated size of \"buckets index\" based on number of times this\n      // particular filter will be indexed.\n      bucketsIndexSize += 2 * multiTokens.length; // token + filter index\n      totalNumberOfIndexedFilters += multiTokens.length;\n\n      // Each filter can be indexed more than once, so `getTokens(...)` returns\n      // multiple sets of tokens. We iterate on all of them and update the\n      // histogram for each.\n      for (const tokens of multiTokens) {\n        totalNumberOfTokens += tokens.length;\n        for (const token of tokens) {\n          histogram[token % histogram.length] += 1;\n        }\n      }\n    }\n\n    // Add size of bucketsIndex to total size (x4 because these are 32 bits numbers)\n    estimatedBufferSize += bucketsIndexSize * 4;\n\n    // Prepare \"tokens index\" (see documentation in constructor of `ReverseIndex` class above).\n    const tokensLookupIndexSize: number = Math.max(2, nextPow2(totalNumberOfIndexedFilters));\n    const mask: number = tokensLookupIndexSize - 1;\n    const suffixes: [number, number][][] = [];\n    for (let i = 0; i < tokensLookupIndexSize; i += 1) {\n      suffixes.push([]);\n    }\n\n    // Add size of tokensLookupIndex to total size (x4 because these are 32 bits numbers)\n    estimatedBufferSize += tokensLookupIndexSize * 4;\n\n    // At this point we know the number of bytes needed for the compact\n    // representation of this reverse index (\"tokens index\" + \"buckets index\" +\n    // \"filters index\"). We allocate it at once and proceed with populating it.\n    const buffer = StaticDataView.allocate(estimatedBufferSize, this.config);\n    const tokensLookupIndex = buffer.getUint32ArrayView(tokensLookupIndexSize);\n    const bucketsIndex = buffer.getUint32ArrayView(bucketsIndexSize);\n    const filtersIndexStart = buffer.getPos();\n\n    // For each filter, find the best token (least seen) based on histogram.\n    // Since we are iterating again on the filters, we populate \"filters index\"\n    // in the same loop and keep track of their indices so that we can later\n    // populate \"buckets index\".\n    for (let i = 0; i < filtersTokens.length; i += 1) {\n      const filter: T = filters[i];\n      const multiTokens: Uint32Array[] = filtersTokens[i];\n\n      // Serialize this filter and keep track of its index in the byte array;\n      // it will be used in \"buckets index\" to point to this filter.\n      const filterIndex = buffer.pos;\n      filter.serialize(buffer);\n\n      // Index the filter once per \"tokens\"\n      for (const tokens of multiTokens) {\n        // Find best token (least seen) from `tokens` using `histogram`.\n        let bestToken: number = 0; // default = wildcard bucket\n        let minCount: number = totalNumberOfTokens + 1;\n        for (const token of tokens) {\n          const tokenCount: number = histogram[token % histogram.length];\n          if (tokenCount < minCount) {\n            minCount = tokenCount;\n            bestToken = token;\n\n            // Fast path, if the current token has only been seen once, we can\n            // stop iterating since we will not find a better alternarive!\n            if (minCount === 1) {\n              break;\n            }\n          }\n        }\n\n        // `bestToken & mask` represents the N last bits of `bestToken`. We\n        // group all filters indexed with a token sharing the same N bits.\n        suffixes[bestToken & mask].push([bestToken, filterIndex]);\n      }\n    }\n\n    // Populate \"tokens index\" and \"buckets index\" based on best token found for each filter.\n    let indexInBucketsIndex = 0;\n    for (let i = 0; i < tokensLookupIndexSize; i += 1) {\n      const filtersForMask: [number, number][] = suffixes[i];\n      tokensLookupIndex[i] = indexInBucketsIndex;\n      for (const [token, filterIndex] of filtersForMask) {\n        bucketsIndex[indexInBucketsIndex++] = token;\n        bucketsIndex[indexInBucketsIndex++] = filterIndex;\n      }\n    }\n\n    // Update internals\n    buffer.seekZero();\n    this.updateInternals({\n      bucketsIndex,\n      filtersIndexStart,\n      numberOfFilters: filtersTokens.length,\n      tokensLookupIndex,\n      view: buffer,\n    });\n  }\n\n  private updateInternals({\n    bucketsIndex,\n    filtersIndexStart,\n    numberOfFilters,\n    tokensLookupIndex,\n    view,\n  }: {\n    bucketsIndex: Uint32Array;\n    filtersIndexStart: number;\n    numberOfFilters: number;\n    tokensLookupIndex: Uint32Array;\n    view: StaticDataView;\n  }): ReverseIndex<T> {\n    this.bucketsIndex = bucketsIndex;\n    this.filtersIndexStart = filtersIndexStart;\n    this.numberOfFilters = numberOfFilters;\n    this.tokensLookupIndex = tokensLookupIndex;\n    this.view = view;\n    return this;\n  }\n\n  /**\n   * If a bucket exists for the given token, call the callback on each filter\n   * found inside. An early termination mechanism is built-in, to stop iterating\n   * as soon as `false` is returned from the callback.\n   */\n  private iterBucket(token: number, requestId: number, cb: (f: T) => boolean): boolean {\n    let bucket: Bucket<T> | undefined =\n      this.config.enableInMemoryCache === true ? this.cache.get(token) : undefined;\n\n    // Lazily create bucket if it does not yet exist in memory. Lookup the\n    // compact bucket representation and find all filters being associated with\n    // `token`. Create a `Bucket` out of them and store them in cache.\n    if (bucket === undefined) {\n      const offset = token & (this.tokensLookupIndex.length - 1);\n      const startOfBucket = this.tokensLookupIndex[offset];\n\n      // We do not have any filters for this token\n      if (startOfBucket === EMPTY_BUCKET) {\n        return true;\n      }\n\n      // Since we do not store explicitly the number of filters in each\n      // \"bucket\", we check the index of the next one and use it to infer the\n      // number of filters (each filter being stored as a token + index to the\n      // \"filters store\")\n      const endOfBucket =\n        offset === this.tokensLookupIndex.length - 1\n          ? this.bucketsIndex.length\n          : this.tokensLookupIndex[offset + 1];\n\n      // Get indices of filters indexed with `token`, if any.\n      const filtersIndices: number[] = [];\n      for (let i = startOfBucket; i < endOfBucket; i += 2) {\n        const currentToken = this.bucketsIndex[i];\n        if (currentToken === token) {\n          filtersIndices.push(this.bucketsIndex[i + 1]);\n        }\n      }\n\n      // No filter indexed with `token`.\n      if (filtersIndices.length === 0) {\n        return true; // continue looking for a match\n      }\n\n      // If we have filters for `token` then deserialize filters in memory and\n      // create a `Bucket` instance to hold them for future access.\n      const filters: T[] = [];\n      const view = this.view;\n      for (let i = 0; i < filtersIndices.length; i += 1) {\n        view.setPos(filtersIndices[i]);\n        filters.push(this.deserializeFilter(view));\n      }\n\n      // Create new bucket with found filters (only optimize if we have more\n      // than one filter).\n      bucket = {\n        filters: filters.length > 1 ? this.optimize(filters) : filters,\n        lastRequestSeen: -1, // safe because all ids are positive\n      };\n\n      if (this.config.enableInMemoryCache === true) {\n        this.cache.set(token, bucket);\n      }\n    }\n\n    // Look for matching filter in this bucket\n    if (bucket.lastRequestSeen !== requestId) {\n      bucket.lastRequestSeen = requestId;\n      const filters = bucket.filters;\n      for (let i = 0; i < filters.length; i += 1) {\n        // Break the loop if the callback returns `false`\n        if (cb(filters[i]) === false) {\n          // Whenever we get a match from a filter, we also swap it one\n          // position up in the list. This way, over time, popular filters will\n          // be first and might match earlier. This should decrease the time\n          // needed to get a match.\n          if (i > 0) {\n            const filter = filters[i];\n            filters[i] = filters[i - 1];\n            filters[i - 1] = filter;\n          }\n\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport Config from '../../config';\nimport { StaticDataView, sizeOfBytes } from '../../data-view';\nimport IFilter from '../../filters/interface';\n\n// Empty filters is 4 bytes because we need at least one 32 bits number to keep\n// track of the number of filters in the container. If there is no filter then\n// the number will be 0.\nconst EMPTY_FILTERS = new Uint8Array(4);\n\n/**\n * Generic filters container (for both CosmeticFilter and NetworkFilter\n * instances). This abstracts away some of the logic to serialize/lazy-load\n * lists of filters (which is useful for things like generic cosmetic filters\n * or $badfilter).\n */\nexport default class FiltersContainer<T extends IFilter> {\n  public static deserialize<T extends IFilter>(\n    buffer: StaticDataView,\n    deserialize: (view: StaticDataView) => T,\n    config: Config,\n  ): FiltersContainer<T> {\n    const container = new FiltersContainer({ deserialize, config, filters: [] });\n    container.filters = buffer.getBytes();\n    return container;\n  }\n\n  // Data-view compatible typed array containing all the serialized filters.\n  public filters: Uint8Array;\n  private readonly deserialize: (view: StaticDataView) => T;\n\n  // This does not need to be serialized as it is owned globally by the FiltersEngine.\n  private readonly config: Config;\n\n  constructor({\n    config,\n    deserialize,\n    filters,\n  }: {\n    config: Config;\n    deserialize: (view: StaticDataView) => T;\n    filters: T[];\n  }) {\n    this.deserialize = deserialize;\n    this.filters = EMPTY_FILTERS;\n    this.config = config;\n\n    if (filters.length !== 0) {\n      this.update(filters, undefined);\n    }\n  }\n\n  /**\n   * Update filters based on `newFilters` and `removedFilters`.\n   */\n  public update(newFilters: T[], removedFilters: Set<number> | undefined): void {\n    // Estimate size of the buffer we will need to store filters. This avoids\n    // having to allocate a big chunk of memory up-front if it's not needed.\n    // We start with the current size of `this.filters` then update it with\n    // removed/added filters.\n    let bufferSizeEstimation: number = this.filters.byteLength;\n    let selected: T[] = [];\n    const compression = this.config.enableCompression;\n\n    // Add existing rules (removing the ones with ids in `removedFilters`)\n    const currentFilters = this.getFilters();\n    if (currentFilters.length !== 0) {\n      // If no filter was removed (we only add new ones), we don't need to\n      // filter out removed existing filters. So we just assign the array to\n      // `selected` directly to save a bit of effort.\n      if (removedFilters === undefined || removedFilters.size === 0) {\n        selected = currentFilters;\n      } else {\n        // There might be some removed selected filters, so we iterate through\n        // them and make sure we keep only the ones not having been deleted.\n        for (const filter of currentFilters) {\n          if (removedFilters.has(filter.getId()) === false) {\n            selected.push(filter);\n          } else {\n            bufferSizeEstimation -= filter.getSerializedSize(compression);\n          }\n        }\n      }\n    }\n\n    // If `selected` and `currentFilters` have the same length then no filter was removed.\n    const storedFiltersRemoved = selected.length !== currentFilters.length;\n\n    // Add new rules.\n    const numberOfExistingFilters: number = selected.length;\n    for (const filter of newFilters) {\n      bufferSizeEstimation += filter.getSerializedSize(compression);\n      selected.push(filter);\n    }\n\n    // Check if any new filter was added in `selected` (from `newFilters`).\n    const storedFiltersAdded: boolean = selected.length > numberOfExistingFilters;\n\n    // If selected changed, then update the compact representation of filters.\n    if (selected.length === 0) {\n      this.filters = EMPTY_FILTERS;\n    } else if (storedFiltersAdded === true || storedFiltersRemoved === true) {\n      // Store filters in their compact form\n      const buffer = StaticDataView.allocate(bufferSizeEstimation, this.config);\n      buffer.pushUint32(selected.length);\n\n      // When we run in `debug` mode, we enable fully deterministic updates of\n      // internal data-structure. To this effect, we sort all filters before\n      // insertion.\n      if (this.config.debug === true) {\n        selected.sort((f1: T, f2: T): number => f1.getId() - f2.getId());\n      }\n\n      for (const filter of selected) {\n        filter.serialize(buffer);\n      }\n\n      // Update internals\n      this.filters = buffer.buffer;\n    }\n  }\n\n  public getSerializedSize(): number {\n    return sizeOfBytes(this.filters, false /* no alignement */);\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    buffer.pushBytes(this.filters);\n  }\n\n  public getFilters(): T[] {\n    // No filter stored in the container\n    if (this.filters.byteLength <= 4) {\n      return [];\n    }\n\n    // Load all filters in memory and store them in `cache`\n    const filters: T[] = [];\n    const buffer = StaticDataView.fromUint8Array(this.filters, this.config);\n    const numberOfFilters = buffer.getUint32();\n    for (let i = 0; i < numberOfFilters; i += 1) {\n      filters.push(this.deserialize(buffer));\n    }\n\n    return filters;\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport type { IMessageFromBackground } from '@cliqz/adblocker-content';\n\nimport { compactTokens, concatTypedArrays } from '../../compact-set';\nimport Config from '../../config';\nimport { StaticDataView } from '../../data-view';\nimport CosmeticFilter, { DEFAULT_HIDDING_STYLE } from '../../filters/cosmetic';\nimport {\n  getEntityHashesFromLabelsBackward,\n  getHostnameHashesFromLabelsBackward,\n} from '../../request';\nimport { hashStrings, tokenizeNoSkip } from '../../utils';\nimport { noopOptimizeCosmetic } from '../optimizer';\nimport ReverseIndex from '../reverse-index';\nimport FiltersContainer from './filters';\n\n/**\n * Given a list of CSS selectors, create a valid stylesheet ready to be\n * injected in the page. This also takes care to no create rules with too many\n * selectors for Chrome, see: https://crbug.com/804179\n */\nexport function createStylesheet(rules: string[], style: string): string {\n  if (rules.length === 0) {\n    return '';\n  }\n\n  const maximumNumberOfSelectors = 1024;\n  const parts: string[] = [];\n  const styleStr: string = ` { ${style} }`;\n\n  for (let i = 0; i < rules.length; i += maximumNumberOfSelectors) {\n    // Accumulate up to `maximumNumberOfSelectors` selectors into `selector`.\n    // We use string concatenation here since it's faster than using\n    // `Array.prototype.join`.\n    let selector = rules[i];\n    for (\n      let j = i + 1, end = Math.min(rules.length, i + maximumNumberOfSelectors);\n      j < end;\n      j += 1\n    ) {\n      selector += ',\\n' + rules[j];\n    }\n\n    // Insert CSS after last selector (e.g.: `{ display: none }`)\n    selector += styleStr;\n\n    // If `rules` has less than the limit, we can short-circuit here\n    if (rules.length < maximumNumberOfSelectors) {\n      return selector;\n    }\n\n    // Keep track of this chunk and process next ones\n    parts.push(selector);\n  }\n\n  // Join all chunks together\n  return parts.join('\\n');\n}\n\n/**\n * If at least one filter from `rules` has a custom style (e.g.: `##.foo\n * :style(...)`) then we fallback to `createStylesheetFromRulesWithCustomStyles`\n * which is slower than `createStylesheetFromRules`.\n */\nfunction createStylesheetFromRulesWithCustomStyles(rules: CosmeticFilter[]): string {\n  const selectorsPerStyle: Map<string, string[]> = new Map();\n\n  for (const rule of rules) {\n    const style = rule.getStyle();\n    const selectors = selectorsPerStyle.get(style);\n    if (selectors === undefined) {\n      selectorsPerStyle.set(style, [rule.getSelector()]);\n    } else {\n      selectors.push(rule.getSelector());\n    }\n  }\n\n  const stylesheets: string[] = [];\n  const selectorsPerStyleArray = Array.from(selectorsPerStyle.entries());\n  for (const [style, selectors] of selectorsPerStyleArray) {\n    stylesheets.push(createStylesheet(selectors, style));\n  }\n\n  return stylesheets.join('\\n\\n');\n}\n\n/**\n * Given a list of cosmetic filters, create a stylesheet ready to be injected.\n * This function is optimistic and will assume there is no `:style` filter in\n * `rules`. In case one is found on the way, we fallback to the slower\n * `createStylesheetFromRulesWithCustomStyles` function.\n */\nfunction createStylesheetFromRules(rules: CosmeticFilter[]): string {\n  const selectors: string[] = [];\n  for (const rule of rules) {\n    if (rule.hasCustomStyle()) {\n      return createStylesheetFromRulesWithCustomStyles(rules);\n    }\n\n    selectors.push(rule.selector);\n  }\n\n  return createStylesheet(selectors, DEFAULT_HIDDING_STYLE);\n}\n\nfunction createLookupTokens(hostname: string, domain: string): Uint32Array {\n  const hostnamesHashes = getHostnameHashesFromLabelsBackward(hostname, domain);\n  const entitiesHashes = getEntityHashesFromLabelsBackward(hostname, domain);\n  const tokens = new Uint32Array(hostnamesHashes.length + entitiesHashes.length);\n\n  let index = 0;\n\n  for (const hash of hostnamesHashes) {\n    tokens[index++] = hash;\n  }\n\n  for (const hash of entitiesHashes) {\n    tokens[index++] = hash;\n  }\n\n  return tokens;\n}\n\n/**\n * Efficient container for CosmeticFilter instances. Allows to quickly\n * retrieved scripts and stylesheets to inject in pages for a specific\n * hostname/domain.\n */\nexport default class CosmeticFilterBucket {\n  public static deserialize(buffer: StaticDataView, config: Config): CosmeticFilterBucket {\n    const bucket = new CosmeticFilterBucket({ config });\n\n    bucket.genericRules = FiltersContainer.deserialize(buffer, CosmeticFilter.deserialize, config);\n\n    bucket.classesIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    bucket.hostnameIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    bucket.hrefsIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    bucket.htmlIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    bucket.idsIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    bucket.unhideIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    return bucket;\n  }\n\n  // `genericRules` is a contiguous container of filters. In this case\n  // we keep track of all generic cosmetic filters, which allows us to\n  // efficiently inject them in any page (either all of them or none of\n  // them, without having to match against the hostname/domain of the\n  // page). Having them separated also makes it easier to disable them.\n  public genericRules: FiltersContainer<CosmeticFilter>;\n\n  // `hostnameIndex` contains all cosmetic filters which are specific to one or\n  // several domains (that includes entities as well). They are stored in a\n  // reverse index which allows to efficiently get a subset of the filters\n  // which could be injected on a given page (given hostname and domain).\n  public classesIndex: ReverseIndex<CosmeticFilter>;\n  public hostnameIndex: ReverseIndex<CosmeticFilter>;\n  public hrefsIndex: ReverseIndex<CosmeticFilter>;\n  public htmlIndex: ReverseIndex<CosmeticFilter>;\n  public idsIndex: ReverseIndex<CosmeticFilter>;\n  public unhideIndex: ReverseIndex<CosmeticFilter>;\n\n  // In-memory cache\n  public baseStylesheet: string | null;\n  public extraGenericRules: CosmeticFilter[] | null;\n\n  constructor({ filters = [], config }: { filters?: CosmeticFilter[]; config: Config }) {\n    this.genericRules = new FiltersContainer({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n    });\n\n    this.classesIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    this.hostnameIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    this.hrefsIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    this.htmlIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    this.idsIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    this.unhideIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    // In-memory cache, lazily initialized\n    this.baseStylesheet = null;\n    this.extraGenericRules = null;\n\n    if (filters.length !== 0) {\n      this.update(filters, undefined, config);\n    }\n  }\n\n  public getFilters(): CosmeticFilter[] {\n    const filters: CosmeticFilter[] = [];\n    return filters.concat(\n      this.genericRules.getFilters(),\n      this.classesIndex.getFilters(),\n      this.hostnameIndex.getFilters(),\n      this.hrefsIndex.getFilters(),\n      this.htmlIndex.getFilters(),\n      this.idsIndex.getFilters(),\n      this.unhideIndex.getFilters(),\n    );\n  }\n\n  public update(\n    newFilters: CosmeticFilter[],\n    removedFilters: Set<number> | undefined,\n    config: Config,\n  ): void {\n    const classSelectors: CosmeticFilter[] = [];\n    const genericHideRules: CosmeticFilter[] = [];\n    const hostnameSpecificRules: CosmeticFilter[] = [];\n    const hrefSelectors: CosmeticFilter[] = [];\n    const htmlRules: CosmeticFilter[] = [];\n    const idSelectors: CosmeticFilter[] = [];\n    const unHideRules: CosmeticFilter[] = [];\n\n    for (const rule of newFilters) {\n      if (rule.isUnhide()) {\n        unHideRules.push(rule);\n      } else if (rule.isHtmlFiltering()) {\n        htmlRules.push(rule);\n      } else if (rule.isGenericHide()) {\n        if (rule.isClassSelector()) {\n          classSelectors.push(rule);\n        } else if (rule.isIdSelector()) {\n          idSelectors.push(rule);\n        } else if (rule.isHrefSelector()) {\n          hrefSelectors.push(rule);\n        } else {\n          genericHideRules.push(rule);\n        }\n      } else if (rule.isExtended() === false || config.loadExtendedSelectors === true) {\n        hostnameSpecificRules.push(rule);\n      }\n    }\n\n    this.genericRules.update(genericHideRules, removedFilters);\n    this.classesIndex.update(classSelectors, removedFilters);\n    this.hostnameIndex.update(hostnameSpecificRules, removedFilters);\n    this.hrefsIndex.update(hrefSelectors, removedFilters);\n    this.htmlIndex.update(htmlRules, removedFilters);\n    this.idsIndex.update(idSelectors, removedFilters);\n    this.unhideIndex.update(unHideRules, removedFilters);\n  }\n\n  public getSerializedSize(): number {\n    return (\n      this.genericRules.getSerializedSize() +\n      this.classesIndex.getSerializedSize() +\n      this.hostnameIndex.getSerializedSize() +\n      this.hrefsIndex.getSerializedSize() +\n      this.htmlIndex.getSerializedSize() +\n      this.idsIndex.getSerializedSize() +\n      this.unhideIndex.getSerializedSize()\n    );\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    this.genericRules.serialize(buffer);\n    this.classesIndex.serialize(buffer);\n    this.hostnameIndex.serialize(buffer);\n    this.hrefsIndex.serialize(buffer);\n    this.htmlIndex.serialize(buffer);\n    this.idsIndex.serialize(buffer);\n    this.unhideIndex.serialize(buffer);\n  }\n\n  public getHtmlRules({\n    domain,\n    hostname,\n  }: {\n    domain: string;\n    hostname: string;\n  }): CosmeticFilter[] {\n    // Tokens from `hostname` and `domain` which will be used to lookup filters\n    // from the reverse index. The same tokens are re-used for multiple indices.\n    const hostnameTokens = createLookupTokens(hostname, domain);\n    const rules: CosmeticFilter[] = [];\n    this.htmlIndex.iterMatchingFilters(hostnameTokens, (rule: CosmeticFilter) => {\n      if (rule.match(hostname, domain)) {\n        rules.push(rule);\n      }\n      return true;\n    });\n\n    // If we found at least one candidate, check if we have unhidden rules.\n    const disabledRules: Set<string> = new Set();\n    if (rules.length !== 0) {\n      this.unhideIndex.iterMatchingFilters(hostnameTokens, (rule: CosmeticFilter) => {\n        if (rule.match(hostname, domain)) {\n          disabledRules.add(rule.getSelector());\n        }\n\n        return true;\n      });\n    }\n\n    return rules.filter(\n      (rule) => disabledRules.size === 0 || disabledRules.has(rule.getSelector()) === false,\n    );\n  }\n\n  /**\n   * Request cosmetics and scripts to inject in a page.\n   */\n  public getCosmeticsFilters({\n    domain,\n    hostname,\n\n    classes = [],\n    hrefs = [],\n    ids = [],\n\n    allowGenericHides = true,\n    allowSpecificHides = true,\n\n    // Allows to specify which rules to return\n    getBaseRules = true,\n    getInjectionRules = true,\n    getExtendedRules = true,\n    getRulesFromDOM = true,\n    getRulesFromHostname = true,\n  }: {\n    domain: string;\n    hostname: string;\n\n    classes: string[] | undefined;\n    hrefs: string[] | undefined;\n    ids: string[] | undefined;\n\n    allowGenericHides: boolean;\n    allowSpecificHides: boolean;\n\n    getBaseRules?: boolean;\n    getInjectionRules?: boolean;\n    getExtendedRules?: boolean;\n    getRulesFromDOM?: boolean;\n    getRulesFromHostname?: boolean;\n  }): {\n    injections: CosmeticFilter[];\n    extended: IMessageFromBackground['extended'];\n    stylesheet: string;\n  } {\n    // Tokens from `hostname` and `domain` which will be used to lookup filters\n    // from the reverse index. The same tokens are re-used for multiple indices.\n    const hostnameTokens = createLookupTokens(hostname, domain);\n    const rules: CosmeticFilter[] = [];\n\n    // =======================================================================\n    // Rules: hostname-specific\n    // =======================================================================\n    // Collect matching rules which specify a hostname constraint.\n    if (getRulesFromHostname === true) {\n      this.hostnameIndex.iterMatchingFilters(hostnameTokens, (rule: CosmeticFilter) => {\n        // A hostname-specific filter is considered if it's a scriptlet (not\n        // impacted by disabling of specific filters) or specific hides are\n        // allowed.\n        if (\n          (allowSpecificHides === true || rule.isScriptInject() === true) &&\n          rule.match(hostname, domain)\n        ) {\n          rules.push(rule);\n        }\n        return true;\n      });\n    }\n\n    // =======================================================================\n    // Rules: generic hide\n    // =======================================================================\n    // Optionally, collect genericHide rules. We need to make sure the `rule`\n    // matches the hostname and domain since some generic rules can specify\n    // negated hostnames and entities (e.g.: ~foo.*##generic).\n    if (allowGenericHides === true && getRulesFromHostname === true) {\n      const genericRules = this.getGenericRules();\n      for (const rule of genericRules) {\n        if (rule.match(hostname, domain) === true) {\n          rules.push(rule);\n        }\n      }\n    }\n\n    // =======================================================================\n    // Class selector based\n    // =======================================================================\n    if (allowGenericHides === true && getRulesFromDOM === true && classes.length !== 0) {\n      this.classesIndex.iterMatchingFilters(hashStrings(classes), (rule: CosmeticFilter) => {\n        if (rule.match(hostname, domain)) {\n          rules.push(rule);\n        }\n        return true;\n      });\n    }\n\n    // =======================================================================\n    // Id selector based\n    // =======================================================================\n    if (allowGenericHides === true && getRulesFromDOM === true && ids.length !== 0) {\n      this.idsIndex.iterMatchingFilters(hashStrings(ids), (rule: CosmeticFilter) => {\n        if (rule.match(hostname, domain)) {\n          rules.push(rule);\n        }\n        return true;\n      });\n    }\n\n    // =======================================================================\n    // Href selector based\n    // =======================================================================\n    if (allowGenericHides === true && getRulesFromDOM === true && hrefs.length !== 0) {\n      this.hrefsIndex.iterMatchingFilters(\n        compactTokens(concatTypedArrays(hrefs.map((href) => tokenizeNoSkip(href)))),\n        (rule: CosmeticFilter) => {\n          if (rule.match(hostname, domain)) {\n            rules.push(rule);\n          }\n          return true;\n        },\n      );\n    }\n\n    const extended: CosmeticFilter[] = [];\n    const injections: CosmeticFilter[] = [];\n    const styles: CosmeticFilter[] = [];\n\n    // If we found at least one candidate, check if we have unhidden rules,\n    // apply them and dispatch rules into `injections` (i.e.: '+js(...)'),\n    // `extended` (i.e. :not(...)), and `styles` (i.e.: '##rule').\n    if (rules.length !== 0) {\n      // =======================================================================\n      // Rules: unhide\n      // =======================================================================\n      // Collect unhidden selectors. They will be used to filter-out canceled\n      // rules from other indices.\n      let injectionsDisabled = false;\n      const disabledRules: Set<string> = new Set();\n      this.unhideIndex.iterMatchingFilters(hostnameTokens, (rule: CosmeticFilter) => {\n        if (rule.match(hostname, domain)) {\n          disabledRules.add(rule.getSelector());\n\n          // Detect special +js() rules to disable scriptlet injections\n          if (\n            rule.isScriptInject() === true &&\n            rule.isUnhide() === true &&\n            rule.getSelector().length === 0\n          ) {\n            injectionsDisabled = true;\n          }\n        }\n\n        return true;\n      });\n\n      // Apply unhide rules + dispatch\n      for (const rule of rules) {\n        // Make sure `rule` is not un-hidden by a #@# filter\n        if (disabledRules.size !== 0 && disabledRules.has(rule.getSelector())) {\n          continue;\n        }\n\n        // Dispatch rules in `injections` or `styles` depending on type\n        if (rule.isScriptInject() === true) {\n          if (getInjectionRules === true && injectionsDisabled === false) {\n            injections.push(rule);\n          }\n        } else if (rule.isExtended()) {\n          if (getExtendedRules === true) {\n            extended.push(rule);\n          }\n        } else {\n          styles.push(rule);\n        }\n      }\n    }\n\n    // Create final stylesheet\n    let stylesheet: string =\n      getBaseRules === false || allowGenericHides === false ? '' : this.getBaseStylesheet();\n\n    if (styles.length !== 0) {\n      if (stylesheet.length !== 0) {\n        stylesheet += '\\n\\n';\n      }\n\n      stylesheet += createStylesheetFromRules(styles);\n    }\n\n    const extendedProcessed: IMessageFromBackground['extended'] = [];\n    if (extended.length !== 0) {\n      const extendedStyles: Map<string, string> = new Map();\n      for (const rule of extended) {\n        const ast = rule.getSelectorAST();\n        if (ast !== undefined) {\n          const attribute = rule.isRemove() ? undefined : rule.getStyleAttributeHash();\n\n          if (attribute !== undefined) {\n            extendedStyles.set(rule.getStyle(), attribute);\n          }\n\n          extendedProcessed.push({\n            ast,\n            remove: rule.isRemove(),\n            attribute,\n          });\n        }\n      }\n\n      if (extendedStyles.size !== 0) {\n        if (stylesheet.length !== 0) {\n          stylesheet += '\\n\\n';\n        }\n\n        stylesheet += [...extendedStyles.entries()]\n          .map(([style, attribute]) => `[${attribute}] { ${style} }`)\n          .join('\\n\\n');\n      }\n    }\n\n    return {\n      extended: extendedProcessed,\n      injections,\n      stylesheet,\n    };\n  }\n\n  /**\n   * Return the list of filters which can potentially be un-hidden by another\n   * rule currently contained in the cosmetic bucket.\n   */\n  private getGenericRules(): CosmeticFilter[] {\n    if (this.extraGenericRules === null) {\n      return this.lazyPopulateGenericRulesCache().genericRules;\n    }\n    return this.extraGenericRules;\n  }\n\n  /**\n   * The base stylesheet is made of generic filters (not specific to any\n   * hostname) which cannot be hidden (i.e.: there is currently no rule which\n   * might hide their selector). This means that it will never change and is\n   * the same for all sites. We generate it once and re-use it any-time we want\n   * to inject it.\n   */\n  private getBaseStylesheet(): string {\n    if (this.baseStylesheet === null) {\n      return this.lazyPopulateGenericRulesCache().baseStylesheet;\n    }\n    return this.baseStylesheet;\n  }\n\n  /**\n   * This is used to lazily generate both the list of generic rules which can\n   * *potentially be un-hidden* (i.e.: there exists at least one unhide rule\n   * for the selector) and a stylesheet containing all selectors which cannot\n   * be un-hidden. Since this list will not change between updates we can\n   * generate once and use many times.\n   */\n  private lazyPopulateGenericRulesCache(): {\n    baseStylesheet: string;\n    genericRules: CosmeticFilter[];\n  } {\n    if (this.baseStylesheet === null || this.extraGenericRules === null) {\n      // Collect all selectors which can be subjected to an unhide rule\n      const unHideRules = this.unhideIndex.getFilters();\n      const canBeHiddenSelectors: Set<string> = new Set();\n      for (const rule of unHideRules) {\n        canBeHiddenSelectors.add(rule.getSelector());\n      }\n\n      // Split generic rules into two groups:\n      // 1. Rules which cannot be hidden\n      // 2. Rules which can be hidden on some domains\n      //\n      // This allows to create a base stylesheet which we know will never\n      // change then keep a minority of rules in-memory which can potentially\n      // be hidden.\n      const genericRules = this.genericRules.getFilters();\n      const cannotBeHiddenRules: CosmeticFilter[] = [];\n      const canBeHiddenRules: CosmeticFilter[] = [];\n      for (const rule of genericRules) {\n        if (\n          rule.hasCustomStyle() ||\n          rule.isScriptInject() ||\n          rule.hasHostnameConstraint() ||\n          canBeHiddenSelectors.has(rule.getSelector())\n        ) {\n          canBeHiddenRules.push(rule);\n        } else {\n          cannotBeHiddenRules.push(rule);\n        }\n      }\n\n      this.baseStylesheet = createStylesheetFromRules(cannotBeHiddenRules);\n      this.extraGenericRules = canBeHiddenRules;\n    }\n\n    return {\n      baseStylesheet: this.baseStylesheet,\n      genericRules: this.extraGenericRules,\n    };\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport Config from '../../config';\nimport { StaticDataView } from '../../data-view';\nimport NetworkFilter from '../../filters/network';\nimport Request from '../../request';\nimport { noopOptimizeNetwork, optimizeNetwork } from '../optimizer';\nimport ReverseIndex from '../reverse-index';\nimport FiltersContainer from './filters';\n\n/**\n * Accelerating data structure for network filters matching.\n */\nexport default class NetworkFilterBucket {\n  public static deserialize(buffer: StaticDataView, config: Config): NetworkFilterBucket {\n    const bucket = new NetworkFilterBucket({ config });\n\n    bucket.index = ReverseIndex.deserialize(\n      buffer,\n      NetworkFilter.deserialize,\n      config.enableOptimizations ? optimizeNetwork : noopOptimizeNetwork,\n      config,\n    );\n\n    bucket.badFilters = FiltersContainer.deserialize(buffer, NetworkFilter.deserialize, config);\n\n    return bucket;\n  }\n\n  public index: ReverseIndex<NetworkFilter>;\n\n  // `badFilters` are filters specifying a $badfilter option. They can be used\n  // to disable completely another filter (usually to fix breakage). They are\n  // stored separately so that we can quickly check if matching filters (from\n  // `match` and `matchAll` methods) should be ignored or not.\n  public badFilters: FiltersContainer<NetworkFilter>;\n\n  // Lazy attribute containing IDs of $badfilter to quickly check which filters\n  // should be disabled (only one lookup is needed).\n  private badFiltersIds: Set<number> | null;\n\n  constructor({ filters = [], config }: { filters?: NetworkFilter[]; config: Config }) {\n    this.index = new ReverseIndex({\n      config,\n      deserialize: NetworkFilter.deserialize,\n      filters: [],\n      optimize: config.enableOptimizations ? optimizeNetwork : noopOptimizeNetwork,\n    });\n\n    this.badFiltersIds = null;\n    this.badFilters = new FiltersContainer({\n      config,\n      deserialize: NetworkFilter.deserialize,\n      filters: [],\n    });\n\n    if (filters.length !== 0) {\n      this.update(filters, undefined);\n    }\n  }\n\n  public getFilters(): NetworkFilter[] {\n    const filters: NetworkFilter[] = [];\n    return filters.concat(this.badFilters.getFilters(), this.index.getFilters());\n  }\n\n  public update(newFilters: NetworkFilter[], removedFilters: Set<number> | undefined): void {\n    const badFilters: NetworkFilter[] = [];\n    const remaining: NetworkFilter[] = [];\n    for (const filter of newFilters) {\n      if (filter.isBadFilter()) {\n        badFilters.push(filter);\n      } else {\n        remaining.push(filter);\n      }\n    }\n\n    this.badFilters.update(badFilters, removedFilters);\n    this.index.update(remaining, removedFilters);\n    this.badFiltersIds = null;\n  }\n\n  public getSerializedSize(): number {\n    return this.badFilters.getSerializedSize() + this.index.getSerializedSize();\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    this.index.serialize(buffer);\n    this.badFilters.serialize(buffer);\n  }\n\n  public matchAll(request: Request): NetworkFilter[] {\n    const filters: NetworkFilter[] = [];\n\n    this.index.iterMatchingFilters(request.getTokens(), (filter: NetworkFilter) => {\n      if (filter.match(request) && this.isFilterDisabled(filter) === false) {\n        filters.push(filter);\n      }\n      return true;\n    });\n\n    return filters;\n  }\n\n  public match(request: Request): NetworkFilter | undefined {\n    let match: NetworkFilter | undefined;\n\n    this.index.iterMatchingFilters(request.getTokens(), (filter: NetworkFilter) => {\n      if (filter.match(request) && this.isFilterDisabled(filter) === false) {\n        match = filter;\n        return false;\n      }\n      return true;\n    });\n\n    return match;\n  }\n\n  /**\n   * Given a matching filter, check if it is disabled by a $badfilter\n   */\n  private isFilterDisabled(filter: NetworkFilter): boolean {\n    // Lazily load information about bad filters in memory. The only thing we\n    // keep in memory is the list of IDs from $badfilter (ignoring the\n    // $badfilter option from mask). This allows to check if a matching filter\n    // should be ignored just by doing a lookup in a set of IDs.\n    if (this.badFiltersIds === null) {\n      const badFilters = this.badFilters.getFilters();\n\n      // Shortcut if there is no badfilter in this bucket\n      if (badFilters.length === 0) {\n        return false;\n      }\n\n      // Create in-memory list of disabled filter IDs\n      const badFiltersIds: Set<number> = new Set();\n      for (const badFilter of badFilters) {\n        badFiltersIds.add(badFilter.getIdWithoutBadFilter());\n      }\n      this.badFiltersIds = badFiltersIds;\n    }\n\n    return this.badFiltersIds.has(filter.getId());\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport type { IMessageFromBackground } from '@cliqz/adblocker-content';\n\nimport Config from '../config';\nimport { StaticDataView, sizeOfASCII, sizeOfByte } from '../data-view';\nimport { EventEmitter } from '../events';\nimport {\n  adsAndTrackingLists,\n  adsLists,\n  Fetch,\n  fetchLists,\n  fetchResources,\n  fullLists,\n} from '../fetch';\nimport { HTMLSelector } from '../html-filtering';\nimport CosmeticFilter from '../filters/cosmetic';\nimport NetworkFilter from '../filters/network';\nimport { block } from '../filters/dsl';\nimport { IListDiff, IRawDiff, parseFilters } from '../lists';\nimport Request from '../request';\nimport Resources from '../resources';\nimport CosmeticFilterBucket from './bucket/cosmetic';\nimport NetworkFilterBucket from './bucket/network';\n\nexport const ENGINE_VERSION = 570;\n\nfunction shouldApplyHideException(filters: NetworkFilter[]): boolean {\n  if (filters.length === 0) {\n    return false;\n  }\n\n  // Get $Xhide filter with highest priority:\n  // $Xhide,important > $Xhide > @@$Xhide\n  let genericHideFilter: NetworkFilter | undefined;\n  let currentScore = 0;\n  for (const filter of filters) {\n    // To encode priority between filters, we create a bitmask with the following:\n    // $important,Xhide = 100 (takes precedence)\n    // $Xhide           = 010 (exception to @@$Xhide)\n    // @@$Xhide         = 001 (forbids Xhide filters)\n    const score: number = (filter.isImportant() ? 4 : 0) | (filter.isException() ? 1 : 2);\n\n    // Highest `score` has precedence\n    if (score >= currentScore) {\n      currentScore = score;\n      genericHideFilter = filter;\n    }\n  }\n\n  if (genericHideFilter === undefined) {\n    return false;\n  }\n\n  // Check that there is at least one $generichide match and no exception\n  return genericHideFilter.isException();\n}\n\nexport interface BlockingResponse {\n  match: boolean;\n  redirect:\n    | undefined\n    | {\n        body: string;\n        contentType: string;\n        dataUrl: string;\n      };\n  exception: NetworkFilter | undefined;\n  filter: NetworkFilter | undefined;\n}\n\nexport interface Caching {\n  path: string;\n  read: (path: string) => Promise<Uint8Array>;\n  write: (path: string, buffer: Uint8Array) => Promise<void>;\n}\n\nexport default class FilterEngine extends EventEmitter<\n  | 'csp-injected'\n  | 'html-filtered'\n  | 'request-allowed'\n  | 'request-blocked'\n  | 'request-redirected'\n  | 'request-whitelisted'\n  | 'script-injected'\n  | 'style-injected'\n> {\n  private static fromCached<T extends typeof FilterEngine>(\n    this: T,\n    init: () => Promise<InstanceType<T>>,\n    caching?: Caching,\n  ): Promise<InstanceType<T>> {\n    if (caching === undefined) {\n      return init();\n    }\n\n    const { path, read, write } = caching;\n    return read(path)\n      .then((buffer) => this.deserialize(buffer) as InstanceType<T>)\n      .catch(() => init().then((engine) => write(path, engine.serialize()).then(() => engine)));\n  }\n\n  public static empty<T extends FilterEngine>(\n    this: new (...args: any[]) => T,\n    config: Partial<Config> = {},\n  ): T {\n    return new this({ config });\n  }\n\n  /**\n   * Create an instance of `FiltersEngine` (or subclass like `ElectronBlocker`,\n   * etc.), from the list of subscriptions provided as argument (e.g.:\n   * EasyList).\n   *\n   * Lists are fetched using the instance of `fetch` provided as a first\n   * argument. Optionally resources.txt and config can be provided.\n   */\n  public static fromLists<T extends typeof FilterEngine>(\n    this: T,\n    fetch: Fetch,\n    urls: string[],\n    config: Partial<Config> = {},\n    caching?: Caching,\n  ): Promise<InstanceType<T>> {\n    return this.fromCached(() => {\n      const listsPromises = fetchLists(fetch, urls);\n      const resourcesPromise = fetchResources(fetch);\n\n      return Promise.all([listsPromises, resourcesPromise]).then(([lists, resources]) => {\n        const engine = this.parse(lists.join('\\n'), config);\n        if (resources !== undefined) {\n          engine.updateResources(resources, '' + resources.length);\n        }\n\n        return engine as InstanceType<T>;\n      });\n    }, caching);\n  }\n\n  /**\n   * Initialize blocker of *ads only*.\n   *\n   * Attempt to initialize a blocking engine using a pre-built version served\n   * from Cliqz's CDN. If this fails (e.g.: if no pre-built engine is available\n   * for this version of the library), then falls-back to using `fromLists(...)`\n   * method with the same subscriptions.\n   */\n  public static fromPrebuiltAdsOnly<T extends typeof FilterEngine>(\n    this: T,\n    fetchImpl: Fetch = fetch,\n    caching?: Caching,\n  ): Promise<InstanceType<T>> {\n    return this.fromLists(fetchImpl, adsLists, {}, caching);\n  }\n\n  /**\n   * Same as `fromPrebuiltAdsOnly(...)` but also contains rules to block\n   * tracking (i.e.: using extra lists such as EasyPrivacy and more).\n   */\n  public static fromPrebuiltAdsAndTracking<T extends typeof FilterEngine>(\n    this: T,\n    fetchImpl: Fetch = fetch,\n    caching?: Caching,\n  ): Promise<InstanceType<T>> {\n    return this.fromLists(fetchImpl, adsAndTrackingLists, {}, caching);\n  }\n\n  /**\n   * Same as `fromPrebuiltAdsAndTracking(...)` but also contains annoyances\n   * rules to block things like cookie notices.\n   */\n  public static fromPrebuiltFull<T extends typeof FilterEngine>(\n    this: T,\n    fetchImpl: Fetch = fetch,\n    caching?: Caching,\n  ): Promise<InstanceType<T>> {\n    return this.fromLists(fetchImpl, fullLists, {}, caching);\n  }\n\n  public static parse<T extends FilterEngine>(\n    this: new (...args: any[]) => T,\n    filters: string,\n    options: Partial<Config> = {},\n  ): T {\n    const config = new Config(options);\n    return new this({\n      ...parseFilters(filters, config),\n      config,\n    });\n  }\n\n  public static deserialize<T extends FilterEngine>(\n    this: new (...args: any[]) => T,\n    serialized: Uint8Array,\n  ): T {\n    const buffer = StaticDataView.fromUint8Array(serialized, {\n      enableCompression: false,\n    });\n\n    // Before starting deserialization, we make sure that the version of the\n    // serialized engine is the same as the current source code. If not, we\n    // start fresh and create a new engine from the lists.\n    const serializedEngineVersion = buffer.getUint16();\n    if (ENGINE_VERSION !== serializedEngineVersion) {\n      throw new Error(\n        `serialized engine version mismatch, expected ${ENGINE_VERSION} but got ${serializedEngineVersion}`,\n      );\n    }\n\n    // Create a new engine with same options\n    const config = Config.deserialize(buffer);\n\n    // Optionally turn compression ON\n    if (config.enableCompression) {\n      buffer.enableCompression();\n    }\n\n    // Also make sure that the built-in checksum is correct. This allows to\n    // detect data corruption and start fresh if the serialized version was\n    // altered.\n    if (config.integrityCheck) {\n      const currentPos = buffer.pos;\n      buffer.pos = serialized.length - 4;\n      const checksum = buffer.checksum();\n      const expected = buffer.getUint32();\n      if (checksum !== expected) {\n        throw new Error(\n          `serialized engine checksum mismatch, expected ${expected} but got ${checksum}`,\n        );\n      }\n      buffer.pos = currentPos;\n    }\n\n    const engine = new this({ config });\n\n    // Deserialize resources\n    engine.resources = Resources.deserialize(buffer);\n\n    // Deserialize lists\n    const lists = new Map();\n    const numberOfLists = buffer.getUint16();\n    for (let i = 0; i < numberOfLists; i += 1) {\n      lists.set(buffer.getASCII(), buffer.getASCII());\n    }\n    engine.lists = lists;\n\n    // Deserialize buckets\n    engine.importants = NetworkFilterBucket.deserialize(buffer, config);\n    engine.redirects = NetworkFilterBucket.deserialize(buffer, config);\n    engine.filters = NetworkFilterBucket.deserialize(buffer, config);\n    engine.exceptions = NetworkFilterBucket.deserialize(buffer, config);\n\n    engine.csp = NetworkFilterBucket.deserialize(buffer, config);\n    engine.cosmetics = CosmeticFilterBucket.deserialize(buffer, config);\n    engine.hideExceptions = NetworkFilterBucket.deserialize(buffer, config);\n\n    return engine;\n  }\n\n  public lists: Map<string, string>;\n\n  public csp: NetworkFilterBucket;\n  public hideExceptions: NetworkFilterBucket;\n  public exceptions: NetworkFilterBucket;\n  public importants: NetworkFilterBucket;\n  public redirects: NetworkFilterBucket;\n  public filters: NetworkFilterBucket;\n  public cosmetics: CosmeticFilterBucket;\n\n  public resources: Resources;\n  public readonly config: Config;\n\n  constructor({\n    // Optionally initialize the engine with filters\n    cosmeticFilters = [],\n    networkFilters = [],\n\n    config = new Config(),\n    lists = new Map(),\n  }: {\n    cosmeticFilters?: CosmeticFilter[];\n    networkFilters?: NetworkFilter[];\n    lists?: Map<string, string>;\n    config?: Partial<Config>;\n  } = {}) {\n    super(); // init super-class EventEmitter\n\n    this.config = new Config(config);\n\n    // Subscription management: disabled by default\n    this.lists = lists;\n\n    // $csp=\n    this.csp = new NetworkFilterBucket({ config: this.config });\n    // $elemhide\n    // $generichide\n    // $specifichide\n    this.hideExceptions = new NetworkFilterBucket({ config: this.config });\n    // @@filter\n    this.exceptions = new NetworkFilterBucket({ config: this.config });\n    // $important\n    this.importants = new NetworkFilterBucket({ config: this.config });\n    // $redirect\n    this.redirects = new NetworkFilterBucket({ config: this.config });\n    // All other filters\n    this.filters = new NetworkFilterBucket({ config: this.config });\n    // Cosmetic filters\n    this.cosmetics = new CosmeticFilterBucket({ config: this.config });\n\n    // Injections\n    this.resources = new Resources();\n\n    if (networkFilters.length !== 0 || cosmeticFilters.length !== 0) {\n      this.update({\n        newCosmeticFilters: cosmeticFilters,\n        newNetworkFilters: networkFilters,\n      });\n    }\n  }\n\n  /**\n   * Estimate the number of bytes needed to serialize this instance of\n   * `FiltersEngine` using the `serialize(...)` method. It is used internally\n   * by `serialize(...)` to allocate a buffer of the right size and you should\n   * not have to call it yourself most of the time.\n   *\n   * There are cases where we cannot estimate statically the exact size of the\n   * resulting buffer (due to alignement which need to be performed); this\n   * method will return a safe estimate which will always be at least equal to\n   * the real number of bytes needed, or bigger (usually of a few bytes only:\n   * ~20 bytes is to be expected).\n   */\n  public getSerializedSize(): number {\n    let estimatedSize: number =\n      sizeOfByte() + // engine version\n      this.config.getSerializedSize() +\n      this.resources.getSerializedSize() +\n      this.filters.getSerializedSize() +\n      this.exceptions.getSerializedSize() +\n      this.importants.getSerializedSize() +\n      this.redirects.getSerializedSize() +\n      this.csp.getSerializedSize() +\n      this.cosmetics.getSerializedSize() +\n      this.hideExceptions.getSerializedSize() +\n      4; // checksum\n\n    // Estimate size of `this.lists` which stores information of checksum for each list.\n    for (const [name, checksum] of this.lists) {\n      estimatedSize += sizeOfASCII(name) + sizeOfASCII(checksum);\n    }\n\n    return estimatedSize;\n  }\n\n  /**\n   * Creates a binary representation of the full engine. It can be stored\n   * on-disk for faster loading of the adblocker. The `deserialize` static\n   * method of Engine can be used to restore the engine.\n   */\n  public serialize(array?: Uint8Array): Uint8Array {\n    const buffer = StaticDataView.fromUint8Array(\n      array || new Uint8Array(this.getSerializedSize()),\n      this.config,\n    );\n\n    buffer.pushUint16(ENGINE_VERSION);\n\n    // Config\n    this.config.serialize(buffer);\n\n    // Resources (js, resources)\n    this.resources.serialize(buffer);\n\n    // Serialize the state of lists (names and checksums)\n    buffer.pushUint16(this.lists.size);\n    for (const [name, value] of Array.from(this.lists.entries()).sort()) {\n      buffer.pushASCII(name);\n      buffer.pushASCII(value);\n    }\n\n    // Filters buckets\n    this.importants.serialize(buffer);\n    this.redirects.serialize(buffer);\n    this.filters.serialize(buffer);\n    this.exceptions.serialize(buffer);\n\n    this.csp.serialize(buffer);\n    this.cosmetics.serialize(buffer);\n    this.hideExceptions.serialize(buffer);\n\n    // Optionally append a checksum at the end\n    if (this.config.integrityCheck) {\n      buffer.pushUint32(buffer.checksum());\n    }\n\n    return buffer.subarray();\n  }\n\n  /**\n   * Update engine with new filters or resources.\n   */\n  public loadedLists(): string[] {\n    return Array.from(this.lists.keys());\n  }\n\n  public hasList(name: string, checksum: string): boolean {\n    return this.lists.has(name) && this.lists.get(name) === checksum;\n  }\n\n  /**\n   * Update engine with `resources.txt` content.\n   */\n  public updateResources(data: string, checksum: string): boolean {\n    if (this.resources.checksum === checksum) {\n      return false;\n    }\n\n    this.resources = Resources.parse(data, { checksum });\n    return true;\n  }\n\n  public getFilters(): { networkFilters: NetworkFilter[]; cosmeticFilters: CosmeticFilter[] } {\n    const cosmeticFilters: CosmeticFilter[] = [];\n    const networkFilters: NetworkFilter[] = [];\n\n    return {\n      cosmeticFilters: cosmeticFilters.concat(this.cosmetics.getFilters()),\n      networkFilters: networkFilters.concat(\n        this.filters.getFilters(),\n        this.exceptions.getFilters(),\n        this.importants.getFilters(),\n        this.redirects.getFilters(),\n        this.csp.getFilters(),\n        this.hideExceptions.getFilters(),\n      ),\n    };\n  }\n\n  /**\n   * Update engine with new filters as well as optionally removed filters.\n   */\n  public update({\n    newNetworkFilters = [],\n    newCosmeticFilters = [],\n    removedCosmeticFilters = [],\n    removedNetworkFilters = [],\n  }: Partial<IListDiff>): boolean {\n    let updated: boolean = false;\n\n    // Update cosmetic filters\n    if (\n      this.config.loadCosmeticFilters &&\n      (newCosmeticFilters.length !== 0 || removedCosmeticFilters.length !== 0)\n    ) {\n      updated = true;\n      this.cosmetics.update(\n        newCosmeticFilters,\n        removedCosmeticFilters.length === 0 ? undefined : new Set(removedCosmeticFilters),\n        this.config,\n      );\n    }\n\n    // Update network filters\n    if (\n      this.config.loadNetworkFilters &&\n      (newNetworkFilters.length !== 0 || removedNetworkFilters.length !== 0)\n    ) {\n      updated = true;\n      const filters: NetworkFilter[] = [];\n      const csp: NetworkFilter[] = [];\n      const exceptions: NetworkFilter[] = [];\n      const importants: NetworkFilter[] = [];\n      const redirects: NetworkFilter[] = [];\n      const hideExceptions: NetworkFilter[] = [];\n\n      for (const filter of newNetworkFilters) {\n        // NOTE: it's important to check for $generichide, $elemhide,\n        // $specifichide and $csp before exceptions and important as we store\n        // all of them in the same filter bucket. The check for exceptions is\n        // done at match-time directly.\n        if (filter.isCSP()) {\n          csp.push(filter);\n        } else if (filter.isGenericHide() || filter.isSpecificHide()) {\n          hideExceptions.push(filter);\n        } else if (filter.isException()) {\n          exceptions.push(filter);\n        } else if (filter.isImportant()) {\n          importants.push(filter);\n        } else if (filter.isRedirect()) {\n          redirects.push(filter);\n        } else {\n          filters.push(filter);\n        }\n      }\n\n      const removedNetworkFiltersSet: Set<number> | undefined =\n        removedNetworkFilters.length === 0 ? undefined : new Set(removedNetworkFilters);\n\n      // Update buckets in-place\n      this.importants.update(importants, removedNetworkFiltersSet);\n      this.redirects.update(redirects, removedNetworkFiltersSet);\n      this.filters.update(filters, removedNetworkFiltersSet);\n\n      if (this.config.loadExceptionFilters === true) {\n        this.exceptions.update(exceptions, removedNetworkFiltersSet);\n      }\n\n      if (this.config.loadCSPFilters === true) {\n        this.csp.update(csp, removedNetworkFiltersSet);\n      }\n\n      this.hideExceptions.update(hideExceptions, removedNetworkFiltersSet);\n    }\n\n    return updated;\n  }\n\n  public updateFromDiff({ added, removed }: Partial<IRawDiff>): boolean {\n    const newCosmeticFilters: CosmeticFilter[] = [];\n    const newNetworkFilters: NetworkFilter[] = [];\n    const removedCosmeticFilters: CosmeticFilter[] = [];\n    const removedNetworkFilters: NetworkFilter[] = [];\n\n    if (removed !== undefined && removed.length !== 0) {\n      const { networkFilters, cosmeticFilters } = parseFilters(removed.join('\\n'), this.config);\n      Array.prototype.push.apply(removedCosmeticFilters, cosmeticFilters);\n      Array.prototype.push.apply(removedNetworkFilters, networkFilters);\n    }\n\n    if (added !== undefined && added.length !== 0) {\n      const { networkFilters, cosmeticFilters } = parseFilters(added.join('\\n'), this.config);\n      Array.prototype.push.apply(newCosmeticFilters, cosmeticFilters);\n      Array.prototype.push.apply(newNetworkFilters, networkFilters);\n    }\n\n    return this.update({\n      newCosmeticFilters,\n      newNetworkFilters,\n      removedCosmeticFilters: removedCosmeticFilters.map((f) => f.getId()),\n      removedNetworkFilters: removedNetworkFilters.map((f) => f.getId()),\n    });\n  }\n\n  /**\n   * Return a list of HTML filtering rules.\n   */\n  public getHtmlFilters({\n    // Page information\n    url,\n    hostname,\n    domain,\n  }: {\n    url: string;\n    hostname: string;\n    domain: string | null | undefined;\n  }): HTMLSelector[] {\n    const htmlSelectors: HTMLSelector[] = [];\n\n    if (this.config.enableHtmlFiltering === false || this.config.loadCosmeticFilters === false) {\n      return htmlSelectors;\n    }\n\n    const rules = this.cosmetics.getHtmlRules({\n      domain: domain || '',\n      hostname,\n    });\n\n    for (const rule of rules) {\n      const extended = rule.getExtendedSelector();\n      if (extended !== undefined) {\n        htmlSelectors.push(extended);\n      }\n    }\n\n    if (htmlSelectors.length !== 0) {\n      this.emit('html-filtered', htmlSelectors, url);\n    }\n\n    return htmlSelectors;\n  }\n\n  /**\n   * Given `hostname` and `domain` of a page (or frame), return the list of\n   * styles and scripts to inject in the page.\n   */\n  public getCosmeticsFilters({\n    // Page information\n    url,\n    hostname,\n    domain,\n\n    // DOM information\n    classes,\n    hrefs,\n    ids,\n\n    // Allows to specify which rules to return\n    getBaseRules = true,\n    getInjectionRules = true,\n    getExtendedRules = true,\n    getRulesFromDOM = true,\n    getRulesFromHostname = true,\n  }: {\n    url: string;\n    hostname: string;\n    domain: string | null | undefined;\n\n    classes?: string[] | undefined;\n    hrefs?: string[] | undefined;\n    ids?: string[] | undefined;\n\n    getBaseRules?: boolean;\n    getInjectionRules?: boolean;\n    getExtendedRules?: boolean;\n    getRulesFromDOM?: boolean;\n    getRulesFromHostname?: boolean;\n  }): IMessageFromBackground {\n    if (this.config.loadCosmeticFilters === false) {\n      return {\n        active: false,\n        extended: [],\n        scripts: [],\n        styles: '',\n      };\n    }\n\n    let allowGenericHides = true;\n    let allowSpecificHides = true;\n\n    const exceptions = this.hideExceptions.matchAll(\n      Request.fromRawDetails({\n        domain: domain || '',\n        hostname,\n        url,\n\n        sourceDomain: '',\n        sourceHostname: '',\n        sourceUrl: '',\n      }),\n    );\n\n    const genericHides: NetworkFilter[] = [];\n    const specificHides: NetworkFilter[] = [];\n    for (const filter of exceptions) {\n      if (filter.isElemHide()) {\n        allowGenericHides = false;\n        allowSpecificHides = false;\n        break;\n      }\n\n      if (filter.isSpecificHide()) {\n        specificHides.push(filter);\n      } else if (filter.isGenericHide()) {\n        genericHides.push(filter);\n      }\n    }\n\n    if (allowGenericHides === true) {\n      allowGenericHides = shouldApplyHideException(genericHides) === false;\n    }\n\n    if (allowSpecificHides === true) {\n      allowSpecificHides = shouldApplyHideException(specificHides) === false;\n    }\n\n    // Lookup injections as well as stylesheets\n    const { injections, stylesheet, extended } = this.cosmetics.getCosmeticsFilters({\n      domain: domain || '',\n      hostname,\n\n      classes,\n      hrefs,\n      ids,\n\n      allowGenericHides,\n      allowSpecificHides,\n\n      getBaseRules,\n      getInjectionRules,\n      getExtendedRules,\n      getRulesFromDOM,\n      getRulesFromHostname,\n    });\n\n    // Perform interpolation for injected scripts\n    const scripts: string[] = [];\n    for (const injection of injections) {\n      const script = injection.getScript(this.resources.js);\n      if (script !== undefined) {\n        this.emit('script-injected', script, url);\n        scripts.push(script);\n      }\n    }\n\n    // Emit events\n    if (stylesheet.length !== 0) {\n      this.emit('style-injected', stylesheet, url);\n    }\n\n    return {\n      active: true,\n      extended,\n      scripts,\n      styles: stylesheet,\n    };\n  }\n\n  /**\n   * Given a `request`, return all matching network filters found in the engine.\n   */\n  public matchAll(request: Request): Set<NetworkFilter> {\n    const filters: NetworkFilter[] = [];\n    if (request.isSupported) {\n      Array.prototype.push.apply(filters, this.importants.matchAll(request));\n      Array.prototype.push.apply(filters, this.filters.matchAll(request));\n      Array.prototype.push.apply(filters, this.exceptions.matchAll(request));\n      Array.prototype.push.apply(filters, this.csp.matchAll(request));\n      Array.prototype.push.apply(filters, this.hideExceptions.matchAll(request));\n      Array.prototype.push.apply(filters, this.redirects.matchAll(request));\n    }\n\n    return new Set(filters);\n  }\n\n  /**\n   * Given a \"main_frame\" request, check if some content security policies\n   * should be injected in the page.\n   */\n  public getCSPDirectives(request: Request): string | undefined {\n    if (!this.config.loadNetworkFilters) {\n      return undefined;\n    }\n\n    if (request.isSupported !== true || request.isMainFrame() === false) {\n      return undefined;\n    }\n\n    const matches = this.csp.matchAll(request);\n\n    // No $csp filter found\n    if (matches.length === 0) {\n      return undefined;\n    }\n\n    // Collect all CSP directives and keep track of exceptions\n    const disabledCsp = new Set();\n    const enabledCsp = new Set();\n    for (const filter of matches) {\n      if (filter.isException()) {\n        if (filter.csp === undefined) {\n          // All CSP directives are disabled for this site\n          return undefined;\n        }\n        disabledCsp.add(filter.csp);\n      } else {\n        enabledCsp.add(filter.csp);\n      }\n    }\n\n    // Combine all CSPs (except the black-listed ones)\n    const csps: string | undefined =\n      Array.from(enabledCsp)\n        .filter((csp) => !disabledCsp.has(csp))\n        .join('; ') || undefined;\n\n    // Emit event\n    if (csps !== undefined) {\n      this.emit('csp-injected', csps, request);\n    }\n\n    return csps;\n  }\n\n  /**\n   * Decide if a network request (usually from WebRequest API) should be\n   * blocked, redirected or allowed.\n   */\n  public match(request: Request): BlockingResponse {\n    const result: BlockingResponse = {\n      exception: undefined,\n      filter: undefined,\n      match: false,\n      redirect: undefined,\n    };\n\n    if (!this.config.loadNetworkFilters) {\n      return result;\n    }\n\n    if (request.isSupported) {\n      // Check the filters in the following order:\n      // 1. $important (not subject to exceptions)\n      // 2. redirection ($redirect=resource)\n      // 3. normal filters\n      // 4. exceptions\n      result.filter = this.importants.match(request);\n\n      let redirectNone: NetworkFilter | undefined;\n      let redirectRule: NetworkFilter | undefined;\n\n      // If `result.filter` is `undefined`, it means there was no $important\n      // filter found so far. We look for a $redirect filter.  There is some\n      // extra logic to handle special cases like redirect-rule and\n      // redirect=none.\n      //\n      // * If redirect=none is found, then cancel all redirects.\n      // * Else if redirect-rule is found, only redirect if request would be blocked.\n      // * Else if redirect is found, redirect.\n      if (result.filter === undefined) {\n        const redirects = this.redirects.matchAll(request);\n        if (redirects.length !== 0) {\n          for (const filter of redirects) {\n            if (filter.getRedirect() === 'none') {\n              redirectNone = filter;\n            } else if (filter.isRedirectRule()) {\n              redirectRule = filter;\n            } else {\n              result.filter = filter;\n            }\n          }\n        }\n\n        // If `result.filter` is still `undefined`, it means that there was no\n        // redirection rule triggered for the request. We look for a normal\n        // match.\n        if (result.filter === undefined) {\n          result.filter = this.filters.match(request);\n\n          // If we found a match, and a `$redirect-rule` as found previously,\n          // then we transform the match into a redirect, following the\n          // semantics of redirect-rule.\n          if (redirectRule !== undefined && result.filter !== undefined) {\n            result.filter = redirectRule;\n          }\n        }\n\n        // If we found either a redirection rule or a normal match, then check\n        // for exceptions which could apply on the request and un-block it.\n        if (result.filter !== undefined) {\n          result.exception = this.exceptions.match(request);\n        }\n      }\n\n      // If there was a redirect match and no exception was found, then we\n      // proceed and process the redirect rule. This means two things:\n      //\n      // 1. Check if a redirect=none rule was found, which acts as exception.\n      // 2. If no exception was found, prepare `result.redirect` response.\n      if (\n        result.filter !== undefined &&\n        result.exception === undefined &&\n        result.filter.isRedirect()\n      ) {\n        if (redirectNone !== undefined) {\n          result.exception = redirectNone;\n        } else {\n          result.redirect = this.resources.getResource(result.filter.getRedirect());\n        }\n      }\n    }\n\n    result.match = result.exception === undefined && result.filter !== undefined;\n\n    // Emit events if we found a match\n    if (result.exception !== undefined) {\n      this.emit('request-whitelisted', request, result);\n    } else if (result.redirect !== undefined) {\n      this.emit('request-redirected', request, result);\n    } else if (result.filter !== undefined) {\n      this.emit('request-blocked', request, result);\n    } else {\n      this.emit('request-allowed', request, result);\n    }\n\n    return result;\n  }\n\n  public blockScripts() {\n    this.updateFromDiff({\n      added: [block().scripts().redirectTo('javascript').toString()],\n    });\n    return this;\n  }\n\n  public blockImages() {\n    this.updateFromDiff({\n      added: [block().images().redirectTo('png').toString()],\n    });\n    return this;\n  }\n\n  public blockMedias() {\n    this.updateFromDiff({\n      added: [block().medias().redirectTo('mp4').toString()],\n    });\n    return this;\n  }\n\n  public blockFrames() {\n    this.updateFromDiff({\n      added: [block().frames().redirectTo('html').toString()],\n    });\n    return this;\n  }\n\n  public blockFonts() {\n    this.updateFromDiff({\n      added: [block().fonts().toString()],\n    });\n    return this;\n  }\n\n  public blockStyles() {\n    this.updateFromDiff({\n      added: [block().styles().toString()],\n    });\n    return this;\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\n/*!\n * Copyright (c) 2008-2009 Bjoern Hoehrmann <bjoern@hoehrmann.de>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\n// From http://bjoern.hoehrmann.de/utf-8/decoder/dfa/\nconst utf8d = new Uint8Array([\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, // 00..1f\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, // 20..3f\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, // 40..5f\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, // 60..7f\n  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9, // 80..9f\n  7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7, // a0..bf\n  8,8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2, // c0..df\n  0xa,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x4,0x3,0x3, // e0..ef\n  0xb,0x6,0x6,0x6,0x5,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8, // f0..ff\n  0x0,0x1,0x2,0x3,0x5,0x8,0x7,0x1,0x1,0x1,0x4,0x6,0x1,0x1,0x1,0x1, // s0..s0\n  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,0,1,1,1,1,1,1, // s1..s2\n  1,2,1,1,1,1,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1, // s3..s4\n  1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,3,1,1,1,1,1,1, // s5..s6\n  1,3,1,1,1,1,1,3,1,3,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1, // s7..s8\n]);\n\nfunction isAscii(bytes: Uint8Array): boolean {\n  if (bytes.length === 0) {\n    return true;\n  }\n\n  for (let i = 0; i < bytes.length; i += 1) {\n    if (bytes[i] > 127) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function isUTF8(bytes: Uint8Array): boolean {\n  if (bytes.length === 0) {\n    return true;\n  }\n\n  if (isAscii(bytes) === true) {\n    return true;\n  }\n\n  let state: number = 0;\n  for (let i = 0; i < bytes.length; i += 1) {\n    const type = utf8d[bytes[i]];\n    state = utf8d[256 + state * 16 + type];\n    if (state === 1 || state === undefined) {\n      return false;\n    }\n  }\n\n  return true;\n}\n"],"names":["newNode","chars","Map","code","undefined","EMPTY_UINT8_ARRAY","Uint8Array","SmazCompress","constructor","codebook","maxSize","this","trie","strings","node","i","length","tok","root","j","c","charCodeAt","next","get","set","create","buffer","verbatim","getCompressedSize","str","bufferIndex","verbatimIndex","inputIndex","indexAfterMatch","compress","len","flushVerbatim","slice","k","SmazDecompress","decompress","arr","byteLength","output","String","fromCharCode","stop","Smaz","compressor","decompressor","cosmeticSelectorCodebook","networkCSPCodebook","networkFilterCodebook","networkHostnameCodebook","networkRedirectCodebook","networkRawCodebook","cosmeticRawCodebook","Compression","cosmeticSelector","networkCSP","networkRedirect","networkHostname","networkFilter","networkRaw","cosmeticRaw","T","table","Int32Array","n","maxInt","base","regexNonASCII","regexSeparators","errors","overflow","error","type","RangeError","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","Math","floor","decode","input","inputLength","bias","basic","lastIndexOf","push","index","oldi","w","codePoint","t","baseMinusT","out","splice","fromCodePoint","apply","encode","counter","value","extra","ucs2decode","currentValue","basicLength","handledCPCount","m","handledCPCountPlusOne","q","qMinusT","join","toASCII","labels","replace","split","encoded","test","EMPTY_UINT32_ARRAY","Uint32Array","LITTLE_ENDIAN","Int8Array","Int16Array","promise","getCompressionSingleton","COMPRESSION","sizeOfLength","sizeOfBytes","array","align","sizeOfBytesWithLength","sizeOfASCII","sizeOfUTF8","encodedLength","sizeOfUint32Array","StaticDataView","static","options","fromUint8Array","capacity","enableCompression","Error","pos","compression","checksum","buf","start","end","C","L","crc32","dataAvailable","setPos","getPos","seekZero","checkSize","subarray","align4","pushBool","bool","pushByte","Number","getBool","Boolean","getByte","setByte","byte","octet","pushUint8","getUint8","pushBytes","bytes","pushLength","getBytes","numberOfBytes","getLength","getUint32ArrayView","desiredSize","view","byteOffset","uint8","pushUint16","uint16","getUint16","pushUint32","uint32","getUint32","pushUint32Array","getUint32Array","pushUTF8","raw","getUTF8","pushASCII","getASCII","pushNetworkRedirect","getNetworkRedirect","pushNetworkHostname","getNetworkHostname","pushNetworkCSP","getNetworkCSP","pushNetworkFilter","getNetworkFilter","pushCosmeticSelector","getCosmeticSelector","pushRawCosmetic","getRawCosmetic","pushRawNetwork","getRawNetwork","lengthShort","Config","debug","enableHtmlFiltering","enableInMemoryCache","enableMutationObserver","enableOptimizations","enablePushInjectionsOnNavigationEvents","guessRequestTypeFromUrl","integrityCheck","loadCSPFilters","loadCosmeticFilters","loadExceptionFilters","loadExtendedSelectors","loadGenericCosmeticsFilters","loadNetworkFilters","getSerializedSize","serialize","queueMicrotask","window","cb","Promise","resolve","then","catch","err","setTimeout","registerCallback","event","callback","listeners","listenersForEvent","unregisterCallback","indexOfCallback","indexOf","triggerCallback","args","size","listener","EventEmitter","onceListeners","onListeners","on","once","unsubscribe","emit","delete","fetchWithRetry","fetch","url","retry","fetchWrapper","ex","reject","fetchResource","response","text","PREFIX","adsLists","adsAndTrackingLists","fullLists","fetchLists","urls","all","map","fetchResources","NetworkBuilder","Set","prefix","infix","suffix","redirect","blockRequestsWithType","has","add","images","scripts","frames","fonts","medias","styles","redirectTo","urlContains","urlStartsWith","urlEndsWith","withHostname","hostname","toString","parts","option","block","RECURSIVE_PSEUDO_CLASSES","TOKENS","attribute","id","class","comma","combinator","TOKENS_WITH_PARENS","TOKENS_WITH_STRINGS","TRIM_TOKENS","TOKENS_FOR_RESTORE","Object","assign","splitOnMatch","pattern","lastIndex","match","exec","from","content","before","after","groups","RegExp","source","GRAMMAR","name","operator","namespace","caseSensitive","argument","subtree","restoreNested","tokens","regex","types","token","isEscaped","backslashes","gobbleQuotes","quote","gobbleParens","stack","char","selector","replacement","opening","gobble","offset","repeat","tokenize","trim","doubleQuotes","selectorWithoutDoubleQuotes","singleQuotes","selectorWithoutQuotes","parens","selectorWithoutParens","strarr","tokenizer","filter","a","every","tokenizeBy","nestTokens","list","some","selectors","temp","sub","left","right","isAST","compound","walk","o","parent","parse","recursive","ast","EXTENDED_PSEUDO_CLASSES","PSEUDO_CLASSES","PSEUDO_ELEMENTS","SelectorType","classifySelector","Normal","foundSupportedExtendedSelector","Invalid","argumentType","Extended","EXTENSIONS","extractHostname","urlIsValidHostname","hasUpper","startsWith","indexOfProtocol","protocolSize","c0","c1","c2","c3","c4","lowerCaseCode","indexOfIdentifier","indexOfClosingBracket","indexOfPort","toLowerCase","isValidHostname","lastDotIndex","lastCharCode","isValidAscii","DEFAULT_OPTIONS","allowIcannDomains","allowPrivateDomains","detectIp","mixedInputs","validHosts","validateHostname","setDefaultsImpl","parseImpl","step","suffixLookup","partialOptions","result","setDefaults","isIp","hasColon","isProbablyIpv6","numberOfDots","isProbablyIpv4","publicSuffix","domain","vhost","endsWith","shareSameDomainSuffix","publicSuffixIndex","lastDotBeforeSuffixIndex","extractDomainWithSuffix","getDomain","subdomain","getSubdomain","domainWithoutSuffix","packed","binSearch","elt","low","high","mid","midVal","BUFFER","last","isIcann","isPrivate","fastPathLookup","matchIndex","matchKind","matchLabels","numberOfHashes","maximumNumberOfLabels","hash","hashHostnameLabelsBackward","label","labelStart","TOKENS_BUFFER","reset","empty","full","remaining","HASH_SEED","bitCount","getBit","mask","setBit","clearBit","fastHashBetween","begin","fastHash","hashStrings","fastStartsWith","haystack","needle","ceil","fastStartsWithFrom","isDigit","ch","isAlpha","isAllowedCode","isAlphaExtended","isCyrillic","tokenizeInPlace","skipFirstToken","skipLastToken","min","inside","tokenizeNoSkipInPlace","tokenizeNoSkip","binLookup","hasUnicodeRe","hasUnicode","TLDTS_OPTIONS","NORMALIZED_TYPE_TOKEN","beacon","cspReport","csp_report","cspviolationreport","document","eventsource","font","image","imageset","mainFrame","main_frame","manifest","media","object","object_subrequest","other","ping","prefetch","preflight","script","signedexchange","speculative","stylesheet","subFrame","sub_frame","texttrack","webSocket","web_manifest","websocket","xhr","xml_dtd","xmlhttprequest","xslt","hashHostnameBackward","getHashesFromLabelsBackward","startOfDomain","getEntityHashesFromLabelsBackward","hostnameWithoutPublicSuffix","indexOfDot","getHostnameWithoutPublicSuffix","getHostnameHashesFromLabelsBackward","Request","requestId","tabId","sourceUrl","sourceHostname","sourceDomain","_originalRequestDetails","parsed","hostnameHashes","entityHashes","sourceHostnameHashes","sourceEntityHashes","isThirdParty","isFirstParty","isSupported","isHttp","isHttps","indexOfComa","getHostnameHashes","getEntityHashes","getTokens","isMainFrame","isSubFrame","guessTypeOfRequest","currentType","ext","endOfPath","indexOfFragment","indexOfQuery","startOfExt","extname","IMAGE_EXTENSIONS","MEDIA_EXTENSIONS","STYLE_EXTENSIONS","SCRIPT_EXTENSIONS","DOCUMENT_EXTENSIONS","FONT_EXTENSIONS","guessUrlType","Domains","entities","notEntities","hostnames","notHostnames","negation","entity","sort","optionalParts","updateId","notHostname","notEntity","estimate","extractHTMLSelectorFromRule","rule","currentParsingDepth","startOfSelectorIndex","prev","tagShouldBeRemoved","tag","plainPatterns","regexpPatterns","EMPTY_TOKENS","DEFAULT_HIDDING_STYLE","isSimpleSelector","nextCode","isSimpleHrefSelector","isValidCss","div","createElement","matches","validSelectorRe","CosmeticFilter","line","rawLine","domains","style","sharpIndex","afterSharpIndex","suffixStartIndex","indexOfStyle","selectorType","isUnicode","deserialize","isCosmeticFilter","isNetworkFilter","sizeOfCosmeticSelector","sizeOfRawCosmetic","isUnhide","isScriptInject","hasHostnameConstraint","isIdSelector","isClassSelector","endOfSelector","isHrefSelector","getSelector","hrefIndex","hrefEnd","getScript","js","scriptName","scriptArguments","firstPart","s","getId","computeFilterId","hasCustomStyle","getStyle","getStyleAttributeHash","getSelectorAST","parseCssSelector","getExtendedSelector","isExtended","isRemove","isCSS","isHtmlFiltering","isGenericHide","_a","_b","HTTP_HASH","HTTPS_HASH","FROM_ANY","REQUEST_TYPE_TO_MASK","getListOfRequestTypes","fromDocument","fromImage","fromMedia","fromObject","fromOther","fromPing","fromScript","fromStylesheet","fromSubdocument","fromWebsocket","fromXmlHttpRequest","fromFont","csp","denyallow","compileRegex","isLeftAnchor","isRightAnchor","isFullRegex","MATCH_ALL","NetworkFilter","cptMaskPositive","cptMaskNegative","filterIndexStart","filterIndexEnd","optionsIndex","rawOption","optionValue","indexOfEqual","optionMask","firstSeparator","separatorCode","setNetworkMask","indexOfSeparator","indexOfWildcard","checkIsRegex","request","isCptAllowed","fromHttps","fromHttp","firstParty","thirdParty","checkOptions","getFilter","isHostnameAnchor","filterHostname","getHostname","isFollowedByWildcard","isAnchoredByHostname","isRegex","getRegex","requestHostname","hasFilter","checkPattern","sizeOfNetworkCSP","sizeOfNetworkFilter","sizeOfNetworkHostname","sizeOfRawNetwork","sizeOfNetworkRedirect","isException","hasHostname","fromAny","numberOfCptOptions","getCptMask","getListOfRequestTypesNegated","isImportant","isRedirectRule","getRedirect","isRedirect","isCSP","isElemHide","isSpecificHide","isBadFilter","getIdWithoutBadFilter","hasDomains","getMask","precedingCh","tokenizeWithWildcardsInPlace","tokenizeRegexInPlace","cpt","isPlain","detectFilterType","firstCharCode","secondCharCode","dollarIndex","afterDollarIndex","afterDollarCharCode","afterSharpCharCode","parseFilter","filterType","parseFilters","config","networkFilters","cosmeticFilters","lines","nextLine","getFilters","concat","CONTENT_TYPE","flv","contentType","aliases","body","gif","html","ico","jpg","json","mp3","mp4","pdf","png","svg","txt","wav","webm","webp","wmv","MIME_TO_RESOURCE","resources","fake","alias","getResourceForMime","mime","Resources","numberOfResources","forEach","data","typeToResource","chunks","chunk","resource","firstNewLine","key","entries","resourcesByName","getResource","dataUrl","btoa","Buffer","estimatedSize","escape","setWithDefault","bucket","groupBy","filters","criteria","grouped","Array","values","splitBy","condition","positive","negative","OPTIMIZATIONS","description","fusion","groupByCriteria","select","patterns","f","noopOptimizeNetwork","noopOptimizeCosmetic","optimizeNetwork","fused","toFuse","group","nextPow2","v","UID","EMPTY_BUCKET","MAX_SAFE_INTEGER","ReverseIndex","optimize","tokensLookupIndexSize","bucketsIndexSize","numberOfFilters","tokensLookupIndex","bucketsIndex","filtersIndexStart","updateInternals","cache","deserializeFilter","update","iterMatchingFilters","getNextId","iterBucket","newFilters","removedFilters","clear","totalNumberOfTokens","totalNumberOfIndexedFilters","filtersTokens","estimatedBufferSize","f1","f2","histogram","max","multiTokens","suffixes","allocate","filterIndex","bestToken","minCount","tokenCount","indexInBucketsIndex","filtersForMask","startOfBucket","endOfBucket","filtersIndices","lastRequestSeen","EMPTY_FILTERS","FiltersContainer","container","bufferSizeEstimation","selected","currentFilters","storedFiltersRemoved","numberOfExistingFilters","storedFiltersAdded","createStylesheet","rules","maximumNumberOfSelectors","styleStr","createStylesheetFromRulesWithCustomStyles","selectorsPerStyle","stylesheets","selectorsPerStyleArray","createStylesheetFromRules","createLookupTokens","hostnamesHashes","entitiesHashes","CosmeticFilterBucket","genericRules","classesIndex","hostnameIndex","hrefsIndex","htmlIndex","idsIndex","unhideIndex","baseStylesheet","extraGenericRules","classSelectors","genericHideRules","hostnameSpecificRules","hrefSelectors","htmlRules","idSelectors","unHideRules","getHtmlRules","hostnameTokens","disabledRules","getCosmeticsFilters","classes","hrefs","ids","allowGenericHides","allowSpecificHides","getBaseRules","getInjectionRules","getExtendedRules","getRulesFromDOM","getRulesFromHostname","getGenericRules","sorted","compactTokens","arrays","totalSize","concatTypedArrays","href","extended","injections","injectionsDisabled","getBaseStylesheet","extendedProcessed","extendedStyles","remove","lazyPopulateGenericRulesCache","canBeHiddenSelectors","cannotBeHiddenRules","canBeHiddenRules","NetworkFilterBucket","badFilters","badFiltersIds","matchAll","isFilterDisabled","badFilter","ENGINE_VERSION","shouldApplyHideException","genericHideFilter","currentScore","score","utf8d","init","caching","path","read","write","engine","fromCached","listsPromises","resourcesPromise","lists","updateResources","fetchImpl","fromLists","serialized","serializedEngineVersion","currentPos","expected","numberOfLists","importants","redirects","exceptions","cosmetics","hideExceptions","super","newCosmeticFilters","newNetworkFilters","loadedLists","keys","hasList","removedCosmeticFilters","removedNetworkFilters","updated","removedNetworkFiltersSet","updateFromDiff","added","removed","prototype","getHtmlFilters","htmlSelectors","active","fromRawDetails","genericHides","specificHides","injection","getCSPDirectives","disabledCsp","enabledCsp","csps","exception","redirectNone","redirectRule","blockScripts","blockImages","blockMedias","blockFrames","blockFonts","blockStyles","_","extractSelectorsFromRules","flush","tags","rest","endOfLastTag","endOfTagIndex","indexOfClosingTag","lastClosingTagIndex","indexOfNextTag","extractTagsFromHtml","toRemove","filteredHtml","reverse","removeTagsFromHtml","selectTagsToRemove","prevRevision","newRevision","debugConfig","prevRevisionFilters","prevRevisionIds","newRevisionFilters","newRevisionIds","isAscii","state","details","diffs","addedCumul","removedCumul"],"mappings":"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AAUC,OAAOC,aAAaJ,EAAI1B,GAErC,MACC4B,GAAUhC,KAAKF,SAASgC,EAAI1B,IAC5BA,GAAK,EAGT,OAAO4B,CACR,QCxBUI,EAIXvC,YAAqBC,EAA6BC,EAAU,KAAvCC,KAAQF,SAARA,EACnBE,KAAKqC,WAAa,IAAIzC,EAAaE,EAAUC,GAC7CC,KAAKsC,aAAe,IAAIV,EAAe9B,EACxC,CAEMyB,SAASL,GACd,OAAOlB,KAAKqC,WAAWd,SAASL,EACjC,CAEMD,kBAAkBC,GACvB,OAAOlB,KAAKqC,WAAWpB,kBAAkBC,EAC1C,CAEMW,WAAWd,GAChB,OAAOf,KAAKsC,aAAaT,WAAWd,EACrC,ECdY,IAAAwB,EAAA,CACb,iJACA,4IACA,mEACA,qDACA,4CACA,wCACA,uCACA,qCACA,kCACA,iCACA,gCACA,+BACA,8BACA,2BACA,sBACA,qBACA,qBACA,oBACA,mBACA,mBACA,kBACA,kBACA,kBACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,eACA,eACA,cACA,cACA,aACA,aACA,aACA,aACA,aACA,aACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KC9PaC,EAAA,CACb,qJACA,wDACA,+CACA,8CACA,wCACA,qCACA,qCACA,qCACA,+BACA,4BACA,2BACA,0BACA,0BACA,0BACA,wBACA,qBACA,qBACA,oBACA,oBACA,oBACA,mBACA,gBACA,eACA,cACA,cACA,aACA,aACA,YACA,YACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KCzGaC,EAAA,CACb,yLACA,0JACA,0DACA,kDACA,gCACA,4BACA,2BACA,wBACA,wBACA,uBACA,uBACA,sBACA,mBACA,iBACA,iBACA,kBACA,kBACA,gBACA,aACA,aACA,YACA,YACA,YACA,YACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KC9PaC,EAAA,CACb,iCACA,oBACA,oBACA,oBACA,mBACA,mBACA,kBACA,gBACA,gBACA,aACA,aaC,EAAA,CACb,oCACA,mCACA,8BACA,2BACA,0BACA,uBACA,mBACA,mBACA,kBACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,cACA,aACA,aACA,YACA,YACA,YACA,WACA,WACA,UACA,UACA,UACA,SACA,QACA,QACA,OACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KC/EaC,EAAA,CACb,+BACA,+BACA,+BACA,yBACA,uBACA,uBACA,oBACA,oBACA,mBACA,mBACA,kBACA,kBACA,iBACA,iBACA,iBACA,gBACA,gBACA,kBACA,gBACA,cACA,cACA,cACA,cACA,aACA,aACA,YACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KC9PaC,EAAA,CACb,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,8BACA,6BACA,4BACA,2BACA,2BACA,0BACA,uBACA,oBACA,oBACA,mBACA,kBACA,kBACA,iBACA,gBACA,eACA,eACA,cACA,cACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KCpPY,MAAOC,EAArBjD,cACkBG,KAAA+C,iBAAyB,IAAIX,EAAKG,GAClCvC,KAAAgD,WAAmB,IAAIZ,EAAKI,GAC5BxC,KAAAiD,gBAAwB,IAAIb,EAAKO,GACjC3C,KAAAkD,gBAAwB,IAAId,EAAKM,GACjC1C,KAAAmD,cAAsB,IAAIf,EAAKK,GAC/BzC,KAAAoD,WAAmB,IAAIhB,EAAKQ,GAC5B5C,KAAAqD,YAAoB,IAAIjB,EAAKS,EAC9C,ECvBD,MAAMS,EAAgB,MACpB,IAAI7C,EAAY,EAChB,MAAM8C,EAAoB,IAAIC,WAAW,KAEzC,IAAK,IAAIC,EAAY,EAAS,MAANA,EAAWA,GAAK,EACtChD,EAAIgD,EACJhD,EAAQ,EAAJA,GAAS,UAAaA,IAAM,EAAKA,IAAM,EAC3CA,EAAQ,EAAJA,GAAS,UAAaA,IAAM,EAAKA,IAAM,EAC3CA,EAAQ,EAAJA,GAAS,UAAaA,IAAM,EAAKA,IAAM,EAC3CA,EAAQ,EAAJA,GAAS,UAAaA,IAAM,E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"}